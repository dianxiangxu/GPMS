var kSignature = "GEN2";
var kSignatureLength = kSignature.length;

var kNibbleShift = 4;
var kNibblesPerInt = 32 / kNibbleShift;
var kStartNibbleShift = 32 - kNibbleShift;

var kBitsPerInt = 32;
var kByteShift = 8;
var kBytesPerInt = 32 / kByteShift;
var kStartByteShift = 32 - kByteShift;
var encryptionKey = new Array(0x5e284ac3, 0xb7360a24, 0x8d523a70, 0xcf1048e3, 0x19b32e75, 0x74e6c2e1, 0xa0199e4c, 0x46a3ec79);
var kF = new Array(
	0xa7, 0x18, 0x6e, 0x36, 0x3b, 0x50, 0x71, 0x1d,
	0xab, 0xd3, 0x0d, 0xb2, 0x40, 0x6b, 0x7f, 0x51,
	0xdd, 0xd2, 0xb1, 0x53, 0xe1, 0x29, 0x26, 0x74,
	0x61, 0x7e, 0x48, 0x5e, 0x91, 0x38, 0x28, 0x73,
	0xed, 0xdc, 0x58, 0x69, 0x1f, 0x2b, 0x4f, 0x25,
	0x52, 0x3f, 0x9b, 0xa4, 0x65, 0x92, 0x5a, 0x47,
	0x32, 0x3e, 0xe0, 0xf6, 0x7b, 0x57, 0xb9, 0xac,
	0x99, 0xe9, 0xc5, 0x78, 0x02, 0x1b, 0x67, 0x23,
	0x72, 0x1a, 0x2d, 0x4e, 0x07, 0xd7, 0xe5, 0xc2,
	0x44, 0x83, 0x6c, 0x24, 0x08, 0x63, 0x2e, 0x62,
	0xc6, 0xd1, 0x9f, 0x4b, 0xb5, 0xfb, 0xf7, 0x9a,
	0x01, 0xff, 0x7a, 0x0b, 0x21, 0xea, 0x8a, 0xa9,
	0xaf, 0xb4, 0x89, 0xf8, 0xbc, 0xaa, 0xe3, 0x9e,
	0x4c, 0xad, 0x7c, 0x37, 0xeb, 0xf1, 0x80, 0x35,
	0xca, 0x2c, 0x70, 0x3a, 0xb6, 0x42, 0x7d, 0x95,
	0xa2, 0x5d, 0x6d, 0x09, 0x64, 0x15, 0x16, 0x04,
	0xc7, 0xcc, 0x8c, 0x5b, 0x60, 0xe2, 0x94, 0x8d,
	0xcb, 0x93, 0xb8, 0x34, 0x11, 0xc9, 0xe7, 0x5c,
	0xa0, 0x68, 0x66, 0x90, 0xe8, 0xc1, 0x81, 0x39,
	0xd9, 0x54, 0xce, 0xf0, 0xd4, 0x30, 0x98, 0x3d,
	0x85, 0xef, 0xdf, 0x10, 0xa5, 0x75, 0x88, 0x41,
	0xbe, 0xa6, 0xe4, 0xd5, 0xc3, 0x8f, 0x6a, 0x3c,
	0xe6, 0x0c, 0x05, 0x22, 0x9d, 0x59, 0x0a, 0x49,
	0xb7, 0x5f, 0xd6, 0x33, 0x55, 0xbd, 0x2a, 0xbf,
	0x1c, 0xf5, 0xc4, 0x77, 0xc0, 0x43, 0xa3, 0xbb,
	0x8e, 0x86, 0x2f, 0x76, 0xa8, 0x4d, 0x00, 0xd0,
	0x20, 0xee, 0xc8, 0x97, 0xde, 0xae, 0xda, 0x03,
	0x56, 0xf4, 0x13, 0xfe, 0xb0, 0x0e, 0x79, 0x4a,
	0x31, 0x84, 0xd8, 0xcf, 0xfa, 0x96, 0x46, 0x0f,
	0xf3, 0xb3, 0xec, 0x12, 0xfc, 0x1e, 0x14, 0xfd,
	0xf9, 0x87, 0x27, 0x45, 0x9c, 0x82, 0x8b, 0x6f,
	0x06, 0xa1, 0x19, 0xcd, 0xf2, 0xba, 0x17, 0xdb
);

var kE = new Array(
	0x67, 0x01, 0x04, 0x20, 0x1c, 0xcc, 0x8f, 0xbb,
	0x3e, 0x4f, 0x6b, 0x5b, 0xdc, 0xa0, 0xa9, 0xbc,
	0x8e, 0xc2, 0xd6, 0x74, 0x05, 0xa4, 0x16, 0xb4,
	0x25, 0x53, 0x8a, 0x5a, 0x14, 0x37, 0x97, 0x5d,
	0xb2, 0x23, 0x9c, 0x58, 0xa5, 0xae, 0x7c, 0x00,
	0x30, 0x93, 0xa6, 0xba, 0x35, 0xd5, 0x62, 0x6d,
	0x4d, 0x0c, 0xda, 0x86, 0x88, 0x56, 0xb9, 0x55,
	0x10, 0x1f, 0xa3, 0xd2, 0xc9, 0xdf, 0x77, 0xd1,
	0x60, 0x1a, 0x90, 0x4c, 0x09, 0x17, 0xd7, 0x0d,
	0xe9, 0x08, 0xed, 0x7e, 0xb1, 0x4e, 0x75, 0x3f,
	0x1b, 0x48, 0xc3, 0x2b, 0xd3, 0x18, 0xeb, 0xf9,
	0xcd, 0xab, 0x65, 0x7b, 0x0b, 0x6a, 0xb5, 0x84,
	0xb8, 0x7d, 0xec, 0x50, 0xfd, 0x3c, 0xaf, 0x73,
	0x8b, 0xf8, 0x9f, 0x7f, 0xf7, 0x2e, 0x2d, 0x2c,
	0x6c, 0x59, 0x96, 0x1e, 0xef, 0xcb, 0x80, 0x98,
	0x9e, 0xd0, 0x0a, 0x92, 0x44, 0xbf, 0x6f, 0x87,
	0xa2, 0x12, 0x51, 0xb7, 0xd4, 0xe8, 0x9d, 0xea,
	0xee, 0xfc, 0xc8, 0x69, 0xf1, 0x43, 0x26, 0x42,
	0x21, 0x94, 0x13, 0xc1, 0x06, 0x8c, 0x4b, 0xdb,
	0x3a, 0xc4, 0x4a, 0xac, 0xd8, 0x28, 0xc0, 0x15,
	0xf0, 0x52, 0xa8, 0xb6, 0x22, 0xc6, 0xaa, 0xb3,
	0x71, 0xe2, 0xbe, 0xfa, 0x02, 0x5e, 0x34, 0x33,
	0x0e, 0x45, 0xbd, 0x9a, 0x3d, 0xf4, 0xc5, 0xe1,
	0xcf, 0xe0, 0x82, 0x19, 0xe4, 0x68, 0x0f, 0xf5,
	0xb0, 0xca, 0x49, 0x81, 0x64, 0x9b, 0x78, 0xfe,
	0x6e, 0xe3, 0x79, 0x41, 0x03, 0xad, 0x38, 0x47,
	0x91, 0x57, 0x72, 0x3b, 0x24, 0x61, 0xd9, 0x7a,
	0xe7, 0xa1, 0x89, 0x63, 0x40, 0x27, 0xdd, 0xde,
	0xc7, 0xe5, 0x99, 0xf6, 0xf3, 0xf2, 0x54, 0x5c,
	0xe6, 0x83, 0x85, 0x2a, 0x5f, 0x66, 0xfb, 0x76,
	0x46, 0x8d, 0xa7, 0x39, 0x11, 0x31, 0x95, 0x1d,
	0xff, 0x07, 0xce, 0x70, 0x36, 0x2f, 0x32, 0x29
);

var kD = new Array(
	0x6f, 0x39, 0x5d, 0xa6, 0x7b, 0xc9, 0x27, 0x33,
	0x2f, 0xc0, 0xf2, 0x7c, 0xef, 0xe7, 0x8b, 0xce,
	0x85, 0x8f, 0xc6, 0x19, 0x49, 0x01, 0x7a, 0x23,
	0x5a, 0x1d, 0x03, 0xab, 0x2e, 0x56, 0x77, 0x46,
	0x6c, 0x91, 0x3b, 0xaa, 0x25, 0xb5, 0xca, 0xf3,
	0x6d, 0x83, 0xb9, 0x52, 0x24, 0xa8, 0x15, 0x1b,
	0x9d, 0x7d, 0x40, 0x84, 0x8e, 0xdb, 0x58, 0x75,
	0xe0, 0x07, 0x76, 0xc8, 0x5b, 0x48, 0x57, 0xcf,
	0xd5, 0x51, 0x94, 0xc3, 0x61, 0xcb, 0xed, 0xd7,
	0xb7, 0x53, 0xbb, 0x60, 0xa1, 0x5e, 0x50, 0x71,
	0x4b, 0x37, 0x98, 0x14, 0xdd, 0x30, 0x4a, 0xad,
	0xfb, 0x32, 0xee, 0xac, 0x00, 0xb4, 0xfa, 0x6a,
	0xd3, 0x62, 0x05, 0xb0, 0x63, 0x9c, 0xa3, 0xb8,
	0xb6, 0x65, 0x3d, 0xa0, 0xd6, 0x36, 0xde, 0xa9,
	0x1a, 0xc1, 0x97, 0x44, 0xeb, 0x93, 0xc4, 0x87,
	0x43, 0xe4, 0x89, 0x16, 0xe3, 0xf9, 0x21, 0x88,
	0x9f, 0xb2, 0x74, 0x7e, 0x2d, 0x02, 0x38, 0xdc,
	0x70, 0x8d, 0xba, 0x9b, 0x3a, 0xf5, 0xf4, 0x28,
	0x9e, 0xc2, 0x42, 0xda, 0x13, 0x41, 0xd9, 0x99,
	0x54, 0x69, 0x92, 0x5c, 0x0d, 0x72, 0x5f, 0x0b,
	0x2a, 0xfd, 0xcc, 0xe6, 0xf8, 0x0e, 0xfc, 0x04,
	0xe8, 0x96, 0x6e, 0x8a, 0x80, 0xe2, 0x7f, 0x67,
	0xc7, 0xbd, 0x79, 0xaf, 0xbc, 0xf0, 0x95, 0xe5,
	0xa2, 0x64, 0xae, 0xd0, 0xdf, 0xd4, 0x4c, 0x68,
	0x3f, 0x31, 0xe9, 0xd8, 0x78, 0x0f, 0x1e, 0x82,
	0x2c, 0xec, 0x8c, 0x35, 0xf1, 0x1c, 0x3c, 0xa4,
	0x26, 0xff, 0xb1, 0xbf, 0xf6, 0x45, 0x4f, 0xea,
	0xd2, 0xd1, 0x0a, 0xa5, 0xf7, 0x55, 0xe1, 0x20,
	0xcd, 0x0c, 0x22, 0x86, 0xb3, 0x34, 0x81, 0x4e,
	0x73, 0x10, 0x08, 0xa7, 0xfe, 0x1f, 0x47, 0x2b,
	0x66, 0x90, 0x18, 0x6b, 0x06, 0x09, 0x12, 0x11,
	0xc5, 0x4d, 0xbe, 0x29, 0x59, 0x9a, 0x3e, 0x17
);

var kC = new Array(
	0x0d, 0xd7, 0xbe, 0x23, 0x9e, 0x5d, 0xac, 0x7a,
	0x1e, 0x92, 0xf8, 0xd3, 0x1a, 0x21, 0xfe, 0x4d,
	0x8c, 0xa2, 0x4c, 0x3d, 0x22, 0x70, 0x06, 0x24,
	0x9a, 0x12, 0x33, 0x15, 0x56, 0x9c, 0x68, 0x4b,
	0x95, 0x53, 0xbc, 0x7e, 0x29, 0x2f, 0x36, 0x2e,
	0xaa, 0x2b, 0x76, 0x52, 0x4f, 0x6e, 0x50, 0x69,
	0xa7, 0x66, 0xf3, 0x80, 0xf4, 0x5f, 0x6f, 0xbb,
	0x57, 0x87, 0x43, 0x26, 0x86, 0x0b, 0xd6, 0x73,
	0xb6, 0x19, 0xc3, 0xef, 0x90, 0xbd, 0x40, 0x54,
	0x45, 0x83, 0x5c, 0x5e, 0x1f, 0x71, 0x1d, 0xb8,
	0xc4, 0xed, 0xb4, 0xf6, 0xd2, 0x27, 0xcd, 0xa3,
	0x64, 0x03, 0x9d, 0xe4, 0xe7, 0x2c, 0xfa, 0xa5,
	0x74, 0xe0, 0x8a, 0xf7, 0xd4, 0xd5, 0x47, 0x00,
	0xe6, 0xe3, 0xa9, 0x85, 0xc9, 0x37, 0x08, 0x98,
	0x4e, 0xe2, 0xca, 0x79, 0x28, 0x09, 0x2a, 0xea,
	0xfc, 0xcc, 0xc7, 0x38, 0x3b, 0xe5, 0x42, 0xdc,
	0x8e, 0x49, 0xd0, 0xd8, 0xb5, 0xfb, 0x3c, 0xc8,
	0x0a, 0x81, 0x51, 0xbf, 0x99, 0x7b, 0x5b, 0xee,
	0xc0, 0x02, 0xdb, 0x4a, 0x17, 0xd9, 0x96, 0x31,
	0x5a, 0xcf, 0xf0, 0x65, 0x82, 0x7c, 0x59, 0x46,
	0xb2, 0xc2, 0x41, 0x2d, 0x10, 0x60, 0x84, 0x62,
	0x04, 0xe1, 0x7f, 0xae, 0x18, 0xec, 0x6d, 0x63,
	0x34, 0xc1, 0xb1, 0x35, 0xdd, 0x55, 0x16, 0xda,
	0x07, 0xab, 0xc5, 0x44, 0x11, 0x0e, 0x91, 0xd1,
	0xf9, 0xa6, 0xa4, 0x1c, 0x25, 0xa0, 0xe9, 0xfd,
	0x8f, 0xe8, 0xb9, 0x75, 0xa8, 0x61, 0xdf, 0xf1,
	0xf5, 0x7d, 0xaf, 0xb7, 0x39, 0x89, 0x0f, 0x72,
	0x67, 0x97, 0x13, 0x14, 0x32, 0xce, 0x9b, 0x3a,
	0x05, 0x88, 0x8d, 0x6c, 0x78, 0x9f, 0xf2, 0xcb,
	0x01, 0x30, 0xb0, 0x3f, 0xff, 0xa1, 0x77, 0x6b,
	0x20, 0xba, 0x94, 0x6a, 0xc6, 0x48, 0x1b, 0x8b,
	0xeb, 0x93, 0xad, 0x0c, 0xb3, 0xde, 0x3e, 0x58
);

var kB = new Array(
	0x43, 0x08, 0x3f, 0xe5, 0xe2, 0xf6, 0x2f, 0x07,
	0x8f, 0xd0, 0x35, 0x93, 0x1b, 0x62, 0x13, 0x57,
	0x58, 0x8b, 0x80, 0xde, 0xc0, 0xfd, 0xe9, 0xb0,
	0x98, 0x94, 0x47, 0x16, 0x75, 0x86, 0x78, 0x04,
	0x7b, 0x68, 0x87, 0x24, 0xbb, 0xcf, 0x29, 0x17,
	0x9a, 0x3d, 0x69, 0x1f, 0xb5, 0x67, 0x19, 0x4b,
	0x5d, 0x1a, 0x36, 0x0f, 0x49, 0x6f, 0xf2, 0x84,
	0xcd, 0x2a, 0xc9, 0xb9, 0xe3, 0x4e, 0x2b, 0xf3,
	0xaf, 0xfe, 0x46, 0x32, 0x10, 0xa7, 0x59, 0xf7,
	0x74, 0x06, 0x9d, 0xf9, 0x12, 0x76, 0x01, 0x7e,
	0xcc, 0x14, 0xef, 0xee, 0x91, 0xe1, 0xda, 0x41,
	0x0d, 0x20, 0x82, 0xa2, 0x89, 0x6d, 0x51, 0xb8,
	0xec, 0x21, 0xa8, 0xbe, 0x50, 0x88, 0xd8, 0x92,
	0x72, 0x55, 0xd5, 0x9f, 0x18, 0xce, 0xac, 0x09,
	0x70, 0xa6, 0x79, 0xb1, 0x30, 0x95, 0x54, 0xb7,
	0xff, 0x39, 0xe0, 0xc7, 0x8d, 0x60, 0xa5, 0x5f,
	0xca, 0x3c, 0x64, 0xdd, 0x9c, 0xe8, 0xa3, 0x45,
	0x99, 0xd4, 0x81, 0x03, 0x6a, 0x6b, 0x8e, 0xbc,
	0x8c, 0x7d, 0xfa, 0xc1, 0x56, 0x31, 0xa4, 0xad,
	0xcb, 0xe4, 0x48, 0xba, 0x61, 0xae, 0xdc, 0xd7,
	0xc3, 0x7f, 0xc2, 0x22, 0xab, 0xb6, 0x53, 0x37,
	0x3e, 0x5c, 0xc4, 0xd3, 0x4a, 0xd2, 0x4f, 0x4c,
	0xf5, 0x42, 0x15, 0x9b, 0xed, 0x40, 0x5e, 0x52,
	0xf1, 0x38, 0xfc, 0x63, 0x7a, 0x3a, 0x6e, 0x5b,
	0x7c, 0x11, 0x77, 0x65, 0xd6, 0x73, 0x0b, 0xc8,
	0x0e, 0x05, 0x4d, 0xb2, 0x1c, 0xf8, 0xea, 0x23,
	0x96, 0xa1, 0x0a, 0x26, 0x83, 0x34, 0xbf, 0xa9,
	0xe6, 0xaa, 0xeb, 0xdb, 0x8a, 0xd9, 0x28, 0xf0,
	0x6c, 0x2e, 0x3b, 0xe7, 0xf4, 0x2d, 0x25, 0x9e,
	0x2c, 0x5a, 0xfb, 0xb4, 0x33, 0xbd, 0x66, 0xb3,
	0x00, 0x0c, 0xa0, 0x85, 0xdf, 0x71, 0x1e, 0xc6,
	0x97, 0x27, 0xd1, 0x02, 0xc5, 0x90, 0x44, 0x1d
);

var kA = new Array(
	0x60, 0x69, 0x92, 0x8a, 0x28, 0x56, 0xa5, 0x8d,
	0x7a, 0x13, 0xc5, 0x49, 0x97, 0x55, 0xcc, 0x5c,
	0x52, 0xf5, 0x5d, 0x22, 0x27, 0xe6, 0x2f, 0x86,
	0x5a, 0xa6, 0x25, 0xf6, 0x8e, 0x06, 0x9a, 0x1b,
	0x78, 0xc7, 0xce, 0x44, 0x9c, 0x38, 0xd5, 0xbd,
	0x29, 0x45, 0x12, 0x66, 0x17, 0xd6, 0x39, 0x57,
	0xb5, 0xaa, 0xb0, 0x6b, 0xa2, 0x24, 0x1a, 0xec,
	0x62, 0x09, 0xc3, 0xf7, 0x1e, 0x34, 0xc9, 0x5e,
	0x79, 0x08, 0xdf, 0x6f, 0x7d, 0x6a, 0x5b, 0xca,
	0x02, 0xb6, 0x83, 0x4a, 0xdc, 0x91, 0x0b, 0x0d,
	0x4e, 0xaf, 0x7b, 0x90, 0xe8, 0x87, 0x3e, 0x50,
	0x05, 0xbf, 0x89, 0x6d, 0x9e, 0x31, 0xde, 0x4d,
	0xe3, 0x82, 0xd3, 0x99, 0x88, 0xa8, 0x64, 0xe5,
	0x1d, 0xeb, 0x2b, 0x07, 0x3a, 0xc6, 0x42, 0x4f,
	0xb2, 0x59, 0xfe, 0x73, 0xb1, 0xf8, 0xac, 0x61,
	0x16, 0x00, 0x03, 0xad, 0xb4, 0x54, 0x3b, 0x0c,
	0x0e, 0xf0, 0x41, 0x32, 0xd9, 0xf4, 0x96, 0xfd,
	0xea, 0xfa, 0xff, 0x46, 0x75, 0x3d, 0x95, 0x2a,
	0x6e, 0x1f, 0x36, 0x7e, 0xd0, 0x2e, 0x1c, 0x30,
	0x18, 0x21, 0x63, 0x20, 0xfb, 0xb7, 0x7c, 0xe9,
	0xa0, 0xf3, 0xc1, 0x94, 0x71, 0x4b, 0xdd, 0x77,
	0xd8, 0xdb, 0xa7, 0x33, 0xbc, 0xe4, 0x4c, 0xc2,
	0x01, 0x58, 0x81, 0x80, 0x6c, 0x14, 0xb8, 0x3c,
	0xcf, 0x9f, 0x53, 0x26, 0x98, 0x85, 0x40, 0x47,
	0x8f, 0xf9, 0x9d, 0xd2, 0xee, 0xd1, 0x2d, 0x3f,
	0xd4, 0x70, 0xae, 0x2c, 0x04, 0x8c, 0x9b, 0xe2,
	0x19, 0x8b, 0x7f, 0x5f, 0xcb, 0x43, 0xa9, 0xf2,
	0xab, 0x68, 0xba, 0xef, 0x0a, 0xd7, 0x72, 0x67,
	0x37, 0xc0, 0x0f, 0x84, 0xe1, 0x11, 0xbe, 0xcd,
	0xb3, 0x48, 0xc8, 0x35, 0xfc, 0x15, 0x10, 0xda,
	0xb9, 0xa1, 0xed, 0xa4, 0x51, 0x74, 0xa3, 0x23,
	0xc4, 0x76, 0xe0, 0x93, 0x65, 0xf1, 0xe7, 0xbb
);

var k9 = new Array(
	0xa1, 0x9c, 0xbf, 0x17, 0x23, 0xc6, 0x2a, 0x2d,
	0x1c, 0x30, 0x64, 0x39, 0x16, 0xe0, 0x5a, 0xfc,
	0x69, 0x97, 0x19, 0x35, 0x26, 0x0c, 0x04, 0x58,
	0xb7, 0x01, 0x99, 0xf1, 0xe6, 0x12, 0x9f, 0x7a,
	0x49, 0x8f, 0x46, 0x33, 0x3c, 0x4e, 0x38, 0xb4,
	0xce, 0x5c, 0xe1, 0xea, 0x28, 0x3e, 0x45, 0x54,
	0x79, 0xf7, 0xfb, 0xe2, 0x50, 0x52, 0x27, 0xae,
	0xdb, 0x88, 0x92, 0xc2, 0x34, 0x02, 0x00, 0x14,
	0x1e, 0xa0, 0xdf, 0x67, 0x8a, 0xa6, 0x8c, 0x83,
	0xb3, 0x0d, 0x0a, 0x4a, 0x22, 0xa4, 0x0b, 0x57,
	0x56, 0x53, 0xac, 0xf9, 0xd0, 0xab, 0x87, 0x2e,
	0x07, 0xeb, 0xb5, 0x62, 0x9a, 0xe7, 0x81, 0x18,
	0x3d, 0x7b, 0x24, 0xa3, 0x55, 0x4d, 0xd7, 0xd4,
	0x66, 0x06, 0xf6, 0x3a, 0x7c, 0x6f, 0x78, 0x47,
	0x82, 0x1b, 0x4c, 0xcc, 0xc7, 0xd5, 0x11, 0x8e,
	0xd1, 0x1d, 0xa2, 0xec, 0x08, 0xcd, 0xd6, 0x75,
	0xc4, 0xa9, 0xef, 0x86, 0xa7, 0xe3, 0x3f, 0xb6,
	0x8b, 0xbe, 0xd2, 0x5d, 0x70, 0xa8, 0xc5, 0xbb,
	0xfe, 0x85, 0x1a, 0xe5, 0xf8, 0xdc, 0x3b, 0x9d,
	0x95, 0xb1, 0x84, 0xde, 0x9e, 0x29, 0x2b, 0x36,
	0x1f, 0xe4, 0x4f, 0xad, 0x6c, 0xe9, 0x7f, 0xf2,
	0xaf, 0x0e, 0x10, 0xfa, 0x8d, 0x68, 0xee, 0xd8,
	0x80, 0xc9, 0x6e, 0x15, 0x5f, 0xcb, 0x2f, 0x21,
	0x60, 0x65, 0xc3, 0x2c, 0x94, 0xca, 0x5b, 0x32,
	0x72, 0xc0, 0x31, 0x73, 0x43, 0xcf, 0x25, 0x59,
	0xd3, 0x20, 0x03, 0xd9, 0x9b, 0x90, 0x6a, 0xf0,
	0x6d, 0x76, 0x13, 0x74, 0x63, 0xff, 0xf5, 0xc8,
	0xed, 0xbd, 0xc1, 0x96, 0x93, 0x0f, 0xe8, 0x5e,
	0x91, 0xda, 0xbc, 0x41, 0x7e, 0xaa, 0x51, 0x44,
	0xb9, 0x4b, 0x42, 0x05, 0x7d, 0xb0, 0x40, 0xf3,
	0xfd, 0xdd, 0x77, 0x09, 0x89, 0x71, 0x6b, 0xf4,
	0x37, 0xa5, 0x48, 0x61, 0xba, 0xb8, 0xb2, 0x98
);

var k8 = new Array(
	0x8d, 0x80, 0xe2, 0xe3, 0x57, 0x30, 0x6f, 0x0e,
	0x09, 0x90, 0x3e, 0xa8, 0xc4, 0x8c, 0xf0, 0x55,
	0x6a, 0x0b, 0x5b, 0x29, 0xca, 0x58, 0x03, 0xb6,
	0xfd, 0x7c, 0x81, 0x20, 0xb8, 0xc0, 0xe8, 0xd2,
	0x12, 0xbb, 0x9b, 0x61, 0x56, 0xd4, 0x0c, 0x52,
	0xf9, 0x89, 0x7b, 0x40, 0x69, 0xa3, 0xda, 0xf2,
	0x19, 0x99, 0x1d, 0x7a, 0xc1, 0x8a, 0x65, 0x4d,
	0xac, 0x82, 0x63, 0xb2, 0x32, 0x2e, 0xd8, 0xb5,
	0x17, 0x5f, 0x43, 0x07, 0x5c, 0xa7, 0xfe, 0x1f,
	0xaa, 0x67, 0x5d, 0x59, 0xa1, 0x86, 0x15, 0xb4,
	0x3a, 0xd7, 0x21, 0xad, 0xe4, 0x68, 0x3d, 0xdd,
	0xcf, 0xed, 0x14, 0x1c, 0x3b, 0x5e, 0x77, 0x75,
	0x2b, 0x4a, 0x9a, 0x35, 0xd0, 0x28, 0xbe, 0x08,
	0x33, 0xc9, 0x3c, 0xd5, 0xbc, 0x97, 0x7e, 0x01,
	0x84, 0xa4, 0x98, 0xf4, 0xea, 0x10, 0xfa, 0xee,
	0x85, 0xa5, 0xb1, 0x9d, 0x83, 0x26, 0xb0, 0x0f,
	0x06, 0x95, 0x8e, 0x54, 0xcc, 0x31, 0x37, 0xe5,
	0xe1, 0x8b, 0x92, 0xf1, 0xef, 0xb3, 0x41, 0x62,
	0x04, 0xf8, 0xc6, 0xbf, 0x88, 0x38, 0x8f, 0x6d,
	0x44, 0xc2, 0x47, 0x96, 0xa9, 0xf3, 0xbd, 0xae,
	0x23, 0x76, 0xc7, 0x3f, 0xcd, 0xfb, 0x42, 0xe6,
	0x7f, 0x0d, 0xec, 0x87, 0xde, 0xdb, 0x05, 0x1a,
	0x2c, 0x70, 0x49, 0x25, 0x36, 0xe0, 0x4e, 0x93,
	0x74, 0x24, 0x39, 0x5a, 0x9c, 0xd6, 0x7d, 0x72,
	0x22, 0xdf, 0x64, 0xf7, 0x51, 0x50, 0x9f, 0x79,
	0x94, 0x6b, 0xf6, 0xd3, 0x2a, 0x60, 0xfc, 0x02,
	0x48, 0xd9, 0xe9, 0xb7, 0x46, 0x2d, 0x78, 0x53,
	0x73, 0xdc, 0xe7, 0xa2, 0x2f, 0x4b, 0xf5, 0x27,
	0x16, 0xeb, 0x71, 0x45, 0x00, 0xce, 0x0a, 0x9e,
	0x18, 0x4c, 0x4f, 0xff, 0xc3, 0xc5, 0xa6, 0x66,
	0x1b, 0x11, 0x13, 0xab, 0xaf, 0xba, 0xa0, 0xcb,
	0x6c, 0xc8, 0xb9, 0x6e, 0xd1, 0x34, 0x91, 0x1e
);

var k7 = new Array(
	0xe8, 0x09, 0x69, 0x6d, 0x0a, 0x9e, 0x84, 0x08,
	0x2a, 0x3e, 0xec, 0x3d, 0x43, 0x34, 0x46, 0x21,
	0xdb, 0x4b, 0x2c, 0x7b, 0xcb, 0xf2, 0x64, 0x7a,
	0x6f, 0x3f, 0xa1, 0x68, 0x5a, 0x36, 0x28, 0xe3,
	0x58, 0x8e, 0x24, 0xce, 0xfd, 0xbe, 0x98, 0x89,
	0xb5, 0x8c, 0x2e, 0xd7, 0x1c, 0xe0, 0x20, 0x7f,
	0xc9, 0x49, 0x8a, 0x6c, 0xb1, 0x17, 0x7e, 0x3c,
	0x47, 0x62, 0x04, 0x01, 0x0b, 0xe2, 0x5f, 0x52,
	0xdc, 0x1a, 0x2b, 0xd4, 0x97, 0x76, 0x9c, 0xc5,
	0xf4, 0x07, 0x37, 0xc2, 0x74, 0x7c, 0x30, 0x54,
	0x41, 0x1e, 0xfc, 0xbb, 0x9f, 0x0d, 0xee, 0x83,
	0xa2, 0xad, 0x78, 0x0f, 0x4f, 0x51, 0x00, 0xa0,
	0xe5, 0x8b, 0x12, 0x91, 0x1d, 0x40, 0x5e, 0xc8,
	0xdf, 0x19, 0x14, 0xd2, 0xff, 0x92, 0xf5, 0xa9,
	0x16, 0x75, 0x53, 0xd3, 0x5d, 0x94, 0xc0, 0x77,
	0xea, 0xf8, 0x80, 0x22, 0xbd, 0x3a, 0xef, 0x81,
	0xb3, 0x71, 0x87, 0x18, 0xac, 0xf3, 0x5c, 0x79,
	0xde, 0xd0, 0xd9, 0x6b, 0xc1, 0x44, 0x66, 0xca,
	0xc7, 0x55, 0xb2, 0x93, 0x90, 0x3b, 0x73, 0x57,
	0xc6, 0xda, 0xb9, 0xe6, 0x95, 0x23, 0xd1, 0x05,
	0x2d, 0x61, 0x1f, 0x88, 0xaa, 0xa6, 0xb7, 0xa4,
	0xbf, 0xd6, 0x70, 0x5b, 0x6e, 0x11, 0x9b, 0xed,
	0x4a, 0xa5, 0x35, 0x26, 0x25, 0xe7, 0xc3, 0xba,
	0xbc, 0xa3, 0xe1, 0xaf, 0x38, 0x85, 0x33, 0xe9,
	0xeb, 0x56, 0x48, 0x50, 0xcc, 0x4d, 0x8f, 0xcf,
	0xae, 0x86, 0x1b, 0xdd, 0x42, 0xb6, 0xfe, 0xfb,
	0xab, 0xd8, 0xb8, 0x8d, 0xcd, 0x72, 0x4c, 0x10,
	0x67, 0xc4, 0x59, 0xf7, 0xb0, 0x99, 0xf1, 0xf9,
	0x03, 0x65, 0x0e, 0xb4, 0x27, 0x7d, 0xd5, 0xf0,
	0x4e, 0xe4, 0x0c, 0x63, 0x39, 0x29, 0xf6, 0xa8,
	0x45, 0xfa, 0x6a, 0x2f, 0x31, 0x9a, 0xa7, 0x32,
	0x02, 0x60, 0x82, 0x15, 0x06, 0x13, 0x9d, 0x96
);

var k6 = new Array(
	0x47, 0xcd, 0x38, 0x93, 0xee, 0x6c, 0xa4, 0xcf,
	0xb0, 0xfe, 0x9b, 0x2c, 0x14, 0x0f, 0xdb, 0x80,
	0x55, 0xb5, 0x3a, 0x7e, 0xfc, 0x85, 0xb1, 0xc2,
	0x27, 0xbe, 0x73, 0x7b, 0x94, 0x1b, 0x02, 0x40,
	0x10, 0x44, 0x43, 0x34, 0xd6, 0x59, 0x77, 0xc3,
	0x3f, 0x5a, 0xf4, 0x2d, 0xdf, 0x9d, 0x1a, 0xf6,
	0x5f, 0x4d, 0x92, 0x8a, 0xc0, 0x09, 0xb3, 0x46,
	0xbc, 0x57, 0x4e, 0x72, 0xd1, 0x5b, 0x82, 0x45,
	0xe1, 0x6f, 0x8b, 0x4f, 0x03, 0x79, 0x32, 0x7f,
	0xde, 0xcc, 0xea, 0xac, 0x6e, 0x76, 0x42, 0x75,
	0x12, 0x9a, 0x98, 0xc6, 0xfb, 0xef, 0xc7, 0x1d,
	0x9c, 0x7a, 0x6a, 0xb4, 0xeb, 0xf1, 0xd5, 0x64,
	0x4c, 0xbf, 0x4a, 0x88, 0xcb, 0x97, 0xf3, 0x70,
	0x5e, 0x39, 0xad, 0x33, 0x87, 0xfd, 0x4b, 0xa6,
	0xbb, 0x7c, 0xa3, 0xaa, 0x23, 0xd7, 0xff, 0xe5,
	0xe6, 0x28, 0xa2, 0x17, 0xa5, 0xb6, 0x83, 0xdc,
	0x15, 0x8c, 0xd8, 0xa9, 0x67, 0x5d, 0x07, 0x90,
	0x89, 0x66, 0xa8, 0x8e, 0x0a, 0x78, 0xce, 0x0d,
	0x5c, 0x61, 0xc4, 0xd0, 0x2b, 0xca, 0xa1, 0xa0,
	0x16, 0x62, 0x52, 0x22, 0x65, 0xfa, 0x7d, 0xbd,
	0xec, 0xda, 0x9e, 0x95, 0x3b, 0xaf, 0x0c, 0x48,
	0x8d, 0x63, 0xb8, 0x60, 0x86, 0xd3, 0xc8, 0x71,
	0xf0, 0x56, 0x96, 0x49, 0xe7, 0xae, 0x3c, 0x6d,
	0xa7, 0xf8, 0x29, 0xc5, 0x69, 0x04, 0xd4, 0x99,
	0x0b, 0x35, 0xab, 0x1e, 0xe3, 0xe0, 0xd2, 0x24,
	0x1f, 0x50, 0xb7, 0x3d, 0x9f, 0x53, 0x91, 0xf5,
	0x51, 0xf9, 0xf2, 0x19, 0x2f, 0x25, 0x84, 0x74,
	0xd9, 0x00, 0x08, 0x54, 0x30, 0x68, 0x20, 0x37,
	0x01, 0x2e, 0x58, 0x41, 0x05, 0x0e, 0x2a, 0x1c,
	0xe9, 0xc9, 0xf7, 0xba, 0x36, 0x6b, 0x81, 0x3e,
	0x11, 0x06, 0xe8, 0xdd, 0x18, 0xb2, 0x26, 0xe2,
	0xe4, 0x31, 0x21, 0xc1, 0x13, 0xed, 0x8f, 0xb9
);

var k5 = new Array(
	0x08, 0x8e, 0xcd, 0xc6, 0xa7, 0xc0, 0x72, 0xaa,
	0xd8, 0x50, 0xdd, 0x60, 0x52, 0x09, 0x46, 0xc1,
	0x8b, 0xf8, 0xbf, 0x2e, 0x57, 0x42, 0xa0, 0x94,
	0xdf, 0x88, 0xf1, 0x7e, 0xb9, 0x96, 0x35, 0x51,
	0xe7, 0x84, 0x10, 0x58, 0x02, 0x3e, 0x65, 0x30,
	0xcf, 0x53, 0x4d, 0x5d, 0x78, 0x34, 0x5a, 0x63,
	0xdb, 0xd1, 0x24, 0x31, 0x83, 0x5f, 0x40, 0xc3,
	0xb3, 0x8a, 0xf7, 0x49, 0xa9, 0x4e, 0x6f, 0x77,
	0x70, 0x67, 0x56, 0xfd, 0x71, 0x28, 0x0a, 0x9b,
	0xff, 0xde, 0x1d, 0x76, 0xf2, 0x8d, 0xd7, 0xd3,
	0x1e, 0x85, 0x82, 0x04, 0x7f, 0x17, 0xb5, 0xaf,
	0xa4, 0xea, 0xba, 0x98, 0x9f, 0x92, 0x6c, 0x90,
	0xe0, 0xac, 0xec, 0x0e, 0x1c, 0x47, 0x9c, 0x0c,
	0xf4, 0x7c, 0xc5, 0xf5, 0x89, 0xa2, 0xe1, 0xa3,
	0x48, 0x99, 0xee, 0xfe, 0x1f, 0x2f, 0xad, 0x2c,
	0x2a, 0x5e, 0x39, 0x0f, 0x21, 0x01, 0x36, 0x11,
	0xc4, 0x26, 0x7a, 0x87, 0x64, 0x07, 0x75, 0xbb,
	0x45, 0xa1, 0x69, 0x4a, 0x66, 0x03, 0xb0, 0x81,
	0xb4, 0x2b, 0x22, 0xd6, 0x25, 0x1b, 0xb7, 0xb1,
	0x4f, 0xe4, 0x23, 0x19, 0x86, 0x73, 0xda, 0xb8,
	0x7d, 0xc9, 0x74, 0x33, 0xce, 0x15, 0xbd, 0x6a,
	0x43, 0x1a, 0xe3, 0x7b, 0x05, 0x16, 0x4c, 0x2d,
	0x93, 0xc7, 0xab, 0x18, 0x3b, 0x6b, 0x91, 0xca,
	0x44, 0x59, 0xa6, 0xdc, 0xe5, 0xeb, 0xd4, 0x62,
	0x80, 0xfa, 0x6d, 0xd0, 0xbc, 0x38, 0x12, 0xf3,
	0xb2, 0x3d, 0x9a, 0xa8, 0x27, 0x3c, 0x14, 0x9e,
	0xe8, 0x8f, 0xcc, 0x41, 0x68, 0x4b, 0xe9, 0xf0,
	0x54, 0x3a, 0xe2, 0xf9, 0x61, 0x32, 0xe6, 0x13,
	0xed, 0xc8, 0x9d, 0xf6, 0x0d, 0xfb, 0x5c, 0xcb,
	0x6e, 0xbe, 0x3f, 0xc2, 0x5b, 0x79, 0x37, 0xae,
	0xb6, 0x97, 0xef, 0x00, 0x95, 0xd2, 0x55, 0xd9,
	0x8c, 0xfc, 0x20, 0xd5, 0x0b, 0x29, 0x06, 0xa5
);

var k4 = new Array(
	0x4e, 0xe4, 0x03, 0x7b, 0xc7, 0x67, 0xbb, 0x5f,
	0x1c, 0x33, 0x55, 0x02, 0xcb, 0x53, 0x31, 0x78,
	0xc2, 0x18, 0x35, 0x51, 0x05, 0x3b, 0x1e, 0xfb,
	0x1a, 0x4b, 0x26, 0x10, 0x63, 0x88, 0xf5, 0xd6,
	0x27, 0xe5, 0xe6, 0xb6, 0x54, 0x66, 0x2b, 0x50,
	0x43, 0xc6, 0x09, 0x37, 0x8b, 0xa4, 0x3a, 0x56,
	0x32, 0xb4, 0xec, 0x47, 0x7d, 0xf7, 0xef, 0x85,
	0xe0, 0x77, 0x65, 0xa5, 0xdc, 0xb8, 0x75, 0x3e,
	0x04, 0x8c, 0x17, 0x59, 0x25, 0xda, 0xd7, 0xc5,
	0x4a, 0xa0, 0xa8, 0xfd, 0x48, 0xdb, 0x9c, 0x79,
	0x14, 0x0e, 0x99, 0xd0, 0x01, 0xb9, 0x23, 0x83,
	0xe9, 0x90, 0xaa, 0xd2, 0xd5, 0xdf, 0x7a, 0x41,
	0x87, 0x5b, 0x0b, 0xac, 0xeb, 0x40, 0x8a, 0xb3,
	0x93, 0xc0, 0x7c, 0xaf, 0x3d, 0xd1, 0x95, 0xf2,
	0x57, 0xae, 0x11, 0xf0, 0x52, 0x9e, 0xc9, 0x9a,
	0x81, 0xfc, 0xb5, 0x8f, 0x6e, 0xe8, 0x3c, 0xfe,
	0xea, 0x86, 0xff, 0xb0, 0x9d, 0x94, 0x92, 0x38,
	0x68, 0xf6, 0xbd, 0xcc, 0x19, 0xc1, 0xde, 0xd4,
	0xbf, 0xf9, 0x0a, 0xfa, 0x49, 0x70, 0xc3, 0xd8,
	0xe7, 0x0c, 0x74, 0x4f, 0x62, 0x4c, 0x71, 0x8e,
	0xa7, 0x3f, 0x5e, 0x61, 0xb2, 0xd9, 0x08, 0x24,
	0xd3, 0xa1, 0x6a, 0x73, 0xf4, 0x72, 0xcd, 0xf3,
	0x13, 0xe2, 0x07, 0x21, 0x64, 0x76, 0x58, 0xca,
	0x39, 0x98, 0x44, 0x00, 0x8d, 0xee, 0x2a, 0x5a,
	0x6c, 0x4d, 0x7e, 0x30, 0xb1, 0x0f, 0x2d, 0x1d,
	0x89, 0x2e, 0x46, 0x45, 0xa6, 0x0d, 0xab, 0x12,
	0xad, 0x7f, 0xbc, 0x36, 0x1f, 0x60, 0xa3, 0x1b,
	0x29, 0x9b, 0xdd, 0x80, 0xf8, 0x28, 0x16, 0xce,
	0x82, 0xed, 0xcf, 0xb7, 0x06, 0xba, 0xf1, 0x91,
	0xbe, 0xc4, 0x2f, 0x97, 0x69, 0xa2, 0x20, 0x15,
	0x6b, 0x96, 0x34, 0x84, 0x6d, 0x42, 0xe1, 0x6f,
	0x9f, 0xc8, 0x5c, 0x2c, 0xa9, 0x5d, 0xe3, 0x22
);

var k3 = new Array(
	0xcf, 0xc4, 0x13, 0x49, 0x5e, 0xde, 0xc6, 0x22,
	0xd5, 0xd0, 0x81, 0x64, 0x44, 0x0c, 0x19, 0x05,
	0x2c, 0x7f, 0x5d, 0xc5, 0xf0, 0x84, 0xef, 0x09,
	0x50, 0x14, 0xa9, 0xe2, 0xba, 0xaa, 0x8b, 0x40,
	0x76, 0x06, 0x26, 0x03, 0x11, 0xb8, 0x80, 0x43,
	0x79, 0x88, 0x8d, 0x91, 0x63, 0x31, 0xa1, 0x1c,
	0xa4, 0x9a, 0x6e, 0x9c, 0x90, 0xe5, 0x33, 0xf1,
	0xe9, 0xb0, 0xcb, 0x70, 0x53, 0x28, 0x7c, 0x35,
	0x12, 0x92, 0x5f, 0x95, 0x62, 0x25, 0x6b, 0x08,
	0x1f, 0xdb, 0xb7, 0xc8, 0x8f, 0x6d, 0x73, 0x20,
	0x41, 0x0d, 0xbc, 0x30, 0x8a, 0xbd, 0x24, 0x1a,
	0xa0, 0x60, 0x23, 0x4c, 0xbf, 0x7a, 0xa8, 0xaf,
	0xad, 0x34, 0x5b, 0xf7, 0xc2, 0xee, 0xd8, 0xb3,
	0xb9, 0xab, 0xf3, 0x3d, 0x7b, 0x74, 0x97, 0xfb,
	0x2d, 0x82, 0x5c, 0x96, 0x0b, 0x1d, 0x0a, 0x75,
	0x61, 0x48, 0x9d, 0xd1, 0xfe, 0x83, 0x7d, 0x71,
	0xd6, 0xae, 0xfa, 0x67, 0x0f, 0xcd, 0x56, 0x4b,
	0x4e, 0x3f, 0x2a, 0x4a, 0xea, 0x3c, 0xb4, 0x68,
	0x8e, 0x54, 0x5a, 0xa6, 0xc9, 0xf6, 0xa7, 0x07,
	0x6f, 0x45, 0x2e, 0xd9, 0x01, 0xac, 0xc7, 0xdd,
	0x89, 0x02, 0x87, 0x37, 0xd7, 0x4f, 0x93, 0xcc,
	0x42, 0x17, 0xc0, 0x3a, 0xb5, 0xf8, 0x3b, 0x6c,
	0x72, 0xbb, 0xe6, 0xdc, 0xfd, 0x52, 0xda, 0xd3,
	0x55, 0x39, 0xf4, 0x0e, 0xc1, 0xb6, 0x29, 0xca,
	0xc3, 0xe4, 0x18, 0x66, 0x77, 0x47, 0x21, 0xff,
	0xe8, 0x3e, 0x32, 0x36, 0x69, 0x10, 0x58, 0x59,
	0x15, 0x8c, 0xe1, 0x2f, 0x00, 0xeb, 0xa5, 0xec,
	0x57, 0x9b, 0xce, 0x86, 0xe3, 0x04, 0xa2, 0x51,
	0xf2, 0x9f, 0xdf, 0xd2, 0xf5, 0x1b, 0x94, 0x98,
	0x85, 0x6a, 0xbe, 0xe0, 0xe7, 0x7e, 0xd4, 0x46,
	0x9e, 0xb1, 0xf9, 0xfc, 0xa3, 0x65, 0x1e, 0x2b,
	0x99, 0x4d, 0xed, 0x27, 0x78, 0xb2, 0x16, 0x38
);

var k2 = new Array(
	0x04, 0xa6, 0x8c, 0xb6, 0xb8, 0xe0, 0xd1, 0x77,
	0xae, 0x1f, 0x9e, 0x06, 0xf7, 0x34, 0xea, 0xfb,
	0x91, 0x8b, 0x90, 0x5c, 0x39, 0xef, 0xec, 0x96,
	0x26, 0x2e, 0x00, 0x38, 0xa5, 0xee, 0x67, 0x13,
	0xd2, 0x4e, 0x25, 0xc0, 0x29, 0x58, 0xb9, 0xaa,
	0x1b, 0x2c, 0x22, 0x4f, 0x33, 0x8d, 0x9a, 0x94,
	0x68, 0x75, 0xa8, 0x02, 0x76, 0xd3, 0x7e, 0x5b,
	0x45, 0x80, 0x64, 0x3f, 0x54, 0x3d, 0x5d, 0xdd,
	0x01, 0x2b, 0x51, 0xca, 0xd8, 0x52, 0x4b, 0x0d,
	0x62, 0xce, 0x3b, 0x1d, 0xcd, 0x8a, 0xc7, 0x9d,
	0xe8, 0x6c, 0xbe, 0x0a, 0x57, 0xc9, 0x6f, 0xa7,
	0x66, 0xfc, 0xf0, 0x92, 0xa3, 0xf4, 0xe2, 0x27,
	0xb2, 0x3a, 0xf9, 0x0c, 0x9f, 0x49, 0x63, 0x20,
	0xa2, 0x2d, 0xa1, 0x14, 0x79, 0xdb, 0x9b, 0x6e,
	0xdf, 0x99, 0xa4, 0x59, 0x84, 0x97, 0x87, 0x6a,
	0xc4, 0x7d, 0x7f, 0xd5, 0x56, 0xeb, 0x1c, 0x6b,
	0x6d, 0x82, 0xba, 0x48, 0xe9, 0x98, 0x42, 0x05,
	0xda, 0xe1, 0xfd, 0x1e, 0x10, 0xed, 0x1a, 0x50,
	0xd7, 0xa0, 0xab, 0x0b, 0xc5, 0x03, 0xcc, 0x9c,
	0x88, 0x17, 0x4d, 0xb0, 0xf5, 0x2f, 0x81, 0x86,
	0x0e, 0xaf, 0x18, 0x37, 0xf2, 0xe7, 0x47, 0x36,
	0x8e, 0xcb, 0x78, 0xc1, 0x5a, 0xc6, 0x70, 0xb1,
	0x74, 0xbd, 0x07, 0x5e, 0xd6, 0x11, 0xcf, 0x41,
	0x2a, 0x43, 0x28, 0x61, 0x3e, 0x21, 0x15, 0xf8,
	0x24, 0x85, 0x83, 0x40, 0xe3, 0xbf, 0xc3, 0x53,
	0xb3, 0x73, 0x32, 0x23, 0xbb, 0x19, 0x35, 0x60,
	0x08, 0x4c, 0xb7, 0xf3, 0x89, 0x46, 0xd0, 0xe4,
	0x65, 0xa9, 0xbc, 0xac, 0x7b, 0x93, 0x7a, 0xe6,
	0xf1, 0xde, 0x55, 0x31, 0x44, 0xe5, 0xc8, 0xfa,
	0x16, 0xb4, 0xf6, 0x69, 0xff, 0x3c, 0x0f, 0xb5,
	0xc2, 0x95, 0xfe, 0x5f, 0xdc, 0x7c, 0x8f, 0x71,
	0x30, 0xd9, 0x09, 0x72, 0x12, 0x4a, 0xd4, 0xad
);

var k1 = new Array(
	0x1f, 0x64, 0xa4, 0x59, 0xa5, 0x1e, 0x6c, 0xd8,
	0x57, 0x3d, 0x63, 0x68, 0xfb, 0x85, 0xe5, 0x24,
	0x81, 0xec, 0x4a, 0xa0, 0x03, 0x25, 0xe4, 0x9b,
	0x82, 0x76, 0x3e, 0xca, 0xce, 0x61, 0x1d, 0xa8,
	0x75, 0xef, 0x49, 0x91, 0x93, 0xf3, 0x5e, 0x36,
	0xd4, 0x9c, 0xc3, 0x5b, 0x0c, 0xa2, 0x4b, 0xdf,
	0x11, 0xd5, 0xc8, 0xb9, 0xb4, 0x41, 0xc0, 0x79,
	0xf1, 0x44, 0x4f, 0x39, 0xae, 0x7f, 0x02, 0x17,
	0x15, 0x62, 0x60, 0xd2, 0x10, 0x77, 0xe0, 0x86,
	0x92, 0x4c, 0xe3, 0x00, 0x5a, 0x05, 0x06, 0x22,
	0x16, 0xea, 0xdd, 0xc9, 0xeb, 0x94, 0x20, 0x2d,
	0xb7, 0xb0, 0x84, 0x70, 0x7d, 0xf7, 0xf5, 0x29,
	0xe9, 0xcb, 0xda, 0x14, 0x6b, 0x9f, 0x01, 0xaf,
	0xa3, 0x8a, 0x9d, 0xb3, 0x13, 0xa9, 0xc7, 0x8f,
	0x8e, 0xd9, 0x45, 0x37, 0xe1, 0xd0, 0xc1, 0x51,
	0x3c, 0x12, 0x9a, 0x7c, 0xaa, 0xf2, 0xff, 0x5d,
	0x38, 0x6a, 0xfc, 0xd7, 0x83, 0x98, 0x1a, 0xab,
	0x33, 0x32, 0x4e, 0x89, 0xe7, 0x23, 0xbf, 0x46,
	0xb8, 0x72, 0x99, 0x43, 0x0d, 0xbb, 0x0e, 0x67,
	0xd6, 0xa7, 0x7b, 0x1b, 0x1c, 0x8d, 0xc4, 0xb5,
	0xa1, 0x56, 0x35, 0x28, 0x96, 0xd1, 0x31, 0xe6,
	0x2f, 0x40, 0x2a, 0x19, 0xbd, 0x5c, 0x2c, 0xf4,
	0x8b, 0x3a, 0xc6, 0x47, 0x6f, 0xbe, 0xbc, 0x95,
	0xde, 0x5f, 0x42, 0xcd, 0xcf, 0x53, 0x18, 0x21,
	0x48, 0x69, 0x58, 0x80, 0x74, 0xee, 0xfe, 0xd3,
	0xdc, 0x8c, 0x04, 0x34, 0x27, 0x88, 0x30, 0x9e,
	0xcc, 0xac, 0x3b, 0x6e, 0xc5, 0x4d, 0xed, 0x50,
	0xb1, 0xf0, 0x54, 0x87, 0x3f, 0xb6, 0x7e, 0xe2,
	0x0f, 0x0b, 0xf6, 0x2b, 0x66, 0xe8, 0x65, 0xa6,
	0x26, 0x78, 0xdb, 0x73, 0x52, 0xf9, 0x97, 0x55,
	0x7a, 0xf8, 0xc2, 0xba, 0xad, 0x0a, 0x2e, 0x71,
	0x90, 0xb2, 0x07, 0x08, 0x6d, 0xfd, 0xfa, 0x09
);

var k0 = new Array(
	0xbb, 0xa5, 0x3a, 0xa1, 0x13, 0xdd, 0xc7, 0x86,
	0xf0, 0x71, 0x81, 0x8e, 0x99, 0x87, 0xdf, 0xe5,
	0x1e, 0x1d, 0x32, 0xa2, 0xca, 0x51, 0xc3, 0xe9,
	0x0e, 0x3b, 0x1f, 0xdb, 0xbe, 0x28, 0x29, 0xb0,
	0x3d, 0x68, 0xe0, 0xd8, 0x8b, 0x5b, 0xb8, 0x84,
	0x39, 0xd9, 0xdc, 0x2c, 0x5a, 0x89, 0x7b, 0x75,
	0xa9, 0x30, 0xb4, 0x14, 0xc5, 0x85, 0x5c, 0xc1,
	0x54, 0xaa, 0xfd, 0x17, 0xfb, 0xad, 0xfe, 0x60,
	0x63, 0x73, 0xff, 0x3e, 0xf2, 0x52, 0x9c, 0x15,
	0xac, 0x53, 0xbf, 0x25, 0xc6, 0xb7, 0x80, 0xb2,
	0x37, 0x07, 0x01, 0xc2, 0x8a, 0x58, 0x0b, 0xe3,
	0x11, 0x46, 0x74, 0x0d, 0x42, 0x8d, 0xc9, 0xe1,
	0x5d, 0xeb, 0x97, 0x50, 0xaf, 0xde, 0xcc, 0x6c,
	0x9e, 0xcf, 0x12, 0xd5, 0x4c, 0x5f, 0x02, 0x66,
	0x82, 0x5e, 0x92, 0xf3, 0x1c, 0x95, 0x77, 0xfc,
	0x72, 0x21, 0x76, 0x7d, 0x40, 0xba, 0x2e, 0xab,
	0x24, 0xe8, 0x9b, 0xb6, 0x8c, 0x16, 0x2a, 0xa8,
	0x67, 0x03, 0xa6, 0x70, 0xcd, 0x57, 0xd2, 0xfa,
	0x4d, 0x00, 0xe2, 0x23, 0x38, 0x36, 0x2d, 0x6b,
	0xb5, 0x79, 0x1a, 0x0c, 0x0f, 0xce, 0xd3, 0xae,
	0x2f, 0x93, 0x3f, 0xe7, 0x64, 0x88, 0x4a, 0xb1,
	0x45, 0x94, 0xed, 0x44, 0xd0, 0x19, 0x09, 0x10,
	0x55, 0xb9, 0xa0, 0x65, 0xbc, 0xf7, 0xf8, 0x9f,
	0x78, 0x1b, 0xea, 0x4f, 0xa3, 0x7a, 0xef, 0xa7,
	0x0a, 0xda, 0xe6, 0x49, 0x83, 0x7f, 0x4e, 0x43,
	0xee, 0xf4, 0x18, 0xd7, 0x27, 0xf1, 0x6f, 0x91,
	0xb3, 0x26, 0x96, 0xd6, 0x7c, 0xc0, 0x4b, 0x04,
	0x6d, 0xe4, 0x34, 0xa4, 0xbd, 0x3c, 0x20, 0xc4,
	0x9d, 0x7e, 0x47, 0xc8, 0x59, 0x31, 0x2b, 0xd1,
	0x69, 0x05, 0x6a, 0xf5, 0xf6, 0xf9, 0x6e, 0x06,
	0x35, 0xcb, 0x41, 0x8f, 0x98, 0xec, 0x61, 0x90,
	0x62, 0x9a, 0xd4, 0x22, 0x48, 0x33, 0x56, 0x08
);	

function decodeBinHex(binHex) {
	var binHexLength = binHex.length;
	if (binHexLength % kNibblesPerInt != 0)
		return false;
		
	var outputLength = binHexLength / kNibblesPerInt;
	outputLength = parseInt(outputLength, 10);
	var output = new Array(outputLength);			
	
	var outputIndex = 0;
	var outputInt = 0;
	var shift = kStartNibbleShift;
	
	for (var binHexIndex = 0; binHexIndex < binHexLength; binHexIndex++) {
		var hex = binHex.charAt(binHexIndex);
		var value;
		
		if (hex >= 'A' && hex <= 'F') {
			value = (hex.charCodeAt(0)) - (65 - 10);
		} else {
			value = hex - 0;					
		}
		
		outputInt += value << shift;
		
		if(shift == 0) {
			output[outputIndex++] = outputInt;
			outputInt = 0;
			shift = kStartNibbleShift;
		} else {
			shift -= kNibbleShift;
		}
	}
	
	return output;
}

function appendBinHex(buffer, data) {
	var dataLength = data.length;

	var shift = kStartNibbleShift;
	var dataIndex = 0;			
	while (dataIndex < dataLength)
	{
		var nibble = (data[dataIndex] >> shift) & 0xf;

		if (nibble < 10) {					
			buffer = buffer + nibble;
		} else {					
			var temp2 = (String.fromCharCode(65 - 10 + nibble));					
			buffer = buffer + temp2;
		}

		if (shift == 0)
		{
			dataIndex++;
			shift = kStartNibbleShift;
		}
		else
			shift -= kNibbleShift;
	}
	
	return buffer;
}

function f(x) {
	/* Do substitutions */
    x = kF[x>>24 & 255] << 24 | kE[x>>16 & 255] << 16 | kD[x>> 8 & 255] <<  8 | kC[x & 255];
	/* Rotate left 11 bits */
	return x<<11 | x>>(32-11);
}

function f2(x) {
	/* Do substitutions */
	 x = kB[x>>24 & 255] << 24 | kA[x>>16 & 255] << 16 | k9[x>> 8 & 255] <<  8 | k8[x & 255];
	/* Rotate left 11 bits */
	return x<<11 | x>>(32-11);
}

function f3(x) {
	/* Do substitutions */
	x = k7[x>>24 & 255] << 24 | k6[x>>16 & 255] << 16 | k5[x>> 8 & 255] <<  8 | k4[x & 255];
	/* Rotate left 11 bits */
	return x<<11 | x>>(32-11);
}

function  f4(x) {
	/* Do substitutions */
	x = k3[x>>24 & 255] << 24 | k2[x>>16 & 255] << 16 | k1[x>> 8 & 255] <<  8 | k0[x & 255];
	/* Rotate left 11 bits */
	return x<<11 | x>>(32-11);
}

function qdencrypt(_in, key) {
	var n1 = _in[0];
	var n2 = _in[1];
	
	/* Instead of swapping halves, swap names each round */
	n2 ^= f(n1+key[0]);
	n1 ^= f(n2+key[1]);
	n2 ^= f2(n1+key[2]);
	n1 ^= f2(n2+key[3]);
	n2 ^= f3(n1+key[4]);
	n1 ^= f3(n2+key[5]);
	n2 ^= f4(n1+key[6]);
	n1 ^= f4(n2+key[7]);

	/* There is no swap after the last round */
	var out = new Array();
	out[0] = n2;
	out[1] = n1;
	
	return out;
}

function qddecrypt(_in, key) {
	var n1 = _in[0];
	var n2 = _in[1];
	
	/* Instead of swapping halves, swap names each round */
	n2 ^= f(n1+key[7]);
	n1 ^= f(n2+key[6]);
	n2 ^= f2(n1+key[5]);
	n1 ^= f2(n2+key[4]);
	n2 ^= f3(n1+key[3]);
	n1 ^= f3(n2+key[2]);
	n2 ^= f4(n1+key[1]);
	n1 ^= f4(n2+key[0]);

	/* There is no swap after the last round */
	var out = new Array();
	out[0] = n2;
	out[1] = n1;
	
	return out;
}

function qdecfbdecrypt(buffer, iv, key) {		
	var t;
	var length = buffer.length;
	var bufferIndex = 0;
	while (bufferIndex < length) {
		iv = qdencrypt(iv, key);
		t = buffer[bufferIndex];
		buffer[bufferIndex++] ^= iv[0];
		iv[0] = t;
		
		if (bufferIndex < length)
		{
			t = buffer[bufferIndex];
			buffer[bufferIndex++] ^= iv[1];
			iv[1] = t;
		}
	}

	return iv;
}

function qdecfbencrypt(buffer, iv, key) {
	var t;
	var length = buffer.length;
	var bufferIndex = 0;
	while (bufferIndex < length)
	{
		iv = qdencrypt(iv, key);
		
		iv[0] = buffer[bufferIndex++] ^= iv[0];
    
		if (bufferIndex < length)
			iv[1] = buffer[bufferIndex++] ^= iv[1];				
	}
	
	return iv;
}

function decryptString(cipher)
{
	if (cipher.indexOf(kSignature) != 0)
		return false;
	
	var key = encryptionKey;
	var ivBinHex = cipher.substring(kSignatureLength, kSignatureLength + 16);
	var iv = decodeBinHex(ivBinHex);
	var cipherBinHex = cipher.substring(kSignatureLength + 16);
	var buffer = decodeBinHex(cipherBinHex);
	
	var iv = qdecfbdecrypt(buffer, iv, key);
				
	var bufferLength = buffer.length;
	var shift = kStartByteShift;
	var bufferIndex = 0;
	var output = '';
	while (bufferIndex < bufferLength) {
		var temp = ((buffer[bufferIndex] >> shift) & 0xff);
		output = output + String.fromCharCode(temp);

		if (shift == 0) {
			bufferIndex++;
			shift = kStartByteShift;
		} else {
			shift -= kByteShift;
		}
	}
	
	var lastChar = output.length - 1;
	while(lastChar >= 0 && output.charAt(lastChar) == '\0') {
		lastChar--;
	}
	//output.length = lastChar + 1;
	output = output.substr(0, lastChar+1);

	return output;
}

function encryptString(plain)
{
	var key = encryptionKey;
	var plainLength = plain.length;	
	var bufferLength = parseInt((plainLength - 1) / kBytesPerInt + 1);			
	var buffer = new Array(bufferLength);

	var bufferIndex = 0;
	var plainInt = 0;
	var shift = kStartByteShift;
	for (var plainIndex = 0; plainIndex < plainLength; plainIndex++)
	{
		var temp = plain.charAt(plainIndex);				
		var temp1 = temp.charCodeAt(0);
		plainInt += temp1 << shift;		
		
		// We've got output when we've put in the character with 0 shift.
		if (shift == 0) {
			buffer[bufferIndex++] = plainInt;
			plainInt = 0;
			shift = kStartByteShift;
		} else {
			shift -= kByteShift;
		}
	}

	// If we don't have a multiple of 4 characters, write it out
	if (bufferIndex != bufferLength)
		buffer[bufferIndex++] = plainInt;
	
	var output = '';
	output.length = plainLength * 2 + 20;
	output = output + kSignature;
	var iv = new Array(2);
	iv[0] = Math.floor(Math.random()*10000000000); //935095937
	iv[1] = Math.floor(Math.random()*10000000000); //1737432230
	
	output = appendBinHex(output, iv);
	
	iv = qdecfbencrypt(buffer, iv, key);
	
	output = appendBinHex(output, buffer);
	
	return output;
}