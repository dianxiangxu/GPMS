/*!
 * Modernizr v2.8.3
 * www.modernizr.com
 *
 * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton
 * Available under the BSD and MIT licenses: www.modernizr.com/license/
 */

/*
 * Modernizr tests which native CSS3 and HTML5 features are available in
 * the current UA and makes the results available to you in two ways:
 * as properties on a global Modernizr object, and as classes on the
 * <html> element. This information allows you to progressively enhance
 * your pages with a granular level of control over the experience.
 *
 * Modernizr has an optional (not included) conditional resource loader
 * called Modernizr.load(), based on Yepnope.js (yepnopejs.com).
 * To get a build that includes Modernizr.load(), as well as choosing
 * which tests to include, go to www.modernizr.com/download/
 *
 * Authors        Faruk Ates, Paul Irish, Alex Sexton
 * Contributors   Ryan Seddon, Ben Alman
 */

window.Modernizr = (function( window, document, undefined ) {

    var version = '2.8.3',

    Modernizr = {},

    /*>>cssclasses*/
    // option for enabling the HTML classes to be added
    enableClasses = true,
    /*>>cssclasses*/

    docElement = document.documentElement,

    /**
     * Create our "modernizr" element that we do most feature tests on.
     */
    mod = 'modernizr',
    modElem = document.createElement(mod),
    mStyle = modElem.style,

    /**
     * Create the input element for various Web Forms feature tests.
     */
    inputElem /*>>inputelem*/ = document.createElement('input') /*>>inputelem*/ ,

    /*>>smile*/
    smile = ':)',
    /*>>smile*/

    toString = {}.toString,

    // TODO :: make the prefixes more granular
    /*>>prefixes*/
    // List of property values to set for css tests. See ticket #21
    prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),
    /*>>prefixes*/

    /*>>domprefixes*/
    // Following spec is to expose vendor-specific style properties as:
    //   elem.style.WebkitBorderRadius
    // and the following would be incorrect:
    //   elem.style.webkitBorderRadius

    // Webkit ghosts their properties in lowercase but Opera & Moz do not.
    // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+
    //   erik.eae.net/archives/2008/03/10/21.48.10/

    // More here: github.com/Modernizr/Modernizr/issues/issue/21
    omPrefixes = 'Webkit Moz O ms',

    cssomPrefixes = omPrefixes.split(' '),

    domPrefixes = omPrefixes.toLowerCase().split(' '),
    /*>>domprefixes*/

    /*>>ns*/
    ns = {'svg': 'http://www.w3.org/2000/svg'},
    /*>>ns*/

    tests = {},
    inputs = {},
    attrs = {},

    classes = [],

    slice = classes.slice,

    featureName, // used in testing loop


    /*>>teststyles*/
    // Inject element with style element and some CSS rules
    injectElementWithStyles = function( rule, callback, nodes, testnames ) {

      var style, ret, node, docOverflow,
          div = document.createElement('div'),
          // After page load injecting a fake body doesn't work so check if body exists
          body = document.body,
          // IE6 and 7 won't return offsetWidth or offsetHeight unless it's in the body element, so we fake it.
          fakeBody = body || document.createElement('body');

      if ( parseInt(nodes, 10) ) {
          // In order not to give false positives we create a node for each test
          // This also allows the method to scale for unspecified uses
          while ( nodes-- ) {
              node = document.createElement('div');
              node.id = testnames ? testnames[nodes] : mod + (nodes + 1);
              div.appendChild(node);
          }
      }

      // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed
      // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element
      // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.
      // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx
      // Documents served as xml will throw if using &shy; so use xml friendly encoded version. See issue #277
      style = ['&#173;','<style id="s', mod, '">', rule, '</style>'].join('');
      div.id = mod;
      // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.
      // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270
      (body ? div : fakeBody).innerHTML += style;
      fakeBody.appendChild(div);
      if ( !body ) {
          //avoid crashing IE8, if background image is used
          fakeBody.style.background = '';
          //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible
          fakeBody.style.overflow = 'hidden';
          docOverflow = docElement.style.overflow;
          docElement.style.overflow = 'hidden';
          docElement.appendChild(fakeBody);
      }

      ret = callback(div, rule);
      // If this is done after page load we don't want to remove the body so check if body exists
      if ( !body ) {
          fakeBody.parentNode.removeChild(fakeBody);
          docElement.style.overflow = docOverflow;
      } else {
          div.parentNode.removeChild(div);
      }

      return !!ret;

    },
    /*>>teststyles*/

    /*>>mq*/
    // adapted from matchMedia polyfill
    // by Scott Jehl and Paul Irish
    // gist.github.com/786768
    testMediaQuery = function( mq ) {

      var matchMedia = window.matchMedia || window.msMatchMedia;
      if ( matchMedia ) {
        return matchMedia(mq) && matchMedia(mq).matches || false;
      }

      var bool;

      injectElementWithStyles('@media ' + mq + ' { #' + mod + ' { position: absolute; } }', function( node ) {
        bool = (window.getComputedStyle ?
                  getComputedStyle(node, null) :
                  node.currentStyle)['position'] == 'absolute';
      });

      return bool;

     },
     /*>>mq*/


    /*>>hasevent*/
    //
    // isEventSupported determines if a given element supports the given event
    // kangax.github.com/iseventsupported/
    //
    // The following results are known incorrects:
    //   Modernizr.hasEvent("webkitTransitionEnd", elem) // false negative
    //   Modernizr.hasEvent("textInput") // in Webkit. github.com/Modernizr/Modernizr/issues/333
    //   ...
    isEventSupported = (function() {

      var TAGNAMES = {
        'select': 'input', 'change': 'input',
        'submit': 'form', 'reset': 'form',
        'error': 'img', 'load': 'img', 'abort': 'img'
      };

      function isEventSupported( eventName, element ) {

        element = element || document.createElement(TAGNAMES[eventName] || 'div');
        eventName = 'on' + eventName;

        // When using `setAttribute`, IE skips "unload", WebKit skips "unload" and "resize", whereas `in` "catches" those
        var isSupported = eventName in element;

        if ( !isSupported ) {
          // If it has no `setAttribute` (i.e. doesn't implement Node interface), try generic element
          if ( !element.setAttribute ) {
            element = document.createElement('div');
          }
          if ( element.setAttribute && element.removeAttribute ) {
            element.setAttribute(eventName, '');
            isSupported = is(element[eventName], 'function');

            // If property was created, "remove it" (by setting value to `undefined`)
            if ( !is(element[eventName], 'undefined') ) {
              element[eventName] = undefined;
            }
            element.removeAttribute(eventName);
          }
        }

        element = null;
        return isSupported;
      }
      return isEventSupported;
    })(),
    /*>>hasevent*/

    // TODO :: Add flag for hasownprop ? didn't last time

    // hasOwnProperty shim by kangax needed for Safari 2.0 support
    _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;

    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {
      hasOwnProp = function (object, property) {
        return _hasOwnProperty.call(object, property);
      };
    }
    else {
      hasOwnProp = function (object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */
        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));
      };
    }

    // Adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js
    // es5.github.com/#x15.3.4.5

    if (!Function.prototype.bind) {
      Function.prototype.bind = function bind(that) {

        var target = this;

        if (typeof target != "function") {
            throw new TypeError();
        }

        var args = slice.call(arguments, 1),
            bound = function () {

            if (this instanceof bound) {

              var F = function(){};
              F.prototype = target.prototype;
              var self = new F();

              var result = target.apply(
                  self,
                  args.concat(slice.call(arguments))
              );
              if (Object(result) === result) {
                  return result;
              }
              return self;

            } else {

              return target.apply(
                  that,
                  args.concat(slice.call(arguments))
              );

            }

        };

        return bound;
      };
    }

    /**
     * setCss applies given styles to the Modernizr DOM node.
     */
    function setCss( str ) {
        mStyle.cssText = str;
    }

    /**
     * setCssAll extrapolates all vendor-specific css strings.
     */
    function setCssAll( str1, str2 ) {
        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));
    }

    /**
     * is returns a boolean for if typeof obj is exactly type.
     */
    function is( obj, type ) {
        return typeof obj === type;
    }

    /**
     * contains returns a boolean for if substr is found within str.
     */
    function contains( str, substr ) {
        return !!~('' + str).indexOf(substr);
    }

    /*>>testprop*/

    // testProps is a generic CSS / DOM property test.

    // In testing support for a given CSS property, it's legit to test:
    //    `elem.style[styleName] !== undefined`
    // If the property is supported it will return an empty string,
    // if unsupported it will return undefined.

    // We'll take advantage of this quick test and skip setting a style
    // on our modernizr element, but instead just testing undefined vs
    // empty string.

    // Because the testing of the CSS property names (with "-", as
    // opposed to the camelCase DOM properties) is non-portable and
    // non-standard but works in WebKit and IE (but not Gecko or Opera),
    // we explicitly reject properties with dashes so that authors
    // developing in WebKit or IE first don't end up with
    // browser-specific content by accident.

    function testProps( props, prefixed ) {
        for ( var i in props ) {
            var prop = props[i];
            if ( !contains(prop, "-") && mStyle[prop] !== undefined ) {
                return prefixed == 'pfx' ? prop : true;
            }
        }
        return false;
    }
    /*>>testprop*/

    // TODO :: add testDOMProps
    /**
     * testDOMProps is a generic DOM property test; if a browser supports
     *   a certain property, it won't return undefined for it.
     */
    function testDOMProps( props, obj, elem ) {
        for ( var i in props ) {
            var item = obj[props[i]];
            if ( item !== undefined) {

                // return the property name as a string
                if (elem === false) return props[i];

                // let's bind a function
                if (is(item, 'function')){
                  // default to autobind unless override
                  return item.bind(elem || obj);
                }

                // return the unbound function or obj or value
                return item;
            }
        }
        return false;
    }

    /*>>testallprops*/
    /**
     * testPropsAll tests a list of DOM properties we want to check against.
     *   We specify literally ALL possible (known and/or likely) properties on
     *   the element including the non-vendor prefixed one, for forward-
     *   compatibility.
     */
    function testPropsAll( prop, prefixed, elem ) {

        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),
            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');

        // did they call .prefixed('boxSizing') or are we just testing a prop?
        if(is(prefixed, "string") || is(prefixed, "undefined")) {
          return testProps(props, prefixed);

        // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])
        } else {
          props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');
          return testDOMProps(props, prefixed, elem);
        }
    }
    /*>>testallprops*/


    /**
     * Tests
     * -----
     */

    // The *new* flexbox
    // dev.w3.org/csswg/css3-flexbox

    tests['flexbox'] = function() {
      return testPropsAll('flexWrap');
    };

    // The *old* flexbox
    // www.w3.org/TR/2009/WD-css3-flexbox-20090723/

    tests['flexboxlegacy'] = function() {
        return testPropsAll('boxDirection');
    };

    // On the S60 and BB Storm, getContext exists, but always returns undefined
    // so we actually have to call getContext() to verify
    // github.com/Modernizr/Modernizr/issues/issue/97/

    tests['canvas'] = function() {
        var elem = document.createElement('canvas');
        return !!(elem.getContext && elem.getContext('2d'));
    };

    tests['canvastext'] = function() {
        return !!(Modernizr['canvas'] && is(document.createElement('canvas').getContext('2d').fillText, 'function'));
    };

    // webk.it/70117 is tracking a legit WebGL feature detect proposal

    // We do a soft detect which may false positive in order to avoid
    // an expensive context creation: bugzil.la/732441

    tests['webgl'] = function() {
        return !!window.WebGLRenderingContext;
    };

    /*
     * The Modernizr.touch test only indicates if the browser supports
     *    touch events, which does not necessarily reflect a touchscreen
     *    device, as evidenced by tablets running Windows 7 or, alas,
     *    the Palm Pre / WebOS (touch) phones.
     *
     * Additionally, Chrome (desktop) used to lie about its support on this,
     *    but that has since been rectified: crbug.com/36415
     *
     * We also test for Firefox 4 Multitouch Support.
     *
     * For more info, see: modernizr.github.com/Modernizr/touch.html
     */

    tests['touch'] = function() {
        var bool;

        if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {
          bool = true;
        } else {
          injectElementWithStyles(['@media (',prefixes.join('touch-enabled),('),mod,')','{#modernizr{top:9px;position:absolute}}'].join(''), function( node ) {
            bool = node.offsetTop === 9;
          });
        }

        return bool;
    };


    // geolocation is often considered a trivial feature detect...
    // Turns out, it's quite tricky to get right:
    //
    // Using !!navigator.geolocation does two things we don't want. It:
    //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513
    //   2. Disables page caching in WebKit: webk.it/43956
    //
    // Meanwhile, in Firefox < 8, an about:config setting could expose
    // a false positive that would throw an exception: bugzil.la/688158

    tests['geolocation'] = function() {
        return 'geolocation' in navigator;
    };


    tests['postmessage'] = function() {
      return !!window.postMessage;
    };


    // Chrome incognito mode used to throw an exception when using openDatabase
    // It doesn't anymore.
    tests['websqldatabase'] = function() {
      return !!window.openDatabase;
    };

    // Vendors had inconsistent prefixing with the experimental Indexed DB:
    // - Webkit's implementation is accessible through webkitIndexedDB
    // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB
    // For speed, we don't test the legacy (and beta-only) indexedDB
    tests['indexedDB'] = function() {
      return !!testPropsAll("indexedDB", window);
    };

    // documentMode logic from YUI to filter out IE8 Compat Mode
    //   which false positives.
    tests['hashchange'] = function() {
      return isEventSupported('hashchange', window) && (document.documentMode === undefined || document.documentMode > 7);
    };

    // Per 1.6:
    // This used to be Modernizr.historymanagement but the longer
    // name has been deprecated in favor of a shorter and property-matching one.
    // The old API is still available in 1.6, but as of 2.0 will throw a warning,
    // and in the first release thereafter disappear entirely.
    tests['history'] = function() {
      return !!(window.history && history.pushState);
    };

    tests['draganddrop'] = function() {
        var div = document.createElement('div');
        return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);
    };

    // FF3.6 was EOL'ed on 4/24/12, but the ESR version of FF10
    // will be supported until FF19 (2/12/13), at which time, ESR becomes FF17.
    // FF10 still uses prefixes, so check for it until then.
    // for more ESR info, see: mozilla.org/en-US/firefox/organizations/faq/
    tests['websockets'] = function() {
        return 'WebSocket' in window || 'MozWebSocket' in window;
    };


    // css-tricks.com/rgba-browser-support/
    tests['rgba'] = function() {
        // Set an rgba() color and check the returned value

        setCss('background-color:rgba(150,255,150,.5)');

        return contains(mStyle.backgroundColor, 'rgba');
    };

    tests['hsla'] = function() {
        // Same as rgba(), in fact, browsers re-map hsla() to rgba() internally,
        //   except IE9 who retains it as hsla

        setCss('background-color:hsla(120,40%,100%,.5)');

        return contains(mStyle.backgroundColor, 'rgba') || contains(mStyle.backgroundColor, 'hsla');
    };

    tests['multiplebgs'] = function() {
        // Setting multiple images AND a color on the background shorthand property
        //  and then querying the style.background property value for the number of
        //  occurrences of "url(" is a reliable method for detecting ACTUAL support for this!

        setCss('background:url(https://),url(https://),red url(https://)');

        // If the UA supports multiple backgrounds, there should be three occurrences
        //   of the string "url(" in the return value for elemStyle.background

        return (/(url\s*\(.*?){3}/).test(mStyle.background);
    };



    // this will false positive in Opera Mini
    //   github.com/Modernizr/Modernizr/issues/396

    tests['backgroundsize'] = function() {
        return testPropsAll('backgroundSize');
    };

    tests['borderimage'] = function() {
        return testPropsAll('borderImage');
    };


    // Super comprehensive table about all the unique implementations of
    // border-radius: muddledramblings.com/table-of-css3-border-radius-compliance

    tests['borderradius'] = function() {
        return testPropsAll('borderRadius');
    };

    // WebOS unfortunately false positives on this test.
    tests['boxshadow'] = function() {
        return testPropsAll('boxShadow');
    };

    // FF3.0 will false positive on this test
    tests['textshadow'] = function() {
        return document.createElement('div').style.textShadow === '';
    };


    tests['opacity'] = function() {
        // Browsers that actually have CSS Opacity implemented have done so
        //  according to spec, which means their return values are within the
        //  range of [0.0,1.0] - including the leading zero.

        setCssAll('opacity:.55');

        // The non-literal . in this regex is intentional:
        //   German Chrome returns this value as 0,55
        // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632
        return (/^0.55$/).test(mStyle.opacity);
    };


    // Note, Android < 4 will pass this test, but can only animate
    //   a single property at a time
    //   goo.gl/v3V4Gp
    tests['cssanimations'] = function() {
        return testPropsAll('animationName');
    };


    tests['csscolumns'] = function() {
        return testPropsAll('columnCount');
    };


    tests['cssgradients'] = function() {
        /**
         * For CSS Gradients syntax, please see:
         * webkit.org/blog/175/introducing-css-gradients/
         * developer.mozilla.org/en/CSS/-moz-linear-gradient
         * developer.mozilla.org/en/CSS/-moz-radial-gradient
         * dev.w3.org/csswg/css3-images/#gradients-
         */

        var str1 = 'background-image:',
            str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',
            str3 = 'linear-gradient(left top,#9f9, white);';

        setCss(
             // legacy webkit syntax (FIXME: remove when syntax not in use anymore)
              (str1 + '-webkit- '.split(' ').join(str2 + str1) +
             // standard syntax             // trailing 'background-image:'
              prefixes.join(str3 + str1)).slice(0, -str1.length)
        );

        return contains(mStyle.backgroundImage, 'gradient');
    };


    tests['cssreflections'] = function() {
        return testPropsAll('boxReflect');
    };


    tests['csstransforms'] = function() {
        return !!testPropsAll('transform');
    };


    tests['csstransforms3d'] = function() {

        var ret = !!testPropsAll('perspective');

        // Webkit's 3D transforms are passed off to the browser's own graphics renderer.
        //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in
        //   some conditions. As a result, Webkit typically recognizes the syntax but
        //   will sometimes throw a false positive, thus we must do a more thorough check:
        if ( ret && 'webkitPerspective' in docElement.style ) {

          // Webkit allows this media query to succeed only if the feature is enabled.
          // `@media (transform-3d),(-webkit-transform-3d){ ... }`
          injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function( node, rule ) {
            ret = node.offsetLeft === 9 && node.offsetHeight === 3;
          });
        }
        return ret;
    };


    tests['csstransitions'] = function() {
        return testPropsAll('transition');
    };


    /*>>fontface*/
    // @font-face detection routine by Diego Perini
    // javascript.nwbox.com/CSSSupport/

    // false positives:
    //   WebOS github.com/Modernizr/Modernizr/issues/342
    //   WP7   github.com/Modernizr/Modernizr/issues/538
    tests['fontface'] = function() {
        var bool;

        injectElementWithStyles('@font-face {font-family:"font";src:url("https://")}', function( node, rule ) {
          var style = document.getElementById('smodernizr'),
              sheet = style.sheet || style.styleSheet,
              cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';

          bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;
        });

        return bool;
    };
    /*>>fontface*/

    // CSS generated content detection
    tests['generatedcontent'] = function() {
        var bool;

        injectElementWithStyles(['#',mod,'{font:0/0 a}#',mod,':after{content:"',smile,'";visibility:hidden;font:3px/1 a}'].join(''), function( node ) {
          bool = node.offsetHeight >= 3;
        });

        return bool;
    };



    // These tests evaluate support of the video/audio elements, as well as
    // testing what types of content they support.
    //
    // We're using the Boolean constructor here, so that we can extend the value
    // e.g.  Modernizr.video     // true
    //       Modernizr.video.ogg // 'probably'
    //
    // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845
    //                     thx to NielsLeenheer and zcorpan

    // Note: in some older browsers, "no" was a return value instead of empty string.
    //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2
    //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5

    tests['video'] = function() {
        var elem = document.createElement('video'),
            bool = false;

        // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224
        try {
            if ( bool = !!elem.canPlayType ) {
                bool      = new Boolean(bool);
                bool.ogg  = elem.canPlayType('video/ogg; codecs="theora"')      .replace(/^no$/,'');

                // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546
                bool.h264 = elem.canPlayType('video/mp4; codecs="avc1.42E01E"') .replace(/^no$/,'');

                bool.webm = elem.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/^no$/,'');
            }

        } catch(e) { }

        return bool;
    };

    tests['audio'] = function() {
        var elem = document.createElement('audio'),
            bool = false;

        try {
            if ( bool = !!elem.canPlayType ) {
                bool      = new Boolean(bool);
                bool.ogg  = elem.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,'');
                bool.mp3  = elem.canPlayType('audio/mpeg;')               .replace(/^no$/,'');

                // Mimetypes accepted:
                //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements
                //   bit.ly/iphoneoscodecs
                bool.wav  = elem.canPlayType('audio/wav; codecs="1"')     .replace(/^no$/,'');
                bool.m4a  = ( elem.canPlayType('audio/x-m4a;')            ||
                              elem.canPlayType('audio/aac;'))             .replace(/^no$/,'');
            }
        } catch(e) { }

        return bool;
    };


    // In FF4, if disabled, window.localStorage should === null.

    // Normally, we could not test that directly and need to do a
    //   `('localStorage' in window) && ` test first because otherwise Firefox will
    //   throw bugzil.la/365772 if cookies are disabled

    // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem
    // will throw the exception:
    //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.
    // Peculiarly, getItem and removeItem calls do not throw.

    // Because we are forced to try/catch this, we'll go aggressive.

    // Just FWIW: IE8 Compat mode supports these features completely:
    //   www.quirksmode.org/dom/html5.html
    // But IE8 doesn't support either with local files

    tests['localstorage'] = function() {
        try {
            localStorage.setItem(mod, mod);
            localStorage.removeItem(mod);
            return true;
        } catch(e) {
            return false;
        }
    };

    tests['sessionstorage'] = function() {
        try {
            sessionStorage.setItem(mod, mod);
            sessionStorage.removeItem(mod);
            return true;
        } catch(e) {
            return false;
        }
    };


    tests['webworkers'] = function() {
        return !!window.Worker;
    };


    tests['applicationcache'] = function() {
        return !!window.applicationCache;
    };


    // Thanks to Erik Dahlstrom
    tests['svg'] = function() {
        return !!document.createElementNS && !!document.createElementNS(ns.svg, 'svg').createSVGRect;
    };

    // specifically for SVG inline in HTML, not within XHTML
    // test page: paulirish.com/demo/inline-svg
    tests['inlinesvg'] = function() {
      var div = document.createElement('div');
      div.innerHTML = '<svg/>';
      return (div.firstChild && div.firstChild.namespaceURI) == ns.svg;
    };

    // SVG SMIL animation
    tests['smil'] = function() {
        return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg, 'animate')));
    };

    // This test is only for clip paths in SVG proper, not clip paths on HTML content
    // demo: srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg

    // However read the comments to dig into applying SVG clippaths to HTML content here:
    //   github.com/Modernizr/Modernizr/issues/213#issuecomment-1149491
    tests['svgclippaths'] = function() {
        return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg, 'clipPath')));
    };

    /*>>webforms*/
    // input features and input types go directly onto the ret object, bypassing the tests loop.
    // Hold this guy to execute in a moment.
    function webforms() {
        /*>>input*/
        // Run through HTML5's new input attributes to see if the UA understands any.
        // We're using f which is the <input> element created early on
        // Mike Taylr has created a comprehensive resource for testing these attributes
        //   when applied to all input types:
        //   miketaylr.com/code/input-type-attr.html
        // spec: www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary

        // Only input placeholder is tested while textarea's placeholder is not.
        // Currently Safari 4 and Opera 11 have support only for the input placeholder
        // Both tests are available in feature-detects/forms-placeholder.js
        Modernizr['input'] = (function( props ) {
            for ( var i = 0, len = props.length; i < len; i++ ) {
                attrs[ props[i] ] = !!(props[i] in inputElem);
            }
            if (attrs.list){
              // safari false positive's on datalist: webk.it/74252
              // see also github.com/Modernizr/Modernizr/issues/146
              attrs.list = !!(document.createElement('datalist') && window.HTMLDataListElement);
            }
            return attrs;
        })('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));
        /*>>input*/

        /*>>inputtypes*/
        // Run through HTML5's new input types to see if the UA understands any.
        //   This is put behind the tests runloop because it doesn't return a
        //   true/false like all the other tests; instead, it returns an object
        //   containing each input type with its corresponding true/false value

        // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/
        Modernizr['inputtypes'] = (function(props) {

            for ( var i = 0, bool, inputElemType, defaultView, len = props.length; i < len; i++ ) {

                inputElem.setAttribute('type', inputElemType = props[i]);
                bool = inputElem.type !== 'text';

                // We first check to see if the type we give it sticks..
                // If the type does, we feed it a textual value, which shouldn't be valid.
                // If the value doesn't stick, we know there's input sanitization which infers a custom UI
                if ( bool ) {

                    inputElem.value         = smile;
                    inputElem.style.cssText = 'position:absolute;visibility:hidden;';

                    if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ) {

                      docElement.appendChild(inputElem);
                      defaultView = document.defaultView;

                      // Safari 2-4 allows the smiley as a value, despite making a slider
                      bool =  defaultView.getComputedStyle &&
                              defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&
                              // Mobile android web browser has false positive, so must
                              // check the height to see if the widget is actually there.
                              (inputElem.offsetHeight !== 0);

                      docElement.removeChild(inputElem);

                    } else if ( /^(search|tel)$/.test(inputElemType) ){
                      // Spec doesn't define any special parsing or detectable UI
                      //   behaviors so we pass these through as true

                      // Interestingly, opera fails the earlier test, so it doesn't
                      //  even make it here.

                    } else if ( /^(url|email)$/.test(inputElemType) ) {
                      // Real url and email support comes with prebaked validation.
                      bool = inputElem.checkValidity && inputElem.checkValidity() === false;

                    } else {
                      // If the upgraded input compontent rejects the :) text, we got a winner
                      bool = inputElem.value != smile;
                    }
                }

                inputs[ props[i] ] = !!bool;
            }
            return inputs;
        })('search tel url email datetime date month week time datetime-local number range color'.split(' '));
        /*>>inputtypes*/
    }
    /*>>webforms*/


    // End of test definitions
    // -----------------------



    // Run through all tests and detect their support in the current UA.
    // todo: hypothetically we could be doing an array of tests and use a basic loop here.
    for ( var feature in tests ) {
        if ( hasOwnProp(tests, feature) ) {
            // run the test, throw the return value into the Modernizr,
            //   then based on that boolean, define an appropriate className
            //   and push it into an array of classes we'll join later.
            featureName  = feature.toLowerCase();
            Modernizr[featureName] = tests[feature]();

            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);
        }
    }

    /*>>webforms*/
    // input tests need to run.
    Modernizr.input || webforms();
    /*>>webforms*/


    /**
     * addTest allows the user to define their own feature tests
     * the result will be added onto the Modernizr object,
     * as well as an appropriate className set on the html element
     *
     * @param feature - String naming the feature
     * @param test - Function returning true if feature is supported, false if not
     */
     Modernizr.addTest = function ( feature, test ) {
       if ( typeof feature == 'object' ) {
         for ( var key in feature ) {
           if ( hasOwnProp( feature, key ) ) {
             Modernizr.addTest( key, feature[ key ] );
           }
         }
       } else {

         feature = feature.toLowerCase();

         if ( Modernizr[feature] !== undefined ) {
           // we're going to quit if you're trying to overwrite an existing test
           // if we were to allow it, we'd do this:
           //   var re = new RegExp("\\b(no-)?" + feature + "\\b");
           //   docElement.className = docElement.className.replace( re, '' );
           // but, no rly, stuff 'em.
           return Modernizr;
         }

         test = typeof test == 'function' ? test() : test;

         if (typeof enableClasses !== "undefined" && enableClasses) {
           docElement.className += ' ' + (test ? '' : 'no-') + feature;
         }
         Modernizr[feature] = test;

       }

       return Modernizr; // allow chaining.
     };


    // Reset modElem.cssText to nothing to reduce memory footprint.
    setCss('');
    modElem = inputElem = null;

    /*>>shiv*/
    /**
     * @preserve HTML5 Shiv prev3.7.1 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed
     */
    ;(function(window, document) {
        /*jshint evil:true */
        /** version */
        var version = '3.7.0';

        /** Preset options */
        var options = window.html5 || {};

        /** Used to skip problem elements */
        var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;

        /** Not all elements can be cloned in IE **/
        var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;

        /** Detect whether the browser supports default html5 styles */
        var supportsHtml5Styles;

        /** Name of the expando, to work with multiple documents or to re-shiv one document */
        var expando = '_html5shiv';

        /** The id for the the documents expando */
        var expanID = 0;

        /** Cached data for each document */
        var expandoData = {};

        /** Detect whether the browser supports unknown elements */
        var supportsUnknownElements;

        (function() {
          try {
            var a = document.createElement('a');
            a.innerHTML = '<xyz></xyz>';
            //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles
            supportsHtml5Styles = ('hidden' in a);

            supportsUnknownElements = a.childNodes.length == 1 || (function() {
              // assign a false positive if unable to shiv
              (document.createElement)('a');
              var frag = document.createDocumentFragment();
              return (
                typeof frag.cloneNode == 'undefined' ||
                typeof frag.createDocumentFragment == 'undefined' ||
                typeof frag.createElement == 'undefined'
              );
            }());
          } catch(e) {
            // assign a false positive if detection fails => unable to shiv
            supportsHtml5Styles = true;
            supportsUnknownElements = true;
          }

        }());

        /*--------------------------------------------------------------------------*/

        /**
         * Creates a style sheet with the given CSS text and adds it to the document.
         * @private
         * @param {Document} ownerDocument The document.
         * @param {String} cssText The CSS text.
         * @returns {StyleSheet} The style element.
         */
        function addStyleSheet(ownerDocument, cssText) {
          var p = ownerDocument.createElement('p'),
          parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;

          p.innerHTML = 'x<style>' + cssText + '</style>';
          return parent.insertBefore(p.lastChild, parent.firstChild);
        }

        /**
         * Returns the value of `html5.elements` as an array.
         * @private
         * @returns {Array} An array of shived element node names.
         */
        function getElements() {
          var elements = html5.elements;
          return typeof elements == 'string' ? elements.split(' ') : elements;
        }

        /**
         * Returns the data associated to the given document
         * @private
         * @param {Document} ownerDocument The document.
         * @returns {Object} An object of data.
         */
        function getExpandoData(ownerDocument) {
          var data = expandoData[ownerDocument[expando]];
          if (!data) {
            data = {};
            expanID++;
            ownerDocument[expando] = expanID;
            expandoData[expanID] = data;
          }
          return data;
        }

        /**
         * returns a shived element for the given nodeName and document
         * @memberOf html5
         * @param {String} nodeName name of the element
         * @param {Document} ownerDocument The context document.
         * @returns {Object} The shived element.
         */
        function createElement(nodeName, ownerDocument, data){
          if (!ownerDocument) {
            ownerDocument = document;
          }
          if(supportsUnknownElements){
            return ownerDocument.createElement(nodeName);
          }
          if (!data) {
            data = getExpandoData(ownerDocument);
          }
          var node;

          if (data.cache[nodeName]) {
            node = data.cache[nodeName].cloneNode();
          } else if (saveClones.test(nodeName)) {
            node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();
          } else {
            node = data.createElem(nodeName);
          }

          // Avoid adding some elements to fragments in IE < 9 because
          // * Attributes like `name` or `type` cannot be set/changed once an element
          //   is inserted into a document/fragment
          // * Link elements with `src` attributes that are inaccessible, as with
          //   a 403 response, will cause the tab/window to crash
          // * Script elements appended to fragments will execute when their `src`
          //   or `text` property is set
          return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;
        }

        /**
         * returns a shived DocumentFragment for the given document
         * @memberOf html5
         * @param {Document} ownerDocument The context document.
         * @returns {Object} The shived DocumentFragment.
         */
        function createDocumentFragment(ownerDocument, data){
          if (!ownerDocument) {
            ownerDocument = document;
          }
          if(supportsUnknownElements){
            return ownerDocument.createDocumentFragment();
          }
          data = data || getExpandoData(ownerDocument);
          var clone = data.frag.cloneNode(),
          i = 0,
          elems = getElements(),
          l = elems.length;
          for(;i<l;i++){
            clone.createElement(elems[i]);
          }
          return clone;
        }

        /**
         * Shivs the `createElement` and `createDocumentFragment` methods of the document.
         * @private
         * @param {Document|DocumentFragment} ownerDocument The document.
         * @param {Object} data of the document.
         */
        function shivMethods(ownerDocument, data) {
          if (!data.cache) {
            data.cache = {};
            data.createElem = ownerDocument.createElement;
            data.createFrag = ownerDocument.createDocumentFragment;
            data.frag = data.createFrag();
          }


          ownerDocument.createElement = function(nodeName) {
            //abort shiv
            if (!html5.shivMethods) {
              return data.createElem(nodeName);
            }
            return createElement(nodeName, ownerDocument, data);
          };

          ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +
                                                          'var n=f.cloneNode(),c=n.createElement;' +
                                                          'h.shivMethods&&(' +
                                                          // unroll the `createElement` calls
                                                          getElements().join().replace(/[\w\-]+/g, function(nodeName) {
            data.createElem(nodeName);
            data.frag.createElement(nodeName);
            return 'c("' + nodeName + '")';
          }) +
            ');return n}'
                                                         )(html5, data.frag);
        }

        /*--------------------------------------------------------------------------*/

        /**
         * Shivs the given document.
         * @memberOf html5
         * @param {Document} ownerDocument The document to shiv.
         * @returns {Document} The shived document.
         */
        function shivDocument(ownerDocument) {
          if (!ownerDocument) {
            ownerDocument = document;
          }
          var data = getExpandoData(ownerDocument);

          if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {
            data.hasCSS = !!addStyleSheet(ownerDocument,
                                          // corrects block display not defined in IE6/7/8/9
                                          'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +
                                            // adds styling not present in IE6/7/8/9
                                            'mark{background:#FF0;color:#000}' +
                                            // hides non-rendered elements
                                            'template{display:none}'
                                         );
          }
          if (!supportsUnknownElements) {
            shivMethods(ownerDocument, data);
          }
          return ownerDocument;
        }

        /*--------------------------------------------------------------------------*/

        /**
         * The `html5` object is exposed so that more elements can be shived and
         * existing shiving can be detected on iframes.
         * @type Object
         * @example
         *
         * // options can be changed before the script is included
         * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };
         */
        var html5 = {

          /**
           * An array or space separated string of node names of the elements to shiv.
           * @memberOf html5
           * @type Array|String
           */
          'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video',

          /**
           * current version of html5shiv
           */
          'version': version,

          /**
           * A flag to indicate that the HTML5 style sheet should be inserted.
           * @memberOf html5
           * @type Boolean
           */
          'shivCSS': (options.shivCSS !== false),

          /**
           * Is equal to true if a browser supports creating unknown/HTML5 elements
           * @memberOf html5
           * @type boolean
           */
          'supportsUnknownElements': supportsUnknownElements,

          /**
           * A flag to indicate that the document's `createElement` and `createDocumentFragment`
           * methods should be overwritten.
           * @memberOf html5
           * @type Boolean
           */
          'shivMethods': (options.shivMethods !== false),

          /**
           * A string to describe the type of `html5` object ("default" or "default print").
           * @memberOf html5
           * @type String
           */
          'type': 'default',

          // shivs the document according to the specified `html5` object options
          'shivDocument': shivDocument,

          //creates a shived element
          createElement: createElement,

          //creates a shived documentFragment
          createDocumentFragment: createDocumentFragment
        };

        /*--------------------------------------------------------------------------*/

        // expose html5
        window.html5 = html5;

        // shiv the document
        shivDocument(document);

    }(this, document));
    /*>>shiv*/

    // Assign private properties to the return object with prefix
    Modernizr._version      = version;

    // expose these for the plugin API. Look in the source for how to join() them against your input
    /*>>prefixes*/
    Modernizr._prefixes     = prefixes;
    /*>>prefixes*/
    /*>>domprefixes*/
    Modernizr._domPrefixes  = domPrefixes;
    Modernizr._cssomPrefixes  = cssomPrefixes;
    /*>>domprefixes*/

    /*>>mq*/
    // Modernizr.mq tests a given media query, live against the current state of the window
    // A few important notes:
    //   * If a browser does not support media queries at all (eg. oldIE) the mq() will always return false
    //   * A max-width or orientation query will be evaluated against the current state, which may change later.
    //   * You must specify values. Eg. If you are testing support for the min-width media query use:
    //       Modernizr.mq('(min-width:0)')
    // usage:
    // Modernizr.mq('only screen and (max-width:768)')
    Modernizr.mq            = testMediaQuery;
    /*>>mq*/

    /*>>hasevent*/
    // Modernizr.hasEvent() detects support for a given event, with an optional element to test on
    // Modernizr.hasEvent('gesturestart', elem)
    Modernizr.hasEvent      = isEventSupported;
    /*>>hasevent*/

    /*>>testprop*/
    // Modernizr.testProp() investigates whether a given style property is recognized
    // Note that the property names must be provided in the camelCase variant.
    // Modernizr.testProp('pointerEvents')
    Modernizr.testProp      = function(prop){
        return testProps([prop]);
    };
    /*>>testprop*/

    /*>>testallprops*/
    // Modernizr.testAllProps() investigates whether a given style property,
    //   or any of its vendor-prefixed variants, is recognized
    // Note that the property names must be provided in the camelCase variant.
    // Modernizr.testAllProps('boxSizing')
    Modernizr.testAllProps  = testPropsAll;
    /*>>testallprops*/


    /*>>teststyles*/
    // Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards
    // Modernizr.testStyles('#modernizr { position:absolute }', function(elem, rule){ ... })
    Modernizr.testStyles    = injectElementWithStyles;
    /*>>teststyles*/


    /*>>prefixed*/
    // Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of your input
    // Modernizr.prefixed('boxSizing') // 'MozBoxSizing'

    // Properties must be passed as dom-style camelcase, rather than `box-sizing` hypentated style.
    // Return values will also be the camelCase variant, if you need to translate that to hypenated style use:
    //
    //     str.replace(/([A-Z])/g, function(str,m1){ return '-' + m1.toLowerCase(); }).replace(/^ms-/,'-ms-');

    // If you're trying to ascertain which transition end event to bind to, you might do something like...
    //
    //     var transEndEventNames = {
    //       'WebkitTransition' : 'webkitTransitionEnd',
    //       'MozTransition'    : 'transitionend',
    //       'OTransition'      : 'oTransitionEnd',
    //       'msTransition'     : 'MSTransitionEnd',
    //       'transition'       : 'transitionend'
    //     },
    //     transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];

    Modernizr.prefixed      = function(prop, obj, elem){
      if(!obj) {
        return testPropsAll(prop, 'pfx');
      } else {
        // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'
        return testPropsAll(prop, obj, elem);
      }
    };
    /*>>prefixed*/


    /*>>cssclasses*/
    // Remove "no-js" class from <html> element, if it exists:
    docElement.className = docElement.className.replace(/(^|\s)no-js(\s|$)/, '$1$2') +

                            // Add the new classes to the <html> element.
                            (enableClasses ? ' js ' + classes.join(' ') : '');
    /*>>cssclasses*/

    return Modernizr;

})(this, this.document);
// JavaScript Document//jquery quickfix for placeholder attribute on form fields
if(!Modernizr.input.placeholder){$('[placeholder]').focus(function(){var input=$(this);if(input.val()==input.attr('placeholder')){input.val('');input.removeClass('placeholder')}}).blur(function(){var input=$(this);if(input.val()==''||input.val()==input.attr('placeholder')){input.addClass('placeholder');input.val(input.attr('placeholder'))}}).blur();$('[placeholder]').parents('form').submit(function(){$(this).find('[placeholder]').each(function(){var input=$(this);if(input.val()==input.attr('placeholder')){input.val('')}})})}
/*
jQuery Waypoints - v1.1.7
Copyright (c) 2011-2012 Caleb Troughton
Dual licensed under the MIT license and GPL license.
https://github.com/imakewebthings/jquery-waypoints/blob/master/MIT-license.txt
https://github.com/imakewebthings/jquery-waypoints/blob/master/GPL-license.txt
*/
/*(function($,k,m,i,d){var e=$(i),g="waypoint.reached",b=function(o,n){o.element.trigger(g,n);if(o.options.triggerOnce){o.element[k]("destroy")}},h=function(p,o){if(!o){return -1}var n=o.waypoints.length-1;while(n>=0&&o.waypoints[n].element[0]!==p[0]){n-=1}return n},f=[],l=function(n){$.extend(this,{element:$(n),oldScroll:0,waypoints:[],didScroll:false,didResize:false,doScroll:$.proxy(function(){var q=this.element.scrollTop(),p=q>this.oldScroll,s=this,r=$.grep(this.waypoints,function(u,t){return p?(u.offset>s.oldScroll&&u.offset<=q):(u.offset<=s.oldScroll&&u.offset>q)}),o=r.length;if(!this.oldScroll||!q){$[m]("refresh")}this.oldScroll=q;if(!o){return}if(!p){r.reverse()}$.each(r,function(u,t){if(t.options.continuous||u===o-1){b(t,[p?"down":"up"])}})},this)});$(n).bind("scroll.waypoints",$.proxy(function(){if(!this.didScroll){this.didScroll=true;i.setTimeout($.proxy(function(){this.doScroll();this.didScroll=false},this),$[m].settings.scrollThrottle)}},this)).bind("resize.waypoints",$.proxy(function(){if(!this.didResize){this.didResize=true;i.setTimeout($.proxy(function(){$[m]("refresh");this.didResize=false},this),$[m].settings.resizeThrottle)}},this));e.load($.proxy(function(){this.doScroll()},this))},j=function(n){var o=null;$.each(f,function(p,q){if(q.element[0]===n){o=q;return false}});return o},c={init:function(o,n){this.each(function(){var u=$.fn[k].defaults.context,q,t=$(this);if(n&&n.context){u=n.context}if(!$.isWindow(u)){u=t.closest(u)[0]}q=j(u);if(!q){q=new l(u);f.push(q)}var p=h(t,q),s=p<0?$.fn[k].defaults:q.waypoints[p].options,r=$.extend({},s,n);r.offset=r.offset==="bottom-in-view"?function(){var v=$.isWindow(u)?$[m]("viewportHeight"):$(u).height();return v-$(this).outerHeight()}:r.offset;if(p<0){q.waypoints.push({element:t,offset:null,options:r})}else{q.waypoints[p].options=r}if(o){t.bind(g,o)}if(n&&n.handler){t.bind(g,n.handler)}});$[m]("refresh");return this},remove:function(){return this.each(function(o,p){var n=$(p);$.each(f,function(r,s){var q=h(n,s);if(q>=0){s.waypoints.splice(q,1);if(!s.waypoints.length){s.element.unbind("scroll.waypoints resize.waypoints");f.splice(r,1)}}})})},destroy:function(){return this.unbind(g)[k]("remove")}},a={refresh:function(){$.each(f,function(r,s){var q=$.isWindow(s.element[0]),n=q?0:s.element.offset().top,p=q?$[m]("viewportHeight"):s.element.height(),o=q?0:s.element.scrollTop();$.each(s.waypoints,function(u,x){if(!x){return}var t=x.options.offset,w=x.offset;if(typeof x.options.offset==="function"){t=x.options.offset.apply(x.element)}else{if(typeof x.options.offset==="string"){var v=parseFloat(x.options.offset);t=x.options.offset.indexOf("%")?Math.ceil(p*(v/100)):v}}x.offset=x.element.offset().top-n+o-t;if(x.options.onlyOnScroll){return}if(w!==null&&s.oldScroll>w&&s.oldScroll<=x.offset){b(x,["up"])}else{if(w!==null&&s.oldScroll<w&&s.oldScroll>=x.offset){b(x,["down"])}else{if(!w&&s.element.scrollTop()>x.offset){b(x,["down"])}}}});s.waypoints.sort(function(u,t){return u.offset-t.offset})})},viewportHeight:function(){return(i.innerHeight?i.innerHeight:e.height())},aggregate:function(){var n=$();$.each(f,function(o,p){$.each(p.waypoints,function(q,r){n=n.add(r.element)})});return n}};$.fn[k]=function(n){if(c[n]){return c[n].apply(this,Array.prototype.slice.call(arguments,1))}else{if(typeof n==="function"||!n){return c.init.apply(this,arguments)}else{if(typeof n==="object"){return c.init.apply(this,[null,n])}else{$.error("Method "+n+" does not exist on jQuery "+k)}}}};$.fn[k].defaults={continuous:true,offset:0,triggerOnce:false,context:i};$[m]=function(n){if(a[n]){return a[n].apply(this)}else{return a.aggregate()}};$[m].settings={resizeThrottle:200,scrollThrottle:100};e.load(function(){$[m]("refresh")})})(jQuery,"waypoint","waypoints",window);*/

/*!
Waypoints - 3.1.0
Copyright © 2011-2015 Caleb Troughton
Licensed under the MIT license.
https://github.com/imakewebthings/waypoints/blog/master/licenses.txt
*/
(function() {
  'use strict'

  var keyCounter = 0
  var allWaypoints = {}

  /* http://imakewebthings.com/waypoints/api/waypoint */
  function Waypoint(options) {
    if (!options) {
      throw new Error('No options passed to Waypoint constructor')
    }
    if (!options.element) {
      throw new Error('No element option passed to Waypoint constructor')
    }
    if (!options.handler) {
      throw new Error('No handler option passed to Waypoint constructor')
    }

    this.key = 'waypoint-' + keyCounter
    this.options = Waypoint.Adapter.extend({}, Waypoint.defaults, options)
    this.element = this.options.element
    this.adapter = new Waypoint.Adapter(this.element)
    this.callback = options.handler
    this.axis = this.options.horizontal ? 'horizontal' : 'vertical'
    this.enabled = this.options.enabled
    this.triggerPoint = null
    this.group = Waypoint.Group.findOrCreate({
      name: this.options.group,
      axis: this.axis
    })
    this.context = Waypoint.Context.findOrCreateByElement(this.options.context)

    if (Waypoint.offsetAliases[this.options.offset]) {
      this.options.offset = Waypoint.offsetAliases[this.options.offset]
    }
    this.group.add(this)
    this.context.add(this)
    allWaypoints[this.key] = this
    keyCounter += 1
  }

  /* Private */
  Waypoint.prototype.queueTrigger = function(direction) {
    this.group.queueTrigger(this, direction)
  }

  /* Private */
  Waypoint.prototype.trigger = function(args) {
    if (!this.enabled) {
      return
    }
    if (this.callback) {
      this.callback.apply(this, args)
    }
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/destroy */
  Waypoint.prototype.destroy = function() {
    this.context.remove(this)
    this.group.remove(this)
    delete allWaypoints[this.key]
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/disable */
  Waypoint.prototype.disable = function() {
    this.enabled = false
    return this
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/enable */
  Waypoint.prototype.enable = function() {
    this.context.refresh()
    this.enabled = true
    return this
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/next */
  Waypoint.prototype.next = function() {
    return this.group.next(this)
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/previous */
  Waypoint.prototype.previous = function() {
    return this.group.previous(this)
  }

  /* Private */
  Waypoint.invokeAll = function(method) {
    var allWaypointsArray = []
    for (var waypointKey in allWaypoints) {
      allWaypointsArray.push(allWaypoints[waypointKey])
    }
    for (var i = 0, end = allWaypointsArray.length; i < end; i++) {
      allWaypointsArray[i][method]()
    }
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/destroy-all */
  Waypoint.destroyAll = function() {
    Waypoint.invokeAll('destroy')
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/disable-all */
  Waypoint.disableAll = function() {
    Waypoint.invokeAll('disable')
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/enable-all */
  Waypoint.enableAll = function() {
    Waypoint.invokeAll('enable')
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/refresh-all */
  Waypoint.refreshAll = function() {
    Waypoint.Context.refreshAll()
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/viewport-height */
  Waypoint.viewportHeight = function() {
    return window.innerHeight || document.documentElement.clientHeight
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/viewport-width */
  Waypoint.viewportWidth = function() {
    return document.documentElement.clientWidth
  }

  Waypoint.adapters = []

  Waypoint.defaults = {
    context: window,
    continuous: true,
    enabled: true,
    group: 'default',
    horizontal: false,
    offset: 0
  }

  Waypoint.offsetAliases = {
    'bottom-in-view': function() {
      return this.context.innerHeight() - this.adapter.outerHeight()
    },
    'right-in-view': function() {
      return this.context.innerWidth() - this.adapter.outerWidth()
    }
  }

  window.Waypoint = Waypoint
}())
;(function() {
  'use strict'

  function requestAnimationFrameShim(callback) {
    window.setTimeout(callback, 1000 / 60)
  }

  var keyCounter = 0
  var contexts = {}
  var Waypoint = window.Waypoint
  var oldWindowLoad = window.onload

  /* http://imakewebthings.com/waypoints/api/context */
  function Context(element) {
    this.element = element
    this.Adapter = Waypoint.Adapter
    this.adapter = new this.Adapter(element)
    this.key = 'waypoint-context-' + keyCounter
    this.didScroll = false
    this.didResize = false
    this.oldScroll = {
      x: this.adapter.scrollLeft(),
      y: this.adapter.scrollTop()
    }
    this.waypoints = {
      vertical: {},
      horizontal: {}
    }

    element.waypointContextKey = this.key
    contexts[element.waypointContextKey] = this
    keyCounter += 1

    this.createThrottledScrollHandler()
    this.createThrottledResizeHandler()
  }

  /* Private */
  Context.prototype.add = function(waypoint) {
    var axis = waypoint.options.horizontal ? 'horizontal' : 'vertical'
    this.waypoints[axis][waypoint.key] = waypoint
    this.refresh()
  }

  /* Private */
  Context.prototype.checkEmpty = function() {
    var horizontalEmpty = this.Adapter.isEmptyObject(this.waypoints.horizontal)
    var verticalEmpty = this.Adapter.isEmptyObject(this.waypoints.vertical)
    if (horizontalEmpty && verticalEmpty) {
      this.adapter.off('.waypoints')
      delete contexts[this.key]
    }
  }

  /* Private */
  Context.prototype.createThrottledResizeHandler = function() {
    var self = this

    function resizeHandler() {
      self.handleResize()
      self.didResize = false
    }

    this.adapter.on('resize.waypoints', function() {
      if (!self.didResize) {
        self.didResize = true
        Waypoint.requestAnimationFrame(resizeHandler)
      }
    })
  }

  /* Private */
  Context.prototype.createThrottledScrollHandler = function() {
    var self = this
    function scrollHandler() {
      self.handleScroll()
      self.didScroll = false
    }

    this.adapter.on('scroll.waypoints', function() {
      if (!self.didScroll || Waypoint.isTouch) {
        self.didScroll = true
        Waypoint.requestAnimationFrame(scrollHandler)
      }
    })
  }

  /* Private */
  Context.prototype.handleResize = function() {
    Waypoint.Context.refreshAll()
  }

  /* Private */
  Context.prototype.handleScroll = function() {
    var triggeredGroups = {}
    var axes = {
      horizontal: {
        newScroll: this.adapter.scrollLeft(),
        oldScroll: this.oldScroll.x,
        forward: 'right',
        backward: 'left'
      },
      vertical: {
        newScroll: this.adapter.scrollTop(),
        oldScroll: this.oldScroll.y,
        forward: 'down',
        backward: 'up'
      }
    }

    for (var axisKey in axes) {
      var axis = axes[axisKey]
      var isForward = axis.newScroll > axis.oldScroll
      var direction = isForward ? axis.forward : axis.backward

      for (var waypointKey in this.waypoints[axisKey]) {
        var waypoint = this.waypoints[axisKey][waypointKey]
        var wasBeforeTriggerPoint = axis.oldScroll < waypoint.triggerPoint
        var nowAfterTriggerPoint = axis.newScroll >= waypoint.triggerPoint
        var crossedForward = wasBeforeTriggerPoint && nowAfterTriggerPoint
        var crossedBackward = !wasBeforeTriggerPoint && !nowAfterTriggerPoint
        if (crossedForward || crossedBackward) {
          waypoint.queueTrigger(direction)
          triggeredGroups[waypoint.group.id] = waypoint.group
        }
      }
    }

    for (var groupKey in triggeredGroups) {
      triggeredGroups[groupKey].flushTriggers()
    }

    this.oldScroll = {
      x: axes.horizontal.newScroll,
      y: axes.vertical.newScroll
    }
  }

  /* Private */
  Context.prototype.innerHeight = function() {
    if (this.element === this.element.window) {
      return Waypoint.viewportHeight()
    }
    return this.adapter.innerHeight()
  }

  /* Private */
  Context.prototype.remove = function(waypoint) {
    delete this.waypoints[waypoint.axis][waypoint.key]
    this.checkEmpty()
  }

  /* Private */
  Context.prototype.innerWidth = function() {
    if (this.element === this.element.window) {
      return Waypoint.viewportWidth()
    }
    return this.adapter.innerWidth()
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/context-destroy */
  Context.prototype.destroy = function() {
    var allWaypoints = []
    for (var axis in this.waypoints) {
      for (var waypointKey in this.waypoints[axis]) {
        allWaypoints.push(this.waypoints[axis][waypointKey])
      }
    }
    for (var i = 0, end = allWaypoints.length; i < end; i++) {
      allWaypoints[i].destroy()
    }
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/context-refresh */
  Context.prototype.refresh = function() {
    var isWindow = this.element === this.element.window
    var contextOffset = this.adapter.offset()
    var triggeredGroups = {}
    var axes

    this.handleScroll()
    axes = {
      horizontal: {
        contextOffset: isWindow ? 0 : contextOffset.left,
        contextScroll: isWindow ? 0 : this.oldScroll.x,
        contextDimension: this.innerWidth(),
        oldScroll: this.oldScroll.x,
        forward: 'right',
        backward: 'left',
        offsetProp: 'left'
      },
      vertical: {
        contextOffset: isWindow ? 0 : contextOffset.top,
        contextScroll: isWindow ? 0 : this.oldScroll.y,
        contextDimension: this.innerHeight(),
        oldScroll: this.oldScroll.y,
        forward: 'down',
        backward: 'up',
        offsetProp: 'top'
      }
    }

    for (var axisKey in axes) {
      var axis = axes[axisKey]
      for (var waypointKey in this.waypoints[axisKey]) {
        var waypoint = this.waypoints[axisKey][waypointKey]
        var adjustment = waypoint.options.offset
        var oldTriggerPoint = waypoint.triggerPoint
        var elementOffset = 0
        var freshWaypoint = oldTriggerPoint == null
        var contextModifier, wasBeforeScroll, nowAfterScroll
        var triggeredBackward, triggeredForward

        if (waypoint.element !== waypoint.element.window) {
          elementOffset = waypoint.adapter.offset()[axis.offsetProp]
        }

        if (typeof adjustment === 'function') {
          adjustment = adjustment.apply(waypoint)
        }
        else if (typeof adjustment === 'string') {
          adjustment = parseFloat(adjustment)
          if (waypoint.options.offset.indexOf('%') > - 1) {
            adjustment = Math.ceil(axis.contextDimension * adjustment / 100)
          }
        }

        contextModifier = axis.contextScroll - axis.contextOffset
        waypoint.triggerPoint = elementOffset + contextModifier - adjustment
        wasBeforeScroll = oldTriggerPoint < axis.oldScroll
        nowAfterScroll = waypoint.triggerPoint >= axis.oldScroll
        triggeredBackward = wasBeforeScroll && nowAfterScroll
        triggeredForward = !wasBeforeScroll && !nowAfterScroll

        if (!freshWaypoint && triggeredBackward) {
          waypoint.queueTrigger(axis.backward)
          triggeredGroups[waypoint.group.id] = waypoint.group
        }
        else if (!freshWaypoint && triggeredForward) {
          waypoint.queueTrigger(axis.forward)
          triggeredGroups[waypoint.group.id] = waypoint.group
        }
        else if (freshWaypoint && axis.oldScroll >= waypoint.triggerPoint) {
          waypoint.queueTrigger(axis.forward)
          triggeredGroups[waypoint.group.id] = waypoint.group
        }
      }
    }

    for (var groupKey in triggeredGroups) {
      triggeredGroups[groupKey].flushTriggers()
    }

    return this
  }

  /* Private */
  Context.findOrCreateByElement = function(element) {
    return Context.findByElement(element) || new Context(element)
  }

  /* Private */
  Context.refreshAll = function() {
    for (var contextId in contexts) {
      contexts[contextId].refresh()
    }
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/context-find-by-element */
  Context.findByElement = function(element) {
    return contexts[element.waypointContextKey]
  }

  window.onload = function() {
    if (oldWindowLoad) {
      oldWindowLoad()
    }
    Context.refreshAll()
  }

  Waypoint.requestAnimationFrame = function(callback) {
    var requestFn = window.requestAnimationFrame ||
      window.mozRequestAnimationFrame ||
      window.webkitRequestAnimationFrame ||
      requestAnimationFrameShim
    requestFn.call(window, callback)
  }
  Waypoint.Context = Context
}())
;(function() {
  'use strict'

  function byTriggerPoint(a, b) {
    return a.triggerPoint - b.triggerPoint
  }

  function byReverseTriggerPoint(a, b) {
    return b.triggerPoint - a.triggerPoint
  }

  var groups = {
    vertical: {},
    horizontal: {}
  }
  var Waypoint = window.Waypoint

  /* http://imakewebthings.com/waypoints/api/group */
  function Group(options) {
    this.name = options.name
    this.axis = options.axis
    this.id = this.name + '-' + this.axis
    this.waypoints = []
    this.clearTriggerQueues()
    groups[this.axis][this.name] = this
  }

  /* Private */
  Group.prototype.add = function(waypoint) {
    this.waypoints.push(waypoint)
  }

  /* Private */
  Group.prototype.clearTriggerQueues = function() {
    this.triggerQueues = {
      up: [],
      down: [],
      left: [],
      right: []
    }
  }

  /* Private */
  Group.prototype.flushTriggers = function() {
    for (var direction in this.triggerQueues) {
      var waypoints = this.triggerQueues[direction]
      var reverse = direction === 'up' || direction === 'left'
      waypoints.sort(reverse ? byReverseTriggerPoint : byTriggerPoint)
      for (var i = 0, end = waypoints.length; i < end; i += 1) {
        var waypoint = waypoints[i]
        if (waypoint.options.continuous || i === waypoints.length - 1) {
          waypoint.trigger([direction])
        }
      }
    }
    this.clearTriggerQueues()
  }

  /* Private */
  Group.prototype.next = function(waypoint) {
    this.waypoints.sort(byTriggerPoint)
    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)
    var isLast = index === this.waypoints.length - 1
    return isLast ? null : this.waypoints[index + 1]
  }

  /* Private */
  Group.prototype.previous = function(waypoint) {
    this.waypoints.sort(byTriggerPoint)
    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)
    return index ? this.waypoints[index - 1] : null
  }

  /* Private */
  Group.prototype.queueTrigger = function(waypoint, direction) {
    this.triggerQueues[direction].push(waypoint)
  }

  /* Private */
  Group.prototype.remove = function(waypoint) {
    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)
    if (index > -1) {
      this.waypoints.splice(index, 1)
    }
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/first */
  Group.prototype.first = function() {
    return this.waypoints[0]
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/last */
  Group.prototype.last = function() {
    return this.waypoints[this.waypoints.length - 1]
  }

  /* Private */
  Group.findOrCreate = function(options) {
    return groups[options.axis][options.name] || new Group(options)
  }

  Waypoint.Group = Group
}())
;(function() {
  'use strict'

  var $ = window.jQuery
  var Waypoint = window.Waypoint

  function JQueryAdapter(element) {
    this.$element = $(element)
  }

  $.each([
    'innerHeight',
    'innerWidth',
    'off',
    'offset',
    'on',
    'outerHeight',
    'outerWidth',
    'scrollLeft',
    'scrollTop'
  ], function(i, method) {
    JQueryAdapter.prototype[method] = function() {
      var args = Array.prototype.slice.call(arguments)
      return this.$element[method].apply(this.$element, args)
    }
  })

  $.each([
    'extend',
    'inArray',
    'isEmptyObject'
  ], function(i, method) {
    JQueryAdapter[method] = $[method]
  })

  Waypoint.adapters.push({
    name: 'jquery',
    Adapter: JQueryAdapter
  })
  Waypoint.Adapter = JQueryAdapter
}())
;(function() {
  'use strict'

  var Waypoint = window.Waypoint

  function createExtension(framework) {
    return function() {
      var waypoints = []
      var overrides = arguments[0]

      if (framework.isFunction(arguments[0])) {
        overrides = framework.extend({}, arguments[1])
        overrides.handler = arguments[0]
      }

      this.each(function() {
        var options = framework.extend({}, overrides, {
          element: this
        })
        if (typeof options.context === 'string') {
          options.context = framework(this).closest(options.context)[0]
        }
        waypoints.push(new Waypoint(options))
      })

      return waypoints
    }
  }

  if (window.jQuery) {
    window.jQuery.fn.waypoint = createExtension(window.jQuery)
  }
  if (window.Zepto) {
    window.Zepto.fn.waypoint = createExtension(window.Zepto)
  }
}())
;
var takeOverDisabledElements = [];

function takeover(el) {

	disableMainScroll();
	TweenMax.to($(el), animateSpeed, {autoAlpha:1, display:'block'});

	// disable fullpage scrolling if any
	if ($.fn.fullpage.setAllowScrolling) $.fn.fullpage.setAllowScrolling(false);
	if ($.fn.fullpage.setKeyboardScrolling) $.fn.fullpage.setKeyboardScrolling(false);

	// enable 'esc' keypress when takeover is active
	$(document).off('keyup').on('keyup', function(e){
		switch(e.keyCode) {
			case 27:
				$('.takeover').each(function(i,v){
					if (!$(v).hasClass('takeover-hidden')) {
						$(v).find('.btn-close').trigger('click');
					}
				});
			break;
		}
	});

	// prevent tab select when input is on focus in takeover, mobile. Disable other form elements in page
	takeOverDisabledElements = takeOverDisabledElements.concat($('input').not($('#contact-us-form input')).not($('input[disabled]')));
	takeOverDisabledElements = takeOverDisabledElements.concat($('select').not($('#contact-us-form select')).not($('select[disabled]')));
	takeOverDisabledElements = takeOverDisabledElements.concat($('textarea').not($('#contact-us-form textarea')).not($('textarea[disabled]')));
	$.each(takeOverDisabledElements, function(i,$this){
		$this.attr('disabled', 'disabled');
	});
}

function takeoverEnd(el){

	enableMainScroll();
	TweenMax.to($(el), animateSpeed, {autoAlpha:0, display:'none'});

	// enable fullpage scrolling if any
	if ($.fn.fullpage.setAllowScrolling) $.fn.fullpage.setAllowScrolling(true);
	if ($.fn.fullpage.setKeyboardScrolling) $.fn.fullpage.setKeyboardScrolling(true);

	// disable 'esc' keypress
	$(document).off('keyup');

	// enabling form elements that are disabled when takeover.
	$.each(takeOverDisabledElements, function(i,$this){
		$this.removeAttr('disabled');
	});

	takeOverDisabledElements = [];
}

function disableMainScroll() {
	$('html').addClass("disableScroll");
}

function enableMainScroll() {
	$('html').removeClass("disableScroll");
}
function initHeaderFooter() {

	/* HEADER */
	// click - logo
	if ($('.fullpage').length) {

		$('#header .logo').on('click', function(e) {
			e.preventDefault();
			$.fn.fullpage.moveTo(1);
			return false;
		});
	} 
	

	// click - search button
	$('#header .btn-search a').on('click', function(e) {
		// close other things.
		$(window).trigger('click');

		e.preventDefault();
		e.stopPropagation();
		$('#header').addClass('search-active');
		$('#header .btn-search form').fadeIn();

		updateSearchWidth();
		enableDOMClick();
		$('#header .search-query').focus();

		return false;
	});
	// click - search clear button
	$('#header .btn-search .search-close').on('click', function(e) {
		if($('#header .search-query').val() == ""){
          $(window).trigger('click');
    }
    else{
      e.preventDefault();
  		e.stopPropagation();

  		$('#header .search-query').val("");
  		$('#header .search-query').focus();
    }
		return false;
	});
	// prevent search bar from closing back
	$('#header .search-query').on('click focus', function(e) {
		e.preventDefault();
		e.stopPropagation();

		return false;
	});
	// keypress - enter search input
	$('#header .search-query').on('keypress', function(e){
		var code = e.keyCode || e.which;
		if (code == 13) {
			//Enter keycode
			searchSubmit();
		}
	});


	// click - SSO login
	$('#header .sso form input').on('click', function(e){
		e.stopPropagation();
	});
	$("#header .sso form").validate({
		debug: false,
		focusInvalid: 0,
		ignore: "",
		rules: {
			username: {required: true},
			password: {required: true}
		},
		messages: {
			username: "Please enter your user name.",
			password: "Please enter your password."
		},
		tooltip_options: {
			username: {trigger: 'focus'},
			password: {trigger: 'focus'},
		},
		success: function(label) {
		},
		submitHandler: function(form) {
			form.submit();
		},
		invalidHandler: function(form, validator) {
			var errors = validator.numberOfInvalids();

			$("#header .sso form").each(function(i,v){
				setTimeout(function(){
					// console.log($(v));
					$(v).focus();
					$(v).blur();
				}, i*2);
			});
		},
		errorPlacement: function(error, element) {
			// console.log('errorPlacement');
			// Override error placement to not show error messages beside elements //
		}
	});

	/* FOOTER */
	// click - language selector
	$('#footer .language-display li').on('click', function(e){
		e.preventDefault();
		$('#footer .language-selector').toggle();
		if (!$('#footer .language-selector').is(':hidden')) {
			enableDOMClick();
		}
		return false;
	});

	// setting the default page language
	var lang = $('body').attr('data-lang') || 'en-us';
	$('#footer .language-selector li[data-lang='+lang+']').addClass('active').siblings().removeClass('active');
	$('#footer .language-display li').attr('data-lang', lang);
}





/*
	HELPERS
*/
// search function
function searchSubmit() {
	var encoded = encodeURIComponent($('#header .search-query').val());
	$('#header .search-query').val(encoded);
	$('.btn-search form').attr('action', 'http://search.brocade.com/ESSearch/search.do').subtmit();
}
// update #header & .btn-contact theme from the data-theme attribute defined in each section
function updateTheme() {
	var theme = $.trim($('.wrapper.active').attr('data-theme'));
		if (theme.length) theme = 'theme-'+theme;
	$('#header').removeClass (function (index, css) {
	    return (css.match (/\btheme-\S+/g) || []).join(' ');
	}).addClass(theme);
	$(".fixed.btn-contact, .fixed.btn-top").removeClass (function (index, css) {
	    return (css.match (/\btheme-\S+/g) || []).join(' ');
	}).addClass(theme);
}
// update search field when expanded/active
function updateSearchWidth() {
	// window width - #header .left width
	var w = $('#header').width()-$('#header .left').width();
	// special case for desktop, subtracts the width of btn-menu and margins
	if (!isMobile || $('html.non-responsive').length) w -= ($('#header .right .btn-menu').width() + parseInt($('#header .btn-search').css('margin-right'))*2 );
	$('.btn-search form').width(w);
}
// update sso container position
function updateSSOPosition() {
	if (isMobile && !$('html.non-responsive').length) {
		$('#header .sso').css('left', '');
	} else {
		if ($('#header[login-state="signed-in"]').length) {
			$('#header .sso').css('left', $('#header .avatar').offset().left - $('#header .sso').width()*.5 + $('#header .avatar').width()*.6);
		} else {
			$('#header .sso').css('left', $('#header .btn-signin').offset().left - $('#header .sso').width()*.5 + $('#header .btn-signin').width()*.6);
		}
	}
}
function initMenu() {

	// the first element in the slimscroll has to be display:block in order for smaller content to be scrolled. 
	$('.menu-lvl').wrap('<div class="menu-lvl-wrapper"></div>');

	/* MENU */
	// click - menu button
	$('.btn-menu').on('click', function(e) {
		takeover('#menu-con');

		// determine the animateSpeed
		var customAnimateSpeed = (Modernizr.touch) ? animateSpeed : animateSpeed*2;

		// get window height
		var winHeight = getWinHeight();

		// get window height without header
		var winHeightWithoutHeader_menu = winHeight - ((isMobile && !$('html.non-responsive').length)?headerMobileHeight:0);

		// menu
		$('#menu-con .slimScrollDiv').css('height', winHeightWithoutHeader_menu);
		$(".menu-lvl ul li:last-child").css('padding-bottom', '');
		$('.menu-lvl-wrapper').slimScroll({
			height:"auto"
		});
		if (isMobile && !$('html.non-responsive').length) {
			$('.menu-lvl ul li:last-child').css('padding-bottom', function(){
				var ph = $(this).parents('.menu-lvl').css('height', 'auto').height();
				if (ph > winHeightWithoutHeader_menu) {
					$(this).css('padding-bottom', winHeightWithoutHeader_menu - $(this).parents('.menu-lvl').css('height', 'auto').height() );;
				}
			});
		} else {
			$(".menu-lvl").css('height', '');
		}

		TweenMax.fromTo($('#menu-lvl-1').parents('.slimScrollDiv'), customAnimateSpeed, {x:animateOffset, autoAlpha:0}, {display:'block', x:0, autoAlpha:1, ease:animateEase});
	});

	// close menu at any level
	$('#menu-con .btn-close').on('click touchend', function(e) {
		takeoverEnd('#menu-con');
		$('.menu-lvl-wrapper').slimScroll({destroy: true});
	});

	// level 1 menu item clicked
	$('#menu-lvl-1 a').on('click touchend', function(e) {

		e.preventDefault();
		window.open($(this).first().attr('href'),"_self");
	});
	
}

// update menu state in #header from the data-menu-state attribute defined in each section
function updateMenu() {
	var state = $.trim($('.wrapper.active').attr('data-menu-state'));
	if (state.length) state = 'state-' + state;
	$('#header').removeClass(function(index, css) {
		return (css.match(/\bstate-\S+/g) || []).join(' ');
	}).addClass(state);
}
function initContactus() {

	$('.btn-contact, .sticky.button').on('click', function(e) {
		e.preventDefault();
		window.open($(this).first().attr('href'),"_self");
	});
}



/*
	HELPERS
*/
// check if the contact-us button should be hidden if not unhide it.

function initPopup(id, params) {
	var content = "";
	// predefined
	switch(id) {
		case "store-max-quantity":
			content = '<div class="error-popup clearfix"><p>You have exceeded the maximum allowable quantity of '+((params && params.quantity)?params.quantity:'10')+'. Please enter your desired quantity. </p><div href="#" class="button orange right small-3 btn-okay">OKAY</div></div>';
			break;
		case "store-similar-product":
			content = '<div class="error-popup clearfix"><p>Sorry, you already have a similar product and support term in your shopoping cart. Woould you like to update it with your current selection?</p><div href="#" class="button orange right small-3 btn-yes">YES</div><div href="#" class="button orange right small-3 btn-no">NO</div></div>';
			break;
		default:
			// custom
			content = (params && params.content) ? params.content : "";
	}
	$.magnificPopup.open({
		items: {
			src: content, // can be a HTML string, jQuery object, or CSS selector
			type: 'inline'
		}
	});
}

function closePopup(){
	$.magnificPopup.close()
}
// update sso container position
function updateMyBrocadePanel() {
		if ($('#header[login-state="signed-in"]').length) {
			$('.quick-access-panel').find('ul.list-trailing-arrow > li').removeClass('locked');
			$('.quick-access-panel').find('.locked.footnotes').css('display', 'none');
			$('.show-on-signed-out').css('display', 'none');
			$('.show-on-signed-in').css('display', 'block');
			
		} else {
			$('.quick-access-panel > ul.list-trailing-arrow > li').addClass('locked');
			$('.quick-access-panel').find('.locked.footnotes').css('display', 'block');
			$('.show-on-signed-out').css('display', 'block');
			$('.show-on-signed-in').css('display', 'none');
		}
}

$.fn.equalizeHeights = function(){
  return this.height( Math.max.apply(this, $(this).map(function(i,e){ return $(e).height() }).get() ) )
}

$.fn.equalizeWidths = function(){
  return this.width( Math.max.apply(this, $(this).map(function(i,e){ return $(e).width() }).get() ) )
}
var fpScrollingSpeed = .8;
var youtubePlayers = {};
var slideRotating = false, slideRotatingID;

var homeFn = {
	init : function(){

		console.log('hihihi')

		test.user_logged_out();

		//get all sections in page and store in var sections;
		$.map($('.wrapper'), function(vv){
			$(vv).attr('class', function(i,v){
				if (v.match(/\bwrapper-\S+/g)) sections.push(v.match(/\bwrapper-\S+/g)[0].substring(8));
			})
		});

		// hide feature element first
		TweenMax.to($('.slide .feature-media, .slide .feature-info, .slide-video .feature-video-splash'), 0, {autoAlpha:0});

		if ($('.slide-video').length) {
			//add youtube script tag
			var tag = document.createElement('script');
			tag.src = "https://www.youtube.com/iframe_api";
			var firstScriptTag = document.getElementsByTagName('script')[0];
			firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
		}

		/* FULLPAGE */
		$('.fullpage').fullpage({

			//anchors: sections,
			sectionSelector: '.wrapper',
			scrollingSpeed: fpScrollingSpeed*1000,
			scrollOverflow: (isMobile) ? false : true,
			autoScrolling: (isMobile) ? false : true,
			animateAnchor: (isMobile) ? false : true,
			responsive:767,
			css3: true,
			easing: 'linear',
			easingcss3: 'ease',
			verticalCentered: false,
			resize: false,
			loopHorizontal: false,
			touchSensitivity: iPad?1:20,

			onLeave: function(index, nextIndex, direction){
				// console.log('onLeave', index, nextIndex, direction, sections[index-1]);

				// transiting between sections
				updateTheme();
				updateMenu();
				updateSSOPosition();
				updateSearchWidth();

				// call any onLeave methods for any modules on page
				modulesOnLeave(sections[index-1]);

				// fade in-out .fixed.btn-contact, .fixed.btn-top between sections
				if (!isMobile) $('.fixed.btn-contact, .fixed.btn-top').fadeOut('fast');

				//reset all video slides
				videoSlidesReset();

				// Fixed issue where eg. whell scroll to bottom in community and press keyboard up.
				// check if the previou section has slim scroll, reset it
				if ($('.wrapper.active .fp-scrollable').length) {
					$('.wrapper.active .fp-scrollable').slimScroll({ scrollTo : '0px' });
				}
	        },
	        afterLoad: function(anchorLink, index){
	        	// console.log('afterLoad1', anchorLink, index);

	        	slideInit();

				// call any afterLoad methods for any modules on page
				var sectionName;
				switch(index) {
					case 1:
					sectionName = 'feature';
					break;

					case 2:
					sectionName = 'explore';
					break;

					case 3:
					sectionName = 'community';
					break;

					default:
					sectionName = 'feature';
					break;
				}
				modulesAfterLoad(sectionName);

				// Fixed issue where slimscroll not activation for sections
				$.fn.fullpage.resize();

				// hide the .fixed.btn-contact, .fixed.btn-top on any last section
				if (!isMobile) {
					// only applicable to last-child
					if ($('.wrapper.active:last-child').length) {
						// check if the last-child is scrollable
						if ($('.wrapper.active:last-child .fp-scrollable').length) {
							$('.wrapper.active:last-child .fp-scrollable').slimScroll().unbind('slimscrolling').bind('slimscrolling', function(e, pos) {
								if (pos < (e.target.scrollHeight - e.target.clientHeight - $('#footer').height() - 40)) {
									$('.fixed.btn-contact, .fixed.btn-top').fadeIn();
								} else {
									$('.fixed.btn-contact, .fixed.btn-top').fadeOut();
								}
							});
						} else {
							$('.fixed.btn-contact, .fixed.btn-top').fadeOut();
						}
					}
				}

				// add keypress down and trackpad scroll for last section in order to see footer.
				if (!Modernizr.touch) {
					if (index == $(".fullpage .wrapper").length) {
						if ($(".fullpage .active.wrapper:last-child").length) {
							lastSectionAddCustomScroll();
						} else {
							lastSectionRemoveCustomScroll();
						}
					} else {
						lastSectionRemoveCustomScroll();
					}
				}
	        },
	        afterRender: function(){
				// invoke once after initialized

				TweenMax.fromTo(
					$('.fp-controlArrow.fp-next'),
					animateSpeed*3, {x:-animateOffset*.5, autoAlpha:0},
					{x:0, autoAlpha:.7, ease:animateEase, delay:animateSpeed*2, onCompleteParams:[$('.fp-controlArrow.fp-next')],
					onComplete:function($this){
						$this.css('transform', '');
					}}
				);
				TweenMax.fromTo(
					$('.fp-controlArrow.fp-prev'),
					animateSpeed*3, {x:animateOffset*.5, autoAlpha:0},
					{x:0, autoAlpha:.7, ease:animateEase, delay:animateSpeed*2, onCompleteParams:[$('.fp-controlArrow.fp-prev')],
					onComplete:function($this){
						$this.css('transform', '');
					}}
				);

				// down arrow only for desktop
				if (!isMobile && !Modernizr.touch) {
					$('.wrapper:eq(0) .fp-slides').parent().append('<div class="fp-controlArrow fp-down hide-on-mobile"></div>');

					TweenMax.fromTo(
						$('.fp-controlArrow.fp-down'),
						animateSpeed*3, {y:-animateOffset*.5, autoAlpha:0},
						{y:0, autoAlpha:.7, ease:animateEase, delay:animateSpeed*3, onCompleteParams:[$('.fp-controlArrow.fp-down')],
						onComplete:function($this){
							$this.css('transform', '');
						}}
					);

					$('.fp-down').off('click').on('click', function(e){
						e.preventDefault()

						e.stopPropagation();
						$.fn.fullpage.moveSectionDown();

						return false;
					});
				}

				$('.fixed.btn-top').on('click', function(){
					$.fn.fullpage.moveTo(1);
				});

				if(window.location.hash.replace('#', '').split('/').length == 1) {
					slideInit();
				}

				$('#container').css('opacity', 1);

				if (isMobile) {
					modulesAfterLoad();
				} else {
					modulesAfterLoad($('.wrapper.active').attr('data-anchor'));

					// scroll to top button
					($('.wrapper.active:first-child').length) ? $('.fixed.btn-top').hide() : $('.fixed.btn-top').show();

					// auto rotate for feature section, carosuel
					// slideRotateStart()
				}
	        },
	        afterResize: function(){
				// console.log('afterResize');

				removeSlimScrollOnMobile();
				modulesResize();
	        },
	        afterSlideLoad: function(anchorLink, index, slideAnchor, slideIndex){
				// console.log('afterSlideLoad', anchorLink, index, slideAnchor, slideIndex);

				slideInit();

				// Fixed issue where slimscroll not activation for sections
				$.fn.fullpage.resize();
	        },
	        onSlideLeave: function(anchorLink, index, slideIndex, direction){
	        	// console.log('onSlideLeave', anchorLink, index, slideIndex, direction);

				//reset all video slides
				videoSlidesReset();
	        }
		});
	},
	scroll : function() {
	},
	rescale : function() {
		// console.log("home - rescale");
		videoSlidesUpdateDimension();

		//reset to check height on rescale, portrait only
		if (Modernizr.touch && ($(window).height() > $(window).width()) ) {
			var sliderHeight = $(window).height(),
				newHeight = 0;

			//getting tallest slider height
			// sliderHeight
			$('.slide').each(function() {
				// console.log($(this), $(this).find('.feature-media').innerHeight(), $(this).find('.feature-info').innerHeight());

				newHeight = $(this).find('.feature-media').innerHeight() + $(this).find('.feature-info').innerHeight();
				if (newHeight > sliderHeight) sliderHeight = newHeight;

			});
			// console.log('sliderHeight', sliderHeight)
			$('.wrapper-feature').css('height', sliderHeight);
			// generic
			$('.full-height').css('min-height', sliderHeight);
			// feature only
			$('.feature-con').css('min-height', sliderHeight);
		} else {
			$('.wrapper-feature').css('height', $(window).innerHeight());
			// generic
			$('.full-height').css('min-height', $(window).innerHeight());
			// feature only
			$('.feature-con').css('min-height', $(window).innerHeight());
		}


		// console.log(previousResponsiveState !== isMobile, previousResponsiveState, isMobile, Modernizr.touch);
		if (previousResponsiveState !== isMobile) {
			previousResponsiveState = isMobile;

			$.fn.fullpage.setScrollOverflow((isMobile) ? false : true);
			$.fn.fullpage.setAutoScrolling((isMobile) ? false : true);
			$.fn.fullpage.setAnimateAnchor((isMobile) ? false : true);
			$.fn.fullpage.setMouseWheelScrolling(true);
			$.fn.fullpage.reBuild();

			$.each(modules, function(i,v){
				if (v.firstLoad) v.firstLoad = false;
			})

			if (isMobile) {
				modulesAfterLoad();
			} else {
				modulesAfterLoad($('.wrapper.active').attr('data-anchor'));
			}
			return;
		}

		$.fn.fullpage.resize();
	},
	finalize : function() {
	}
}
function slideRotateStart() {
	if (!isMobile) {
		slideRotating = true;
		slideRotatingID = window.setTimeout(slideRotateLoop, 1000);
	}
}
function slideRotateStop() {
	slideRotating = false;
	window.clearTimeout(slideRotatingID);
	delete slideRotatingID;
}
function slideRotateLoop() {
	if (slideRotating) {
		$.fn.fullpage.moveSlideRight();
		slideRotateLoop();
	}
}









/* FEATURE - SLIDE */
function slideTransitionIn() {
	if ($('.wrapper.active .slide').length && !parseInt($('.slide.active .feature-media').css('opacity'))) {
		TweenMax.fromTo($('.slide.active .feature-media, .slide.active .feature-video-splash'), animateSpeed, {y:-animateOffset}, {y:0, autoAlpha:1});
		TweenMax.fromTo($('.slide.active .feature-info'), animateSpeed, {y:animateOffset}, {y:0, autoAlpha:1});
	}
}
function slideShowArrowsUpdate() {

	if (!$('.wrapper.active .slide.active').prev().length) {
		$('.fp-controlArrow.fp-next').fadeIn();
		$('.fp-controlArrow.fp-prev').hide();
	} else if (!$('.wrapper.active .slide.active').next().length) {
		$('.fp-controlArrow.fp-prev').fadeIn();
		$('.fp-controlArrow.fp-next').hide();
	} else {
		$('.fp-controlArrow.fp-prev, .fp-controlArrow.fp-next').fadeIn();
	}

	if (Modernizr.touch) {
		$('.fp-controlArrow.fp-down').hide();
	} else {
		$('.fp-controlArrow.fp-down').fadeIn();
	}

	$('#header').fadeIn();
}
// initialise the slide when loaded
function slideInit() {
	slideTransitionIn();
	slideShowArrowsUpdate();

	// if it's a video slide
	if ($('.slide-video.active').length) {

		$('.slide-video.active').removeClass('playing');
		$('.slide-video.active').removeClass('complete');
		$('.feature-video-splash').show();
		setTimeout(function(){
			$('.feature-video').css('opacity', 1);
		}, animateSpeed*1000);

		// remove the intro video playback if it's a touch. mobile to tablet.
		if (Modernizr.touch) {
			$(".feature-video-intro").remove();
		}

		if (isMobile) {
			videoSlidesUpdateDimension();
		} else {

			if (Modernizr.touch) {
				videoSlidesUpdateDimension();
			} else {

				//play any video-intro if any
				if ($('.slide-video.active video.feature-video-intro').length) $('.slide-video.active video.feature-video-intro').get(0).play();
			}
		}

		// Fixed iPad bug. Where pointer-events:none defined in CSS has to be overwrite to auto after the first click.
		// this is cause, youtube player can't be proxy triggered if the first action is not by the user. After we've stored the youtube object in our youtubePlayers variable, we can proxy trigger playstate.
		var id = $('.slide-video.active .feature-video').attr('id');
		if (youtubePlayers[id].played) {
			$('.slide-video.active .feature-video-splash, .slide-video.active .btn-watch, .slide-video.active .btn-watch-again, .slide-video.active .feature-video-overlay').css('pointer-events', 'auto');
		}
		// initiailise the watch button
		$('.slide-video.active .feature-info, .slide-video.active .feature-video-splash, .slide-video.active .btn-watch, .slide-video.active .btn-watch-again, .slide-video.active .feature-video-overlay').off('click').on('click', function(e){
			e.preventDefault();

			videoSlidesUpdateDimension();

			$('input').blur();
			$(window).trigger('click');

			var id = $('.slide-video.active .feature-video').attr('id');

			if (youtubePlayers[id] && youtubePlayers[id].player) {
				try {
					youtubePlayers[id].player.seekTo(0, true);
					youtubePlayers[id].player.playVideo();
				} catch (e) {
					// console.log(e, youtubePlayers[id].player);
				}
			} else {
			}
			videoSlidePlaying();

			return false;
		});


	} else {

	}

	if (!isMobile) {
		if ($('.slide-video.active').length) {
			$('.fixed.btn-contact, .fixed.btn-top').fadeOut();
		} else {
			$('.fixed.btn-contact').fadeIn();
		}
		if ($('.wrapper.active:first-child').length) {
			$('.fixed.btn-top').fadeOut();
		} else {
			$('.fixed.btn-top').fadeIn();
		}
	}
}









/* FEATURE - SLIDE - VIDEO */
// reset all video in slides
function videoSlidesReset() {
	$('.slide-video .feature-video-complete').fadeOut();
	$('.slide-video .feature-video-intro, .feature-info, .feature-video-overlay').fadeIn();

	$('.slide-video, .slide-video .btn-close').off('click');
	$('.slide-video .feature-video-splash').show();
	$('.feature-video').css('opacity', 0);

	slideShowArrowsUpdate();
	$('.slide-video .btn-close').hide();
	$('.slide-video').removeClass('playing');
	$('.slide-video').removeClass('complete');

	videoSlidesStopAllVideos();

	$('.slide-video.active .feature-info, .slide-video.active .feature-video-splash, .slide-video.active .btn-watch, .slide-video.active .btn-watch-again, .slide-video.active .feature-video-overlay').off('click');
}
// show video CTA
function videoShowCTA() {
	var $parent = $('.slide-video.active');

	$parent.find('.feature-video-complete').css('display', 'table');

	$('.slide-video, .slide-video .btn-close').off('click');
	$parent.find('.feature-video-splash').show();

	slideShowArrowsUpdate();
	$parent.find('.btn-close').hide();
	$parent.removeClass('playing');
	$parent.addClass('complete');

	$('.masthead .masthead-arrow-down').show();

	videoSlidesStopAllVideos();
}
// constrain video within window, update slide dimension
function videoSlidesUpdateDimension() {
	var vWidth, vHeight;

	//always full width and height
	$('.feature-video-complete').width($(window).width()).height($(window).height());

	//console.log("1", $(window).height() - (isMobile?headerMobileHeight:headerDesktopHeight));
	$('.feature-video-complete-inner').height($(window).height() - (isMobile?headerMobileHeight:headerDesktopHeight));

	//inner pages height setting
	if ($('.masthead').length) {
		$('.masthead .feature-video-complete').width($(window).width()).height($('.masthead').height());
		$('.feature-video-complete-inner').height($('.masthead').height() - (isMobile?headerMobileHeight:headerDesktopHeight));
	}

	if (isMobile) {

		vWidth = $(window).width();
		vHeight = $(window).width()/16*9;

		$('.feature-video-splash').width(vWidth).height(vHeight).css({'margin-left':'', 'margin-top':'', 'max-width':vWidth});
		$('.feature-video-intro, .feature-video-overlay, .feature-media, .feature-video').width(vWidth).height(vHeight).css({'margin-left':'', 'margin-top':''});

		$(".slide-video").height($(window).height());
	} else {

		// wierd long landscape > 16:9
		if ($(window).width()/$(window).height() > 16/9) {
			vWidth = $(window).width();
			vHeight = Math.ceil($(window).width()/16*9);
		} else {
			vHeight = $(window).height();
			vWidth = Math.ceil($(window).height()/9*16);
		}


		$('.feature-video-splash').width(vWidth).height(vHeight).css({'margin-left':'', 'margin-top':'', 'max-width':vWidth});
		$('.feature-video').width($(window).width()).height($(window).height());
		$('.feature-video-intro, .feature-video-overlay').width(vWidth).height(vHeight).css({'margin-left':$(window).width()*.5, 'margin-top':$(window).height()*.5});

		//inner pages settings
		$('.masthead .feature-video').width($('.masthead').width()).height($('.masthead').height()).css({'max-height':$('.masthead').height()});
		$('.masthead .feature-video-intro, .masthead .feature-video-overlay').css({'margin-left':'', 'margin-top':''});
	}

	// touch overrides
	if (Modernizr.touch) {

		vWidth = $(window).width();
		vHeight = $(window).width()/16*9;
		$('.feature-video-intro, .feature-video-overlay, .feature-video').width(vWidth).height(vHeight).css({'margin-left':'', 'margin-top':''});
		$('.feature-media').css('height', 'auto');

		//mobile only
		var isPortrait = $(window).width() < $(window).height();
		if (isPortrait) {
			if (!isMobile) {
				// ipad, tablet
				$('.feature-video-splash').width(vWidth).height(vHeight).css({'margin-left':'', 'margin-top':'', 'max-width':vWidth});
			}
		} else {
			if ($(window).width()/$(window).height() > 16/9) {
				vWidth = $(window).width();
				vHeight = Math.ceil($(window).width()/16*9);
			} else {
				vHeight = $(window).height();
				vWidth = Math.ceil($(window).height()/9*16);
			}

			$('.feature-video-splash').width(vWidth).height(vHeight).css({'margin-left':'', 'margin-top':'', 'max-width':vWidth});
		}
	}
	if(!$('.home').length == 0) {
		setTimeout(function(){
			$.fn.fullpage.removeSlimScroll($('.slide.active .slimScrollDiv'));
			$('.slide.active .slimScrollBar').remove();
			$('.slide.active .slimScrollRail').remove();
		}, 400);
	}
}
function onYouTubeIframeAPIReady () {
	// parse all youtube assets when youtube API is ready
	// console.log('YOUTUBE >> onYouTubeIframeAPIReady');
	videoSlidesCreateAllVideos();
}
function videoSlidesCreateAllVideos(){
	youtubePlayers = {};
	$('.feature-youtube-video').each(function(i,v){
		var origin = (location.origin) ? location.origin : '';
		var id = $(v).attr('id');
		var vid = $(v).attr('data-vid');
		var player = new YT.Player(id, {
			videoId: vid,
			playerVars: {
				enablejsapi:1,
				rel:0,
				showinfo:0,
				version:3,
				wmode: 'transparent',
			},
			events: {
				'onReady': videoSlidesPlayerReady,
				'onStateChange': videoSlidesPlayerStateChange
			}
		});
		youtubePlayers[id] = {
			id:id,
			player:player
		};
	});
}
function videoSlidesStopAllVideos(){
	$.each(youtubePlayers, function(i,v){
		try {
			if (v.player.stopVideo) v.player.pauseVideo();
		} catch (e) {
		}
	})
}
function videoSlidesPlayerReady(playerid){
	// console.log('YOUTUBE >> videoSlidesPlayerReady', playerid);
}
function videoSlidesPlayerStateChange(state) {

	if (!state.target.getPlayerState()) return;

	var $parent = $('.slide-video.active');

	// console.log('>> '+state.target.getPlayerState());
	// alert(state.target.getPlayerState());
	switch (state.target.getPlayerState()) {
		case -1:
			// – unstarted
			break;
		case 0:
			// – ended
			videoShowCTA();
			break;
		case 1:
			// – playing
			videoSlidePlaying();

			// Fixed iPad bug. Where pointer-events:none defined in CSS has to be overwrite to auto after the first click.
			//var id = $(state.target.o).attr('id');

			var id = $('.slide-video.active .feature-video').attr('id');
			youtubePlayers[id].played = true;
			break;
		case 2:
			// – paused
			slideShowArrowsUpdate();
			if (Modernizr.touch) {
				videoShowCTA();
				// $parent.find('.feature-video-complete').css('display', 'table');
			} else {
				$('#header').hide();
			}

			break;
		case 3:
			// – buffering
			videoSlidePlaying();

			break;
		case 5:
			// – video cued
			break;
	}
}
function videoSlidePlaying() {

	var $parent = $('.slide-video.active');

	$parent.removeClass('complete');
	$parent.addClass('playing');
	$parent.find('.btn-close').fadeIn();
	$parent.find('.feature-video-intro').hide();
	$parent.find('.feature-video-splash').hide();
	$parent.find('.feature-video-complete').hide();
	$parent.find('.feature-video-overlay').hide();
	$parent.find('.feature-info').hide();
	$parent.find('.btn-close').show();
	$('.masthead-arrow-down').hide();
	$('#header, .fp-controlArrow').hide();

	addVideoExitListeners();
}
function addVideoExitListeners() {
	$('.slide-video.active, .slide-video.active .btn-close').off('click').on('click', function(){
		videoShowCTA();
	})
}






/* FULLPAGE */
function removeSlimScrollOnMobile() {
	if (isMobile) {
		function removeSlimScrollOnMobileTimeout(){
			// always expand to fullheight on mobile
			if ($('.wrapper>.slimScrollDiv').length) {
				$.fn.fullpage.removeSlimScroll($('.wrapper'));
				setTimeout(removeSlimScrollOnMobileTimeout, 60);
			}
		}
		setTimeout(removeSlimScrollOnMobileTimeout, 60);
	}
}
function lastSectionKeyDown(e) {
	var ss = $(".fullpage .wrapper:last-child .fp-scrollable");
	if (ss.height() !== $(window).height()) {
		var oriheight = ss.height();
		// retrieve the true height first
		var trueheight = ss.height("auto").height();
		// reinstate the original height
		ss.height(oriheight);
	}
	switch(e.keyCode) {
		case 40:
			//down
			ss.slimScroll({ scrollBy: '30px' });
			break;
		case 38:
			//up
			ss.slimScroll({ scrollBy: '-30px' });
			// add back fullpage's keyboard events when it reaches the top
			if (parseInt($(".fullpage .wrapper:last-child .slimScrollBar").css("top")) == 0) {
				// console.log("scrollup2");
				lastSectionRemoveCustomScroll();
				// $.fn.fullpage.moveSectionUp();
			}
			break;
	}
}
var lastSectionCustomScrollBool = false;
function lastSectionAddCustomScroll() {
	lastSectionCustomScrollBool = true;
	// console.log("adding custom");
	$.fn.fullpage.setAllowScrolling(false);
	$.fn.fullpage.setMouseWheelScrolling(false);
	$.fn.fullpage.setKeyboardScrolling(false);
	setTimeout(function(){
		$(document).on('keydown', lastSectionKeyDown);
		$(document).on('mousewheel', lastSectionScrollDown);
	}, fpScrollingSpeed*1000);
}
function lastSectionRemoveCustomScroll() {
	if (lastSectionCustomScrollBool) {
		lastSectionCustomScrollBool = false;
		// console.log("removing custom");
		$(document).off('keydown', lastSectionKeyDown);
		$(document).off('mousewheel', lastSectionScrollDown);
		setTimeout(function(){
			$.fn.fullpage.setMouseWheelScrolling(true);
			$.fn.fullpage.setAllowScrolling(true);
			$.fn.fullpage.setKeyboardScrolling(true);
		}, fpScrollingSpeed*500);
	}
}
function lastSectionScrollDown(e){
	// console.log("lastSectionScrollDown", e.originalEvent.wheelDeltaY);
	var ss = $(".fullpage .wrapper:last-child .fp-scrollable");
	if (e.originalEvent.wheelDeltaY <= -2) {
		//down
		ss.slimScroll({ scrollBy: '30px' });
	} else {
		//up
		ss.slimScroll({ scrollBy: '-30px' });
		// add back fullpage's scroll events when it reaches the top
		if (parseInt($(".fullpage .wrapper:last-child .slimScrollBar").css("top")) == 0) {
			lastSectionRemoveCustomScroll();
		}
	}
}
var sections = [];
var animateSpeed = .36;
var animateOffset = 50;
var animateEase = Cubic.easeInOut;
var isMobile = $(window).width()<768;
var isTouch = Modernizr.touch;
var isQuickLinksBar = $('.quick-links-bar').length > 0 && $('.quick-links-bar--show-header').length == 0;
var isStickyQuickLinksBar = false;
var quickLinksBarAnimating = false;
var isIOSChrome = navigator.userAgent.match('CriOS');
var isAnimatedScroll = false;
var previousResponsiveState = isMobile;
var headerMobileHeight = 56;
var headerDesktopHeight = 68;
var quickLinksHeight = $('.quick-links-bar').height();
var headerVisible = true;
var lastScrollTop = 0;
var iPad = navigator.userAgent.match(/(iPad)/g) ? true : false;
var partnerOverlay;
var topButton = $('.button-top');
var docHeight, winHeight, footerHeight;

// Breakpoints
var breakpointMobile = 480,
	breakpointTablet = 768,
	breakpointDesktop = 960;

var commonFn = {

	init : function(){
		initHeaderFooter();
		initMenu();
		initContactus();

		/* NOTICE */
		$(".notice .btn-close").on('click', function(){
			$(".notice-wrapper").fadeOut("slow");
		});

		/* tabbed content toggles */
		initTabs();

		/* Button Top */
		$('.button-top').on('click', function(e) {
			e.preventDefault();
			backTop();
		});

		/* If Homepage */
		if (!$('.fullpage').length) $('#container').css('opacity', 1);


		$(window).load(function(){

			/**
			 * Change the header color theme according to 
			 * the data attribute set on each section
			 */
		 	$('.wrapper').waypoint(function(direction) {

				if(($(window).scrollTop() != 0 && !isQuickLinksBar && $(this.element).css('position') != 'fixed') // sections
					|| ($(window).scrollTop() == 0 && $(this.element).css('position') == 'fixed') // .masthead
					|| ($(window).scrollTop() == 0 && $(this.element).css('position') != 'fixed') ) { // pages with no .masthead

					if($('.home').length > 0) {
						$('.wrapper').removeClass('active');
						$(this.element).addClass('active');
					} else {
						if(direction == 'up' && $(this.element).index() == 0) {
							$('.wrapper').removeClass('active');
							$('.masthead, .wrapper-masthead').addClass('active');
						} else {
							$('.wrapper').removeClass('active');
							$(this.element).addClass('active');
						}
					}

					if(!isQuickLinksBar) {
						updateTheme();
					}

					updateMenu();
			    }
			}, {
			  offset: headerDesktopHeight
			})

			if($('.home').length == 0) {
				// Set first section as active if not brocade.com homepage
				$('.wrapper').eq(0).addClass('active');
			} else {
				// Remove active class on Explore section on homepage
				$('.wrapper').eq(1).removeClass('active');
			}
		})

		/**
		 * Set Quick Links Bar
		 */
		if(isQuickLinksBar) {
			var st = $(window).scrollTop(),
				quicklinksOffset = $('.quick-links-bar').offset(),
				mastheadHeight = $('.masthead').height();

			if($(window).scrollTop() >= quicklinksOffset.top - $('#header').height()) {
	        	if(headerVisible) { // fire once only

		        	hideHeader();
		        	headerVisible = false;
		        	isStickyQuickLinksBar = true;

		        	$('.quick-links-bar').addClass('sticky');
					$('.quick-links-bar + .wrapper').css({'paddingTop': quickLinksHeight});
		        }
	        }
		}

		/* partner level two logo takeover detail */
		/*$('.partners .overlay').on('click', function(){
			partnerOverlay = $(this).data('overlay');
			if ( partnerOverlay !== 'undefined') {
				takeover('#' + partnerOverlay +'-con');
			}
		})

		$('.partners .takeover .btn-close').on('click', function(){
			takeoverEnd('#' + partnerOverlay +'-con');
			partnerOverlay = '';
		})*/

		// checks scroll position to show/hide sticky footer buttons
		checkPos();

		/*$('.content-container h3').flowtype({
			minimum : 1,
			maximum : 480,
			minFont: 24,
			maxFont   : 36,
 			fontRatio : 15
		});*/
		
		/**
		 *  Fix for fixed position input field in header on mobile devices (iOS Chrome)
		 */
		$(document).on('focus', '#header input', function() {
	            
	        if(isIOSChrome) {

	        	$('#header').css({'position':'absolute'});	   
	        	setTimeout(function(){
	        		$.scrollTo(
						0,
						animateSpeed*100*3,
						{
							offset: {top:0, left:0}
						}
					);
	        	},300)
	        	
	   			//$('#header input').focus();
	        }
	    }).on('blur', '#header input', function() {
	       
	        if(isIOSChrome) {
	       		$('#header').css('position', '');
	        }
	    });
	},

	scroll : function(){

		/**
		 * Make quick links bar sticky when it hits the top of page.
		 * Remove the sticky when it is below the top of page.
		 */
		var st = $(window).scrollTop(),
			quicklinksOffset = $('.quick-links-bar').offset(),
			mastheadHeight = $('.masthead').height(),
			offset = 25;

	    if (st > lastScrollTop 
	    	&& isQuickLinksBar 
	    	&& headerVisible != false 
	    	&& !isStickyQuickLinksBar
	    	&& quickLinksBarAnimating == false){
	        // downscroll

	        if(st >= quicklinksOffset.top - $('#header').height()) {
	        	if(headerVisible) { // fire once only

		        	hideHeader();
		        	headerVisible = false;
		        	isStickyQuickLinksBar = true;
		        	quickLinksBarAnimating = true;

		        	if(!isTouch && !isAnimatedScroll) {
		        		
		        		$('.quick-links-bar').addClass('sticky');
						$('.quick-links-bar + .wrapper').css({'paddingTop': quickLinksHeight});
						quickLinksBarAnimating = false;

		        		/*$.scrollTo(
							$('.quick-links-bar'),
							animateSpeed*100*2,
							{
								offset: {top:offset, left:0},
								onAfter: function() {
									$('.quick-links-bar').addClass('sticky');
									$('.quick-links-bar + .wrapper').css({'paddingTop': quickLinksHeight});
									quickLinksBarAnimating = false;
								}
							}
						);*/

		        	} else {
		        		$('.quick-links-bar').addClass('sticky');
						$('.quick-links-bar + .wrapper').css({'paddingTop': quickLinksHeight});
						quickLinksBarAnimating = false;
		        	}
		        }
	        }

	    } else if(st < lastScrollTop 
	    	&& $(window).scrollTop() <= (mastheadHeight - $('#header').height())
	    	&& quickLinksBarAnimating == false) {

		      	// upscroll
		      	isStickyQuickLinksBar = false;
		      	$('.quick-links-bar').removeClass('sticky');
				$('.quick-links-bar + .wrapper').removeAttr('style');

		      	if (!headerVisible) {
		      		showHeader();
		      		headerVisible = true;
		      	}
	    }
	    lastScrollTop = st;

		// closes the search form if user touchmove
		if ($('#header.search-active').length && $(window).scrollTop() > 10) {
			$('#header .search-query').blur();

			// hide header search and footer language selector
			$(window).trigger('click');
		}

		// manual toggle section active, which changes the header for pages without fullpage.
		var $closest_section;
		var closest_section_index;
		var closest_section_distance = 99999;
		var scrollProximityThreshold = 50;
		$('.wrapper').each(function(i,v){
			if (Math.abs($(window).scrollTop() - $(this).offset().top) < closest_section_distance) {
				$closest_section = $(this);
				closest_section_index = i;
				closest_section_distance = Math.abs($(window).scrollTop() - $(this).offset().top);
			}
		});
		$closest_section.addClass('active').siblings().removeClass('active');

		if($('.home').length > 0) {
			updateTheme();
			updateMenu();
		}
		//updateTheme();
		//updateMenu();

		if($(window).scrollTop() == 0) {
			$('.masthead').addClass('active');
			updateTheme();
			updateMenu();
		}

		// check scroll top position for sticky buttons
		checkPos();

		updateSSOPosition();
		updateSearchWidth();
	},
	rescale : function() {
		isMobile = $(window).width()<768;
		isHome = $('.home').length > 0;

		updateSSOPosition();
		updateSearchWidth();

		modulesResize();


		// footer
		if (isMobile && !$('html.non-responsive').length) {
			if(isHome) {
				$('html:not(.non-responsive) .wrapper').css('min-height', $(window).innerHeight());
			}
			$('.footer-content .footer-columns').css('height', 'auto');
		} else {
			// same height
			$('.footer-content .footer-columns').css('height', 'auto').equalizeHeights();
		}


		// get window height
		var winHeight = getWinHeight();



		// get window height without header
		var winHeightWithoutHeader_menu = winHeight - ((isMobile && !$('html.non-responsive').length)?headerMobileHeight:0);

		// menu
		$('#menu-con .slimScrollDiv').css('height', winHeightWithoutHeader_menu);
		$(".menu-lvl ul li:last-child").css('padding-bottom', '');
		$('.menu-lvl-wrapper').slimScroll({
			height:"auto"
		});
		if (isMobile && !$('html.non-responsive').length) {
			$('.menu-lvl ul li:last-child').css('padding-bottom', function(){
				var ph = $(this).parents('.menu-lvl').css('height', 'auto').height();
				if (ph > winHeightWithoutHeader_menu) {
					//console.log("winHeightWithoutHeader_menu", winHeightWithoutHeader_menu, $(this).parents('.menu-lvl').css('height', 'auto').height())
					$(this).css('padding-bottom', winHeightWithoutHeader_menu - $(this).parents('.menu-lvl').css('height', 'auto').height() );;
				}
			});
		} else {
			$(".menu-lvl").css('height', '');
		}



		// get window height without header
		// contact us requires headerDesktopHeight
		var winHeightWithoutHeader = winHeight - ((isMobile && !$('html.non-responsive').length)?headerMobileHeight:headerDesktopHeight);

		// contact-us
		$('#contact-us-form .contact-table, #contact-us-form .contact-content, #contact-us-form .slimScrollDiv, #contact-us-form .contact-table').height(winHeightWithoutHeader);
		if (isMobile && !$('html.non-responsive').length) {
			$('#contact-us-form .contact-success .contact-table').height(Math.max(320, $('#contact-us-form .contact-success .contact-table-inner').height()));
		} else {
			$('#contact-us-form .contact-success .contact-table').height(winHeightWithoutHeader - $('#contact-us-form .contact-success .contact-upsale-wrapper').innerHeight());
		}
		// initialise slimScroll
		$('#contact-us-form .contact-content').slimScroll({
			height:winHeightWithoutHeader
		});


		// global eqheight
		$('.eq-height').siblings().css('height', 'auto').equalizeHeights();
		//$('.full-height').css('min-height', $(window).innerHeight());

		// global wrapper-content
		if ($('.wrappers .wrapper-content').length == 1) $('.wrappers').css('min-height', $(window).height() - $('#footer').innerHeight());

		// home wrapper-content
		if(isHome) {
			if ($('.wrappers .wrapper-content').length == 1) $('.wrappers .wrapper-content').css('min-height', $(window).height() - $('#footer').innerHeight() - (isMobile?headerMobileHeight:headerDesktopHeight));
		}

		// .button.fixed
		$('.button.fixed').siblings().each(function(){
			if (isMobile) {
				$(this).css('padding-top', '');
				$(this).css('padding-bottom', '');
			} else {
				var padding = 12-($(this).height()-14)*.5;
				$(this).css({'padding-top':padding, 'padding-bottom':padding});
			}
		});
	},
	finalize: function() {}
}

/* Resizes */
function modulesResize() {
	$.each(modules, function(i,v){
		if (v.resize) v.resize();
	})
}
function modulesAfterLoad(section) {
	if (section) {
		if (modules[section] && modules[section].afterLoad) modules[section].afterLoad();
	} else {
		$.each(sections, function(i,v){
			modulesAfterLoad(v)
		});
	}
}
function modulesOnLeave(section) {
	if (section) {
		if (modules[section] && modules[section].onLeave) modules[section].onLeave();
	}
}

/* HELPERS */
// enable stage click
function enableDOMClick() {
	$(window).off('click').on('click', function(){
		// hide search form
		$('#header .btn-search form').fadeOut(function(){
			$('#header').removeClass('search-active');
		});

		//hide footer language selector
		$('#footer .language-selector').hide();

		// hide sso dropdown
		TweenMax.fromTo($('#header .sso'), animateSpeed, {y:0, autoAlpha:1}, {y:-10, autoAlpha:0, display: 'none', ease:animateEase});

		disableDOMClick();
	});
}
// disable stage click
function disableDOMClick() {
	$(window).off('click');
}
function getWinHeight() {
	if ($('html.non-responsive').length) {
		var realHeight = Math.floor($(document).width()/$(window).width()*$(window).height());
		// if the document height is smaller than the real height;
		if (Modernizr.touch && isMobile) {
			return Math.min(realHeight, $(document).height());
		} else {
			return Math.min(realHeight, $(document).height(), $(window).height());
		}
	} else {
		return $(window).height();
	}
}

// Hide header
function hideHeader() {
	TweenMax.to($('#header'), animateSpeed*2, {css:{marginTop: '-'+$('#header').height()}, ease:Expo.easeInOut,
		onStart: function() {
			$('#header').css('z-index', '0');
		},
		onComplete: function(){
			$('#header').css('visibility', 'hidden');
		}
	});
}

// Show header
function showHeader() {
	// Check if masthead gallery/video is inactive
	if(!$('.masthead--gallery-carousel').hasClass('slick-initialized') && !$('.masthead--video .slide-video').hasClass('playing')) {

		TweenMax.to($('#header'), animateSpeed*2, {css:{marginTop: 0}, ease:Expo.easeInOut,
			onStart: function(){
				$('#header').css('visibility', 'visible');
			},
			onComplete: function() {
				$('#header').css('z-index', '10');
			}
		});
	}
}

// Strips array of all duplicate values
function onlyUnique(value, index, self) { 
    return self.indexOf(value) === index;
}


/* FORMS */
function DropDown($elm) {
	this.dd = $elm;

	$elm.find('ul.dropdown').html('');

	// populate content from the <select/> into the custom ul.dropdown
	$.each($elm.find('option, optgroup'), function(i,v){
		var $v = $(v);

		$li = (v.nodeName.toLowerCase() == 'optgroup') ?
		$('<li data-value="'+$v.attr('label')+'" class="optgroup"><a href="#">'+$v.attr('label')+'</a></li>') :
		$('<li data-value="'+$v.attr('value')+'"><a href="#">'+$v.text()+'</a></li>');

		if ($v.attr('selected')) $li.addClass('selected');

		$elm.find('ul.dropdown').append($li)
	})

	// use the selected value if it exist, else default the first element
	$elm.find('.dropdown-active-label').text($elm.find('option:checked').text());

	this.placeholder = this.dd.children('span');
	this.opts = this.dd.find('ul.dropdown > li');
	this.val = '';
	this.index = -1;

	this.initEvents();
}
DropDown.prototype = {
	initEvents : function() {
		var obj = this;

		obj.dd.on('click', function(event){
			// close other currently opened dropdown. fix issue where 2 dropdowns can be open at the same time.
			$('.dd').removeClass('active');
			$(this).toggleClass('active');
			return false;
		});

		obj.opts.on('click',function(){
			var $opt = $(this);
			obj.val = $opt.text();
			obj.index = $opt.index();
			obj.placeholder.text(obj.val);

			// select the correct option in the hidden <select> for form submission
			obj.selectId = $opt.attr("data-id");
			var $select = $opt.parent().siblings("select");
			$select.val($opt.data('value')).trigger('change');

			// close the dropdown after it has been selected
			$('.dd').removeClass('active');
			$opt.parents('.dropdown-wrapper').removeClass('error');
			return false;
		});
	},
	getValue : function() {
		return this.val;
	},
	getIndex : function() {
		return this.index;
	},
	destroy : function() {
		var obj = this;
		obj.dd.off();
		this.opts.off();
		this.opts.remove();
		this.opts = null;
		this.placeholder = null;
		this.val = '';
		this.index = -1;
	}
}
$.each($('.dd:not(.dd-delayed)'), function(i,v){
	new DropDown($(v));
})
$(document).on('click', function() {
	// all dropdowns
	$('.dd').removeClass('active');
});


// adds selected class to dropdown listing
$('.dropdown > li').on('click', function() {
	$(this).addClass('selected').siblings().removeClass('selected');
});

$('.toggle-container > li').on('click', function(){
	$(this).toggleClass('show');
});

/* TABS */
function initTabs(){
	$('.list-tab > li').off('click').on('click', function(){
		//toggle active class for list-tab li
		$(this).addClass('active').siblings().removeClass('active');
		//toggle active class for list-tab-content li
		selectedID = $(this).attr('data-id');
		selectedEl = $(this).parents('.content-main').find('.list-tab-content').find('li[data-id="'+selectedID+'"]');
		selectedEl.addClass('active').siblings().removeClass('active');
		updateTabContent();
	});

	$('.toggle-list > li').off('click').on('click', function(){
		//toggle active class
		$(this).addClass('active').siblings().removeClass('active');
	});
}

/* ANCHORS */
$(window).load(function(e){
	switch(window.location.hash.replace('#', '').split('/')[0]) {
		case "contact":
			$('.btn-contact').eq(0).trigger('click');
			break;
		default:
	}
});

/* BACK TO TOP BUTTON */
function backTop(){
	$.scrollTo(0,
		1000, {
			easing: 'easeOutExpo',
			offset: {top:0, left:0},
			onAfter: function(){
				// This is needed to trigger the window scroll event
				$(window).scrollTop(0);
			}
		}
	);
}

/**
 * checks scroll position to show/hide sticky footer buttons
 */
function checkPos() {
	/**
	 * Scroll To Top Button
	 */
	if ($(window).scrollTop() >= $('#header').outerHeight()) {
		topButton.addClass('show');
	} else {
		topButton.removeClass('show');
	}

	docHeight=$(document).height() ;
	winHeight=$(window).height();
	footerHeight=$('#footer').outerHeight();

	//scroll till footer, sticky button
	if (winHeight <= $('.wrappers').outerHeight() + $('#header').outerHeight() + $('.sticky.button').outerHeight()) {
		$('.button.sticky').removeClass('hidden');
	} else {
		$('.button.sticky').addClass('hidden');
	}

	if ( winHeight >= docHeight - footerHeight){
		topButton.addClass('sticky');
		$('.button.sticky').addClass('hidden');
	} else if ( $(window).scrollTop() + winHeight  >= docHeight - footerHeight) {
		topButton.addClass('sticky');

		$('.button.sticky').addClass('hidden');
	} else {
		topButton.removeClass('sticky');
		$('.button.sticky').removeClass('hidden');
	}
}

/**
 * Print page
 */
$('.button-print').on('click', function(){
	window.print();
})

// additional ie class for ie browsers
// jQuery(function($){if (navigator.appName == 'Microsoft Internet Explorer') $("html").addClass("ie");});
var evaluationFn = {
	init : function(){

		test.user_logged_out();

		$("#download-form").validate({
			debug: false,
			focusInvalid: 0,
			ignore: "",
			rules: {
				firstname: {required: true},
				lastname: {required: true},
				email: {email:true,required: true},
				company: { required: true },
				country: { required: true }
			},
			messages: {
				firstname: "Please enter your first name.",
				lastname: "Please enter your last name.",
				email: "Please enter a valid email.",
				company: "Please enter your company.",
				country: { valueNotEquals: "Please select a country" }
			},
			tooltip_options: {
				lname: {trigger: 'focus'},
				email:{trigger: 'focus'},
			},
			success: function(label) {
				console.log('success');
			},
			submitHandler: function(form) {
				//console.log('submitHandler');
				// $("#validity_label").html('<div class="alert alert-success">No errors.</div>');
				form.submit();
			},
			invalidHandler: function(form, validator) {
				//console.log('invalidHandler');
				var errors = validator.numberOfInvalids();

				$("#download-form .form-text-input").each(function(i,v){
					setTimeout(function(){
						console.log($(v));
						$(v).focus();
						$(v).blur();
					}, i*2);
				});

			},
			errorPlacement: function(error, element) {
				// console.log('errorPlacement');
				// Override error placement to not show error messages beside elements //
			}
		});

		$(".form-input-wrapper .dropdown li").on("click", function(){
			$(this).parent().siblings("select").removeClass("error").tooltip('destroy');
			$(this).parents(".form-input-wrapper.error").removeClass("error").tooltip('destroy');
		})

		commonFn.rescale();
	},
	scroll : function(){},
	rescale : function() {

	},
	finalize : function() {
	}
}
var careersFn = {
	init : function(){

		test.user_logged_out();

		$("#job-search-form").validate({
			debug: false,
			focusInvalid: 0,
			ignore: "",
			rules: {
				job_search_country: { valueNotEquals: "Select a Location" },
				job_search_defined: { valueNotEquals: "Select an Organisation" },
			},
			messages: {
				job_search_country: { valueNotEquals: "Select a Location" },
				job_search_defined: { valueNotEquals: "Select an Organisation" },
			},
			tooltip_options: {
				job_search_country: {trigger: 'focus'},
				job_search_defined:{trigger: 'focus'},
			},
			success: function(label) {
				console.log('success');
			},
			submitHandler: function(form) {
				// $("#validity_label").html('<div class="alert alert-success">No errors.</div>');
				window.location = "https://www.brocade.apply2jobs.com/ProfExt/index.cfm?fuseaction=mExternal.searchJobs&searchUserDefinedID="+encodeURIComponent($("#job_search_defined").val())+"&searchCountryID="+encodeURIComponent($("#job_search_country").val());
				return false;
			},
			invalidHandler: function(form, validator) {
				var errors = validator.numberOfInvalids();
				console.log('invalidHandler', errors);

				$("#job-search-form .form-text-input").each(function(i,v){
					setTimeout(function(){
						console.log($(v));
						$(v).focus();
						$(v).blur();
					}, i*2);
				});

			},
			errorPlacement: function(error, element) {
				console.log('errorPlacement');
				// Override error placement to not show error messages beside elements //
			}
		});

		$(".form-input-wrapper .dropdown li").on("click", function(){
			$(this).parent().siblings("select").removeClass("error").tooltip('destroy');
			$(this).parents(".form-input-wrapper.error").removeClass("error").tooltip('destroy');
		})

		commonFn.rescale();
	},
	scroll : function(){},
	rescale : function() {

	},
	finalize : function() {
	}
}
var officeFn = {
	init: function(){
		var script = document.createElement('script');
		script.type = 'text/javascript';
		script.src = 'https://maps.googleapis.com/maps/api/js?v=3.exp' +
				//'&signed_in=true&callback=googleMapInit&client=gme-brocadecommunications&sensor=false';
				'&signed_in=true&callback=googleMapInit&sensor=false';
		document.body.appendChild(script);

		window.googleMapInit = googleMapInit;

		var officeMap, infoWindow;

		function googleMapInit(){

			/* InfoBox extends OverlayView in the Google Maps API v3.*/
			$.extend(true, officeFn.infoBox.prototype, new google.maps.OverlayView());

			/* Google Map options */
			var mapOptions = {
				zoom: 2,
				center: new google.maps.LatLng(25.14512718337613, 15.359375),
				mapTypeId: google.maps.MapTypeId.ROADMAP,
				disableDefaultUI: true
			};

			/* Info Window options */
			var infoWindow = new officeFn.infoBox({
				alignBottom: true,
				pixelOffset: new google.maps.Size(-125, -15),
				boxStyle: {
					width: '250px'
				},
				boxClass: 'office-infobox',
				closeBoxMargin: '-10px -10px 0 0',
				closeBoxURL: 'img/office/tooltipbox-icon-close.png'

			});

			officeMap = new google.maps.Map($('.office-map-container')[0], mapOptions);

			/* Grab offices */
			$.ajax('js/data/office.json', {
				dataType: 'json',
				success: function(data){

					/* Office Icon */
					var officeImg = {
						url: 'img/office/worldwide-map-icon-offices.png',
						size: new google.maps.Size(14, 15),
						origin: new google.maps.Point(0, 0),
						anchor: new google.maps.Point(5, 5)
					};

					/* HQ Icon */
					var hqImg = {
						url: 'img/office/worldwide-map-icon-headquarters.png',
						size: new google.maps.Size(30, 22),
						origin: new google.maps.Point(0, 0),
						anchor: new google.maps.Point(13, 9)
					};

					var $regionDD = $('#region-select'), 
						$countryDD = $('#country-select'), 
						regionOpts = '',
						countryOpts = '',
						$officeListing = $('.office-listing-container'),
						officeListing = '';


					/* Dropdowns */
					$regionDD.closest('.dropdown-face').addClass('dd');
					$countryDD.closest('.dropdown-face').addClass('dd');

					/* Loops to populate */
					$.each(data, function(region, country){

						regionOpts += '<option value="' + region + '">' + region + '</option>';
						countryOpts += '<optgroup label="' + region + '">';
						officeListing += '<div class="region ' + region.toLowerCase().replace(/[\W_]+/g, '') + '">';

						$.each(country, function(country, obj){
							countryOpts += '<option value="' + country + '">' + country + '</option>';
							officeListing += ' <div class="country ' + country.toLowerCase().replace(/[\W_]+/g, '') + '"><div class="title">' + country + '</div>';

								$.each(this.office, function(){
									officeListing += '<div class="office">' + this.desc + '</div>';

									/* Plant Markers */
									var marker = new google.maps.Marker({
										map:officeMap,
										animation: google.maps.Animation.DROP,
										position: new google.maps.LatLng(this.coor[0], this.coor[1]),
										icon: (this.type == 'headquarter') ? hqImg : officeImg,
										zIndex: (this.type == 'headquarter') ? 9 : 0,
										html: '<div class="office-infobox-title">' + country + '</div>' + this.desc

									});

									/* Marker click event */
									google.maps.event.addListener(marker, 'click', function () {
										infoWindow.open(officeMap, this);
										infoWindow.setContent(this.html);
										map.panTo(this.position);
									});
								})

							officeListing += ' </div>';

						});

						officeListing += '</div>'
						countryOpts += '</optgroup>';
					});
					
					$regionDD.append(regionOpts);
					$countryDD.append(countryOpts);
					$officeListing.html(officeListing);

					/* Init DD styles */
					new DropDown($regionDD.closest('.dd'));
					new DropDown($countryDD.closest('.dd'));


					$('.dropdown--office li').on('click', function(e){
						var $this = $(this);
						var changeClass = $this.data('value').toLowerCase().replace(/[\W_]+/g, '');

						if($this.closest('.wrapper-content').hasClass('office-listing')){
							
							/* Hide/show for Office Listing */
							if(changeClass != ''){
								
								if(changeClass == 'all'){
									$officeListing.find('.region, .country').removeClass('is-hidden');
								}else if($this.hasClass('optgroup')){
									$officeListing.find('.region').addClass('is-hidden');
									$officeListing
										.find('.region.' + changeClass).removeClass('is-hidden')
										.find('.country').removeClass('is-hidden');
								}else{
									$officeListing.find('.country').addClass('is-hidden');
									$officeListing
										.find('.country.' + changeClass).removeClass('is-hidden')
										.parent().removeClass('is-hidden');
								}

							}
						}else{ 

							/* Google Map Pan for Region */
							var mapZoom = 2;
							var mapPan;

							switch(changeClass){
								case 'northamerica':
								mapPan = new google.maps.LatLng(41.50857729743935, -97.3828125);
								mapZoom = 3;
								break;
								

								case 'americas':
								mapPan = new google.maps.LatLng(19.973348786110602, -80.859375);
								break;

								
								case 'apj':
								mapPan = new google.maps.LatLng(3.5134210456400443, 108.28125);
								break;


								case 'emea':
								mapPan = new google.maps.LatLng(38.27268853598097, 20.0390625);
								break;

								default:
								mapPan = new google.maps.LatLng(25.14512718337613, 15.359375);

							}

							officeMap.panTo(mapPan);
							officeMap.setZoom(mapZoom);
						}


					})
				},
				error: function(err){
					console.log(err)
				}
			});
		};


		//Generate JSON from XML
		/*$.ajax('../assets/location.xml', {
			dataType: 'xml',
			success: function(data){
				var $data = $(data);
				$data.find('regional');
				var json = 'offices = {';

				$.each($data.find('regional'), function(k,v){
					var $this = $(this);
					//console.log($this.attr('name'));
					if(k != 0){
						json += ","
					}
					json += '"' + $this.attr('name') + '": {';

						$.each($this.find('country'), function(key,value){
							var $country = $(this);

							if(key != 0){
								json += ","
							}
							
							json += '"' + $country.attr('name') + '": {';
							json += '"office": [';
							$.each($country.find('office'), function(i,j){
								var $office = $(this);
								if(i != 0){
									json += ","
								}

								json += '{';

								//console.log($office.attr('type') === 'undefined')
								
								if($office.attr('type') == 'headquarter'){
									json += '"type":"' + $office.attr('type') + '",';
								}

								json += '"coor": ['  + $office.attr('lat') + ',' + $office.attr('long') +  '],';
								json += '"desc": "'  + $office.text()
														.replace(/(\r\n|\n|\r)/gm," ")
														.replace(/\s+/g," ")
														.replace(/\s+/g," ")
														.replace(/"/g, '\\"')
														.replace(/ \\n /g, '<br/>') + '"';
								json += '}';


							})

							json += ']';
							json += '}';
						})

					json += '}';

				})

				json += '}';

				console.log(json);
			},
			error: function(err){
				console.log(err);
			}
		})*/

	},

	infoBox: function(opt_opts) {
		opt_opts = opt_opts || {};

		google.maps.OverlayView.apply(this, arguments);

		// Standard options (in common with google.maps.InfoWindow):
		//
		this.content_ = opt_opts.content || "";
		this.disableAutoPan_ = opt_opts.disableAutoPan || false;
		this.maxWidth_ = opt_opts.maxWidth || 0;
		this.pixelOffset_ = opt_opts.pixelOffset || new google.maps.Size(0, 0);
		this.position_ = opt_opts.position || new google.maps.LatLng(0, 0);
		this.zIndex_ = opt_opts.zIndex || null;

		// Additional options (unique to InfoBox):
		//
		this.boxClass_ = opt_opts.boxClass || "infoBox";
		this.boxStyle_ = opt_opts.boxStyle || {};
		this.closeBoxMargin_ = opt_opts.closeBoxMargin || "2px";
		this.closeBoxURL_ = opt_opts.closeBoxURL || "http://www.google.com/intl/en_us/mapfiles/close.gif";
		if (opt_opts.closeBoxURL === "") {
		this.closeBoxURL_ = "";
		}
		this.infoBoxClearance_ = opt_opts.infoBoxClearance || new google.maps.Size(1, 1);
		this.isHidden_ = opt_opts.isHidden || false;
		this.alignBottom_ = opt_opts.alignBottom || false;
		this.pane_ = opt_opts.pane || "floatPane";
		this.enableEventPropagation_ = opt_opts.enableEventPropagation || false;

		this.div_ = null;
		this.closeListener_ = null;
		this.eventListener1_ = null;
		this.eventListener2_ = null;
		this.eventListener3_ = null;
		this.moveListener_ = null;
		this.contextListener_ = null;
		this.fixedWidthSet_ = null;

	},
	scroll : function(){
	},
	rescale : function() {
	},
	finalize : function() {
	}
}

/**
* Creates the DIV representing the InfoBox.
* @private
*/
officeFn.infoBox.prototype.createInfoBoxDiv_ = function () {

	var bw;
	var me = this;

	// This handler prevents an event in the InfoBox from being passed on to the map.
	//
	var cancelHandler = function (e) {
		e.cancelBubble = true;

		if (e.stopPropagation) {

		  e.stopPropagation();
		}
	};

	// This handler ignores the current event in the InfoBox and conditionally prevents
	// the event from being passed on to the map. It is used for the contextmenu event.
	//
	var ignoreHandler = function (e) {

		e.returnValue = false;

		if (e.preventDefault) {

		  e.preventDefault();
		}

		if (!me.enableEventPropagation_) {

		  cancelHandler(e);
		}
	};

	if (!this.div_) {

		this.div_ = document.createElement("div");

		this.setBoxStyle_();

		if (typeof this.content_.nodeType === "undefined") {
		  this.div_.innerHTML = this.getCloseBoxImg_() + this.content_;
		} else {
		  this.div_.innerHTML = this.getCloseBoxImg_();
		  this.div_.appendChild(this.content_);
		}

		// Add the InfoBox DIV to the DOM
		this.getPanes()[this.pane_].appendChild(this.div_);

		this.addClickHandler_();

		if (this.div_.style.width) {

		  this.fixedWidthSet_ = true;

		} else {

		  if (this.maxWidth_ !== 0 && this.div_.offsetWidth > this.maxWidth_) {

		    this.div_.style.width = this.maxWidth_;
		    this.div_.style.overflow = "auto";
		    this.fixedWidthSet_ = true;

		  } else { // The following code is needed to overcome problems with MSIE

		    bw = this.getBoxWidths_();

		    this.div_.style.width = (this.div_.offsetWidth - bw.left - bw.right) + "px";
		    this.fixedWidthSet_ = false;
		  }
		}

		this.panBox_(this.disableAutoPan_);

		if (!this.enableEventPropagation_) {

		  // Cancel event propagation.
		  //
		  this.eventListener1_ = google.maps.event.addDomListener(this.div_, "mousedown", cancelHandler);
		  this.eventListener2_ = google.maps.event.addDomListener(this.div_, "click", cancelHandler);
		  this.eventListener3_ = google.maps.event.addDomListener(this.div_, "dblclick", cancelHandler);
		}

		this.contextListener_ = google.maps.event.addDomListener(this.div_, "contextmenu", ignoreHandler);

		/**
		 * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.
		 * @name InfoBox#domready
		 * @event
		 */
		google.maps.event.trigger(this, "domready");
	}
},

/**
* Returns the HTML <IMG> tag for the close box.
* @private
*/
officeFn.infoBox.prototype.getCloseBoxImg_ = function () {

	var img = "";

	if (this.closeBoxURL_ !== "") {

		img  = "<img";
		img += " src='" + this.closeBoxURL_ + "'";
		img += " class='map_close'";
		img += " align=right"; // Do this because Opera chokes on style='float: right;'
		img += " style='";
		img += " position: relative;"; // Required by MSIE
		img += " cursor: pointer;";
		img += " margin: " + this.closeBoxMargin_ + ";";
		img += "'>";
	}

	return img;
},

/**
* Adds the click handler to the InfoBox close box.
* @private
*/
officeFn.infoBox.prototype.addClickHandler_ = function () {

	var closeBox;

	if (this.closeBoxURL_ !== "") {

	closeBox = this.div_.firstChild;
	this.closeListener_ = google.maps.event.addDomListener(closeBox, 'click', this.getCloseClickHandler_());

	} else {

		this.closeListener_ = null;
	}
},

/**
* Returns the function to call when the user clicks the close box of an InfoBox.
* @private
*/
officeFn.infoBox.prototype.getCloseClickHandler_ = function () {

	var me = this;

	return function (e) {

		// 1.0.3 fix: Always prevent propagation of a close box click to the map:
		e.cancelBubble = true;

		if (e.stopPropagation) {

		  e.stopPropagation();
		}

		me.close();

		/**
		 * This event is fired when the InfoBox's close box is clicked.
		 * @name InfoBox#closeclick
		 * @event
		 */
		google.maps.event.trigger(me, "closeclick");
	};
},

/**
* Pans the map so that the InfoBox appears entirely within the map's visible area.
* @private
*/
officeFn.infoBox.prototype.panBox_ = function (disablePan) {

	var map;
	var bounds;
	var xOffset = 0, yOffset = 0;

	if (!disablePan) {

		map = this.getMap();

		if (map instanceof google.maps.Map) { // Only pan if attached to map, not panorama

		  if (!map.getBounds().contains(this.position_)) {
		  // Marker not in visible area of map, so set center
		  // of map to the marker position first.
		    map.setCenter(this.position_);
		  }

		  bounds = map.getBounds();

		  var mapDiv = map.getDiv();
		  var mapWidth = mapDiv.offsetWidth;
		  var mapHeight = mapDiv.offsetHeight;
		  var iwOffsetX = this.pixelOffset_.width;
		  var iwOffsetY = this.pixelOffset_.height;
		  var iwWidth = this.div_.offsetWidth;
		  var iwHeight = this.div_.offsetHeight;
		  var padX = this.infoBoxClearance_.width;
		  var padY = this.infoBoxClearance_.height;
		  var pixPosition = this.getProjection().fromLatLngToContainerPixel(this.position_);

		  if (pixPosition.x < (-iwOffsetX + padX)) {
		    xOffset = pixPosition.x + iwOffsetX - padX;
		  } else if ((pixPosition.x + iwWidth + iwOffsetX + padX) > mapWidth) {
		    xOffset = pixPosition.x + iwWidth + iwOffsetX + padX - mapWidth;
		  }
		  if (this.alignBottom_) {
		    if (pixPosition.y < (-iwOffsetY + padY + iwHeight)) {
		      yOffset = pixPosition.y + iwOffsetY - padY - iwHeight;
		    } else if ((pixPosition.y + iwOffsetY + padY) > mapHeight) {
		      yOffset = pixPosition.y + iwOffsetY + padY - mapHeight;
		    }
		  } else {
		    if (pixPosition.y < (-iwOffsetY + padY)) {
		      yOffset = pixPosition.y + iwOffsetY - padY;
		    } else if ((pixPosition.y + iwHeight + iwOffsetY + padY) > mapHeight) {
		      yOffset = pixPosition.y + iwHeight + iwOffsetY + padY - mapHeight;
		    }
		  }

		  if (!(xOffset === 0 && yOffset === 0)) {

		    // Move the map to the shifted center.
		    //
		    var c = map.getCenter();
		    map.panBy(xOffset, yOffset);
		  }
		}
	}
},

/**
* Sets the style of the InfoBox by setting the style sheet and applying
* other specific styles requested.
* @private
*/
officeFn.infoBox.prototype.setBoxStyle_ = function () {

	var i, boxStyle;

	if (this.div_) {

		// Apply style values from the style sheet defined in the boxClass parameter:
		this.div_.className = this.boxClass_;

		// Clear existing inline style values:
		this.div_.style.cssText = "";

		// Apply style values defined in the boxStyle parameter:
		boxStyle = this.boxStyle_;
		for (i in boxStyle) {

		  if (boxStyle.hasOwnProperty(i)) {

		    this.div_.style[i] = boxStyle[i];
		  }
		}

		// Fix up opacity style for benefit of MSIE:
		//
		if (typeof this.div_.style.opacity !== "undefined" && this.div_.style.opacity !== "") {

		  this.div_.style.filter = "alpha(opacity=" + (this.div_.style.opacity * 100) + ")";
		}

		// Apply required styles:
		//
		this.div_.style.position = "absolute";
		this.div_.style.visibility = 'hidden';
		if (this.zIndex_ !== null) {

		  this.div_.style.zIndex = this.zIndex_;
		}
	}
},

/**
* Get the widths of the borders of the InfoBox.
* @private
* @return {Object} widths object (top, bottom left, right)
*/
officeFn.infoBox.prototype.getBoxWidths_ = function () {

	var computedStyle;
	var bw = {top: 0, bottom: 0, left: 0, right: 0};
	var box = this.div_;

	if (document.defaultView && document.defaultView.getComputedStyle) {

	computedStyle = box.ownerDocument.defaultView.getComputedStyle(box, "");

	if (computedStyle) {

	  // The computed styles are always in pixel units (good!)
	  bw.top = parseInt(computedStyle.borderTopWidth, 10) || 0;
	  bw.bottom = parseInt(computedStyle.borderBottomWidth, 10) || 0;
	  bw.left = parseInt(computedStyle.borderLeftWidth, 10) || 0;
	  bw.right = parseInt(computedStyle.borderRightWidth, 10) || 0;
	}

	} else if (document.documentElement.currentStyle) { // MSIE

	if (box.currentStyle) {

	  // The current styles may not be in pixel units, but assume they are (bad!)
	  bw.top = parseInt(box.currentStyle.borderTopWidth, 10) || 0;
	  bw.bottom = parseInt(box.currentStyle.borderBottomWidth, 10) || 0;
	  bw.left = parseInt(box.currentStyle.borderLeftWidth, 10) || 0;
	  bw.right = parseInt(box.currentStyle.borderRightWidth, 10) || 0;
	}
	}

	return bw;
},

/**
* Invoked when <tt>close</tt> is called. Do not call it directly.
*/
officeFn.infoBox.prototype.onRemove = function () {

	if (this.div_) {

	this.div_.parentNode.removeChild(this.div_);
	this.div_ = null;
	}
},

/**
* Draws the InfoBox based on the current map projection and zoom level.
*/
officeFn.infoBox.prototype.draw = function () {

	this.createInfoBoxDiv_();

	var pixPosition = this.getProjection().fromLatLngToDivPixel(this.position_);

	this.div_.style.left = (pixPosition.x + this.pixelOffset_.width) + "px";

	if (this.alignBottom_) {
	this.div_.style.bottom = -(pixPosition.y + this.pixelOffset_.height) + "px";
	} else {
	this.div_.style.top = (pixPosition.y + this.pixelOffset_.height) + "px";
	}

	if (this.isHidden_) {

		this.div_.style.visibility = 'hidden';

	} else {

		this.div_.style.visibility = "visible";
	}
},

/**
* Sets the options for the InfoBox. Note that changes to the <tt>maxWidth</tt>,
*  <tt>closeBoxMargin</tt>, <tt>closeBoxURL</tt>, and <tt>enableEventPropagation</tt>
*  properties have no affect until the current InfoBox is <tt>close</tt>d and a new one
*  is <tt>open</tt>ed.
* @param {InfoBoxOptions} opt_opts
*/
officeFn.infoBox.prototype.setOptions = function (opt_opts) {
	if (typeof opt_opts.boxClass !== "undefined") { // Must be first

		this.boxClass_ = opt_opts.boxClass;
		this.setBoxStyle_();
	}
	if (typeof opt_opts.boxStyle !== "undefined") { // Must be second

		this.boxStyle_ = opt_opts.boxStyle;
		this.setBoxStyle_();
	}
	if (typeof opt_opts.content !== "undefined") {

		this.setContent(opt_opts.content);
	}
	if (typeof opt_opts.disableAutoPan !== "undefined") {

		this.disableAutoPan_ = opt_opts.disableAutoPan;
	}
	if (typeof opt_opts.maxWidth !== "undefined") {

		this.maxWidth_ = opt_opts.maxWidth;
	}
	if (typeof opt_opts.pixelOffset !== "undefined") {

		this.pixelOffset_ = opt_opts.pixelOffset;
	}
	if (typeof opt_opts.alignBottom !== "undefined") {

		this.alignBottom_ = opt_opts.alignBottom;
	}
	if (typeof opt_opts.position !== "undefined") {

		this.setPosition(opt_opts.position);
	}
	if (typeof opt_opts.zIndex !== "undefined") {

		this.setZIndex(opt_opts.zIndex);
	}
	if (typeof opt_opts.closeBoxMargin !== "undefined") {

		this.closeBoxMargin_ = opt_opts.closeBoxMargin;
	}
	if (typeof opt_opts.closeBoxURL !== "undefined") {

		this.closeBoxURL_ = opt_opts.closeBoxURL;
	}
	if (typeof opt_opts.infoBoxClearance !== "undefined") {

		this.infoBoxClearance_ = opt_opts.infoBoxClearance;
	}
	if (typeof opt_opts.isHidden !== "undefined") {

		this.isHidden_ = opt_opts.isHidden;
	}
	if (typeof opt_opts.enableEventPropagation !== "undefined") {

		this.enableEventPropagation_ = opt_opts.enableEventPropagation;
	}

	if (this.div_) {

		this.draw();
	}
},

/**
* Sets the content of the InfoBox.
*  The content can be plain text or an HTML DOM node.
* @param {string|Node} content
*/
officeFn.infoBox.prototype.setContent = function (content) {
	this.content_ = content;

	if (this.div_) {

		if (this.closeListener_) {

		  google.maps.event.removeListener(this.closeListener_);
		  this.closeListener_ = null;
		}

		// Odd code required to make things work with MSIE.
		//
		if (!this.fixedWidthSet_) {

		  this.div_.style.width = "";
		}

		if (typeof content.nodeType === "undefined") {
		  this.div_.innerHTML = this.getCloseBoxImg_() + content;
		} else {
		  this.div_.innerHTML = this.getCloseBoxImg_();
		  this.div_.appendChild(content);
		}

		// Perverse code required to make things work with MSIE.
		// (Ensures the close box does, in fact, float to the right.)
		//
		if (!this.fixedWidthSet_) {
		  this.div_.style.width = this.div_.offsetWidth + "px";
		  if (typeof content.nodeType === "undefined") {
		    this.div_.innerHTML = this.getCloseBoxImg_() + content;
		  } else {
		    this.div_.innerHTML = this.getCloseBoxImg_();
		    // Note: don't append the content node again
		  }
		}

		this.addClickHandler_();
	}

	/**
	* This event is fired when the content of the InfoBox changes.
	* @name InfoBox#content_changed
	* @event
	*/
	google.maps.event.trigger(this, "content_changed");
},

/**
* Sets the geographic location of the InfoBox.
* @param {LatLng} latlng
*/
officeFn.infoBox.prototype.setPosition = function (latlng) {

	this.position_ = latlng;

	if (this.div_) {

	this.draw();
	}

	/**
	* This event is fired when the position of the InfoBox changes.
	* @name InfoBox#position_changed
	* @event
	*/
	google.maps.event.trigger(this, "position_changed");
},

/**
* Sets the zIndex style for the InfoBox.
* @param {number} index
*/
officeFn.infoBox.prototype.setZIndex = function (index) {

	this.zIndex_ = index;

	if (this.div_) {

	this.div_.style.zIndex = index;
	}

	/**
	* This event is fired when the zIndex of the InfoBox changes.
	* @name InfoBox#zindex_changed
	* @event
	*/
	google.maps.event.trigger(this, "zindex_changed");
},

/**
* Returns the content of the InfoBox.
* @returns {string}
*/
officeFn.infoBox.prototype.getContent = function () {

	return this.content_;
},

/**
* Returns the geographic location of the InfoBox.
* @returns {LatLng}
*/
officeFn.infoBox.prototype.getPosition = function () {

	return this.position_;
},

/**
* Returns the zIndex for the InfoBox.
* @returns {number}
*/
officeFn.infoBox.prototype.getZIndex = function () {

	return this.zIndex_;
},

/**
* Shows the InfoBox.
*/
officeFn.infoBox.prototype.show = function () {

	this.isHidden_ = false;
	if (this.div_) {
	this.div_.style.visibility = "visible";
	}
},

/**
* Hides the InfoBox.
*/
officeFn.infoBox.prototype.hide = function () {

	this.isHidden_ = true;
	if (this.div_) {
		this.div_.style.visibility = "hidden";
	}
},

/**
* Adds the InfoBox to the specified map or Street View panorama. If <tt>anchor</tt>
*  (usually a <tt>google.maps.Marker</tt>) is specified, the position
*  of the InfoBox is set to the position of the <tt>anchor</tt>. If the
*  anchor is dragged to a new location, the InfoBox moves as well.
* @param {Map|StreetViewPanorama} map
* @param {MVCObject} [anchor]
*/
officeFn.infoBox.prototype.open = function (map, anchor) {

	var me = this;

	if (anchor) {

	this.position_ = anchor.getPosition();
	this.moveListener_ = google.maps.event.addListener(anchor, "position_changed", function () {
	  me.setPosition(this.getPosition());
	});
	}

	this.setMap(map);

	if (this.div_) {

	this.panBox_();
	}
},

/**
* Removes the InfoBox from the map.
*/
officeFn.infoBox.prototype.close = function () {

	if (this.closeListener_) {

	google.maps.event.removeListener(this.closeListener_);
	this.closeListener_ = null;
	}

	if (this.eventListener1_) {

	google.maps.event.removeListener(this.eventListener1_);
	google.maps.event.removeListener(this.eventListener2_);
	google.maps.event.removeListener(this.eventListener3_);
	this.eventListener1_ = null;
	this.eventListener2_ = null;
	this.eventListener3_ = null;
	}

	if (this.moveListener_) {

	google.maps.event.removeListener(this.moveListener_);
	this.moveListener_ = null;
	}

	if (this.contextListener_) {

	google.maps.event.removeListener(this.contextListener_);
	this.contextListener_ = null;
	}

	this.setMap(null);
}


	
var $educationSlider;
var educationPlanFn = {
	init: function(){
		var $primaryDD = $('#education-primary-select');

		$.ajax('js/data/education-plan.json', {
			dataType: 'json',
			success: function(data){

				var primaryHtml = '';
				var first = 1, selected, primaryFirstClick = 1;

				$.each(data, function(primary, planObj){
					selected = first ? ' selected' : '';

					if(first){
						educationPlanFn.updateFilter(planObj);
						first = !first;
					};

					primaryHtml += '<option value="' + primary + '">' + primary + '</option>';
				});

				$primaryDD.html(primaryHtml);
				new DropDown($primaryDD.closest('.dd'));

				$primaryDD.siblings('.dropdown').find('li').on('click', function(){
					var $this = $(this);

					educationPlanFn.updateFilter(data[$this.data('value')]);
					
					$('#education-secondary-select').siblings('.dropdown-active-label').html('All '+ $primaryDD.val());

					var $educationContent = $('.education-plan-content');

					$educationContent
						.find('h3').html($this.data('value'))
						.siblings('.education-plan-content-box').html( data[$this.data('value')].desc );

					if($educationContent.find('.content-accordion').length > 0){
						$educationContent.closest('.content-container').siblings('.button-expand').show();
					}else{
						$educationContent.closest('.content-container').siblings('.button-expand').hide();
					}



					if(isMobile){
						if(primaryFirstClick){
	                    	primaryFirstClick = 0;
						}else{
							$.scrollTo($educationContent.parents('.wrapper-content'), 1000, { 
								offset: {top: -$('.quick-links-bar').height() , left:0}
		                    });
						}
					}
				});

				var primary = decodeURIComponent(getUrlVars()['primary']);
				if(primary === 'undefined'){
					primary = $primaryDD.val();
				}

				$primaryDD.siblings('.dropdown').find('[data-value="' + primary + '"]').trigger('click');

				educationPlanFn.data = data;

			}
		})

	},

	updateFilter: function(obj){
		var $secondaryDD = $('#education-secondary-select');
		var secondaryHtml = '<option value="all">' + obj.all + '</option>';
		var first = 1;

		$.each(obj.cat, function(name, catObj){
			secondaryHtml += '<option value="' + name + '">' + name + '</option>';
		})
		$secondaryDD.html(secondaryHtml)
		new DropDown($secondaryDD.closest('.dd'));
		educationPlanFn.populate('all', obj.cat, obj.type);

		$secondaryDD.siblings('.dropdown').find('li').on('click', function(){
			var $this = $(this);
			var cat = obj.cat;
			var val = $this.data('value');

			if(val != 'all'){
				cat = cat[val];
			}
			educationPlanFn.populate(val, cat, obj.type);

			var $educationContent = $('.education-plan-content'),
				$educationListing = $('.education-plan-listing');
			

			$educationContent
				.find('h3').html(function(){
					if(val == 'all') {
						$educationListing.find('.category-accordion--header').show();
						return $('#education-primary-select').val();
					}

					$educationListing.find('.category-accordion--header').hide();
					return val;
				})
				.siblings('.education-plan-content-box').html( cat.desc );

			if($educationContent.find('.content-accordion').length > 0){
				$educationContent.closest('.content-container').siblings('.button-expand').show();
			}else{
				$educationContent.closest('.content-container').siblings('.button-expand').hide();
			}

			if(isMobile){
				$.scrollTo($educationContent.parents('.wrapper-content'), 1000, { 
	                  offset: {top: -$('.quick-links-bar').height() , left:0}
	                }
	            );
	        }

		});

	},

	populate: function(name, obj, type){

		var html = '';
		if(name == 'all'){
			$.each(obj, function(n,o){
				html += educationPlanFn.populateHtml(n, o, type);
			})

		}else{
			html = educationPlanFn.populateHtml(name, obj, type);
		};

		$('.category-list').html(html);

		modules['category-list'].init('current');

		$educationSlider = $('.education-plan-row');
		if(isMobile){
			$educationSlider.slick({
				dots:true,
				slidesToShow:1,
				infinite:true
			});

			$('.category-accordion--header').on('click', function(){
				var $this = $(this);
				$this.siblings().find('.education-plan-row').slick('setPosition');
			})
		};

		$('.education-plan-listing').find('.category-accordion').first().find('.category-accordion--header, .category-accordion--content').addClass('active');

	},

	populateHtml: function(name, obj, type){
		var catHtml = '<div class="category-accordion">';
		var leftCol, rightCol, leftAdd = 0, rightAdd = 0;

		catHtml += '<h4 class="category-accordion--header search-filter-header header-text-small">' + name + '</h4>';
		catHtml += '<div class="category-accordion--content columns medium-11 medium-centered">';

		if(type == 'list'){
			catHtml += '<div class="row">';
			leftCol = '<div class="columns medium-6 education-plan-col"><div class="education-plan-subtitle">Requirements</div>';
			rightCol = '<div class="columns medium-6 education-plan-col"><div class="education-plan-subtitle">Electives</div>';
		}

		$.each(obj, function(title, courses){

			if(title != 'desc'){
				if(type == 'tile'){

					catHtml += '<div class="boxed-title-wrapper">';
					catHtml += '<div class="category-accordion--title boxed-title">' + title + '</div>';
					catHtml += '<div class="row education-plan-row">';

					$.each(courses.course, function(i, elm){
						var end = (courses.course.length-1 == i) ? ' end' : '';
						catHtml += '<div class="columns medium-3 small-12' + end + ' education-plan-tile education-plan-tile--' + courses.color + '"><a href="#">';
						catHtml += '<span>' + this.name + '</span>';
						catHtml += this.desc;
						catHtml += '</a></div>';
					});

					catHtml += '</div>';
					catHtml += '</div>';

				}else{

					var typeHtml = '<dl><dt><a href="#">' + title + '</a></dt>';

					$.each(courses.course, function(i, elm){
						typeHtml += '<dd><a href="' + this.link + '">' + this.name + '</a></dd>';
					});

					typeHtml += '</dl>';


					if(courses.type == 'requirement'){
						leftCol += typeHtml;
						leftAdd = 1;
					}else{
						rightCol += typeHtml;
						rightAdd = 1;
					}

				}
			}

		});

		if(type == 'list'){
			if(leftAdd) catHtml += leftCol + '</div>';
			if(rightAdd) catHtml += rightCol + '</div>';
			catHtml += '</div>';
		}

		catHtml += '</div>';
		catHtml += '</div>';

		return catHtml;
	},


	scroll : function(){
	},
	rescale : function() {

		if($educationSlider !== undefined ){
			if(isMobile){
				if ( !$educationSlider.hasClass('slick-initialized') ){
					$educationSlider.slick({
						dots:true,
						slidesToShow:1,
						infinite:true
					});
				}
			}else{
				
				if ( $educationSlider.hasClass('slick-initialized') ){
					$educationSlider.slick('unslick');
				}

			}
		}


	},
	finalize : function() {
	}
}
var $educationSlider;
var filter = {}, regionArray = [], industryArray = [], technologyArray=[];
var storyData, selectedData, selectedArray = [], selectedLength, updateLength, currentLength, storyHtml, loadVal, firstLoad = true, loadMore = false;

var successStoriesFn = {
	init: function(){
		// console.log('successStoriesFn');

		//object.keys polyfill
		if (!Object.keys) {
			Object.keys = (function() {
			'use strict';
			var hasOwnProperty = Object.prototype.hasOwnProperty,
				hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),
				dontEnums = [
					'toString',
					'toLocaleString',
					'valueOf',
					'hasOwnProperty',
					'isPrototypeOf',
					'propertyIsEnumerable',
					'constructor'
				],
			dontEnumsLength = dontEnums.length;

			return function(obj) {
				if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {
					throw new TypeError('Object.keys called on non-object');
				}

				var result = [], prop, i;

				for (prop in obj) {
					if (hasOwnProperty.call(obj, prop)) {
						result.push(prop);
					}
				}

				if (hasDontEnumBug) {
					for (i = 0; i < dontEnumsLength; i++) {
						if (hasOwnProperty.call(obj, dontEnums[i])) {
							result.push(dontEnums[i]);
						}
					}
				}
				return result;
				};
			}());
		}

		// function for sticky filter
		$searchListFilter = $('.success-stories .sticky-filter');
		$searchListFilter.waypoint(function(direction) {

			//console.log(direction);
			if(direction == 'down') {
				$searchListFilter.addClass('sticky');
			 $('.search-filter-target').css({'marginTop':'80px'});
				$('#header').slideUp();
			} else {
				$searchListFilter.removeClass('sticky');
				$('.search-filter-target').removeAttr('style');
				$('#header').slideDown();
			}
		}, {
			offset: headerDesktopHeight*1.5
		})

		var $primaryDD = $('#primary-select');
				
		$.ajax('js/data/about-success.json', {
			dataType: 'json',
			success: function(data){

				//sorting data to alphabetical order
				storyData = data;
				function compare(a,b) {
					if (a.title < b.title)
						return -1;
					if (a.title > b.title)
						return 1;
					return 0;
				}

				storyData.sort(compare);

				var primaryHtml = '';
				var first = 1, selected;

				$.each(data, function(primary, planObj){
					// pushing all filter type into arrays
					regionArray.push(planObj.region);
					industryArray.push(planObj.industry);
					technologyArray.push(planObj.technology);
					
				});

				// calling cleanArray which claens up dup entry in secondary array
				filter.industry = cleanArray(industryArray).sort();
				filter.region = cleanArray(regionArray).sort();
				filter.technology = cleanArray(technologyArray).sort();
				
				//function to remove dup from secondary array
				function cleanArray(array) {
					return array.reduce(function(a,b){if(a.indexOf(b)<0)a.push(b);return a;},[]);
				}

				//console.log(filter.technology);

				//populate primary filter
				$.each(filter, function(index, primaryFilterVal){
					primaryHtml += '<option value="' + index + '">' + index + '</option>';
				});

				//appending primary filter + creating dropdown
				$primaryDD.html(primaryHtml);
				new DropDown($primaryDD.closest('.dd'));

				//primary filter click function SYtodo
				$primaryDD.siblings('.dropdown').find('li').on('click', function(){
					loadMore = false;
					currentLength = 0;
					selectedLength = loadVal;
					var $this = $(this);
					var selectedPrimary =$this.data('value');
					successStoriesFn.updateFilter($this.data('value'));
					
				});

				var primary = decodeURIComponent(getUrlVars()['primary']);
				if(primary === 'undefined'){
					primary = $primaryDD.val();
				}
				$primaryDD.siblings('.dropdown').find('[data-value="' + primary + '"]').trigger('click');
			}
		})
		
		$('.cta-load .button').on('click', function(){
			loadMore=true;
			updateLength = currentLength + loadVal;
			if (updateLength <= selectedLength) {
				//run function to append in more articles
				successStoriesFn.appendHtml(updateLength, currentLength, selectedArray);
			} else if (updateLength > currentLength) {
				//run funciton to add in left over 
				successStoriesFn.appendHtml(selectedLength, currentLength, selectedArray);
				$(this).css({'display':'none'});
			}
		})
	},

	updateFilter: function(obj){
		// console.log(storyData);
		var $secondaryDD = $('#secondary-select');
		var secondaryHtml = '';
		
		$.each(filter[obj], function(index, value){
			
			secondaryHtml += '<option value="' + value + '">' + value + '</option>';
		});
		$secondaryDD.html(secondaryHtml)
		new DropDown($secondaryDD.closest('.dd'));

		successStoriesFn.populateHtml(filter[obj][0], obj);
		
		$secondaryDD.siblings('.dropdown').find('li').on('click', 
			function(){
				loadMore = false;
				currentLength = 0;
				selectedLength = loadVal;
				var $this = $(this);
				var selectedSecondary = $this.data('value');
				successStoriesFn.populateHtml(selectedSecondary, obj);
		});

	},

	populateHtml: function(name, obj){
		// console.log('populateHtml');
		storyHtml = '';
		selectedData = {};
		selectedArray = [];

		selectedObj = String(obj);
		$.each(storyData, function(index, value){ 

			if (value[selectedObj] == name) {
				selectedData[index] = value;
				selectedArray.push(index);
			}
		});
		successStoriesFn.appendHtml(loadVal, 0, selectedArray);
	},

	appendHtml : function(max, min, full){
		// console.log('appendHtml');
		// console.log(currentLength + ' currentLength ');
		// console.log(selectedLength + ' selectedLength ');
		// console.log(updateLength + ' updateLength ');
		if (selectedData !== undefined) {
			var count = 0;
			if ( max > selectedLength) {
				max = selectedLength;
			}

			for(var i=min; i<max; i++){
					storyHtml += '<div class="story" data-region="' + selectedData[selectedArray[i]].region + '" data-industry="' + selectedData[selectedArray[i]].industry + '" data-technology="' + selectedData[selectedArray[i]].technology + '">';
					storyHtml += '<h4 class="header-text-small">' + selectedData[selectedArray[i]].title + '</h4>';
					storyHtml += '<p>' + selectedData[selectedArray[i]].desc + '</p>';
					storyHtml += '<div class="links">'
					$.each(selectedData[selectedArray[i]].link, function(index, value){ 
						if (index == 'video') {
							//add in other html for video
							storyHtml += '<p><a href="' + value + '" class="video">' + index + '</a></p>';
						} else {
							// all other static links
							storyHtml += '<p><a href="' + value + '">' + index + '</a></p>';
						}
					});
					storyHtml += '</div>';
					storyHtml += '</div>';
					currentLength = i+1 ;
		//       if (count>=selectedLength || count >=max) {
		//          return f alse;
		//       }
			// 	}
			// 	
			}

			if (loadMore == false) {
				// replaces all html 
				$('.success-stories-container').html(storyHtml);
				//shows load more button
				$('.cta-load .button').css({'display':'block'});
				} else {
					$('.success-stories-container').append(storyHtml);
			}
			// total number of articles
			selectedLength = Object.keys(selectedData).length;
			$('.cta-load .total ').html(selectedLength);
			//current articles displayed 
			$('.cta-load .current ').html(currentLength);
			
			//hides load more button if articles are fully loaded
			if (selectedLength <= currentLength) {
				$('.cta-load .button').css({'display':'none'});
			}
			storyHtml ='';
		}
	},

	scroll : function(){
	},
	rescale : function() {
		if($(window).width() > 768) {
			loadVal = 10;
		} else {
			loadVal = 5;
		}

		if (firstLoad == true) {
			successStoriesFn.appendHtml(loadVal, 0, selectedArray);
			firstLoad = false;
		}
	},
	finalize : function() {
	}
}
/* Author: POSSIBLE */

/* COMMON */
//@prepros-prepend ../../../includes/js/lib/_modenizr.2.8.3.js
//@prepros-prepend ../../../includes/js/lib/_jquery.input-placeholders.js
//@prepros-prepend ../../../includes/js/lib/_jquery.waypoints.js


/* TEST CASES */
//@prepros-append ../../../includes/js/_testcase.js

/* COMPONENTS */
//@prepros-prepend ../../../includes/js/components/_takeover.js
//@prepros-prepend ../../../includes/js/components/_header-footer.js
//@prepros-prepend ../../../includes/js/components/_menu.js
//@prepros-prepend ../../../includes/js/components/_contactus.js
//@prepros-prepend ../../../includes/js/components/_popup.js
//@prepros-prepend ../../../includes/js/components/_quick-access-panel.js

/* GLOBAL */
//@prepros-prepend ../../../includes/js/utils/_custom.js

/* ROUTES */
//@prepros-prepend ../../../includes/js/routes/_home.js
//@prepros-prepend ../../../includes/js/routes/_common.js
//@prepros-prepend ../../../includes/js/routes/_evaluation.js
//@prepros-prepend ../../../includes/js/routes/_careers.js
//@prepros-prepend ../../../includes/js/routes/_office-map.js
//@prepros-prepend ../../../includes/js/routes/_education-plan.js
////@prepros-prepend ../../../includes/js/routes/_success-stories.js

var Routes = {
	'common' : commonFn, // from _common.js
	//'home' : homeFn, // from _home.js
	'evaluation' : evaluationFn, // from _evaluation.js
	'careers' : careersFn, // from _careers.js
	'about-office' : officeFn, // from _office-map.js
	'education-plan-path' : educationPlanFn, // from _education-plan.js
	'success-stories' : successStoriesFn // from _success-stories.js
}

if(!$('.home').length == 0) {
	Routes.home= homeFn // from _home.js
}
var modules = {}

// kick it all off here
$(window).smartresize(function() {
	UTIL.loadEvents('rescale');
});

$(window).on('load',function() {
	UTIL.loadEvents('rescale');
});

$(window).on('scroll',function() {
	UTIL.loadEvents('scroll');
});

$(document).ready(function() {
	UTIL.loadEvents();
});

/* MODULES */
//@prepros-append modules/overlay.js
//@prepros-append modules/mobile-list.js
//@prepros-append modules/quicklink.js

var test = {
	user_logged_in: function(){
		$('#header').attr('login-state', 'signed-in');
		updateSSOPosition();

		// implemented condition as it breaks on non-responsive templates
		if (typeof updateMyBrocadePanel !== "undefined") updateMyBrocadePanel();
	},
	user_logged_out: function(){
		$('#header').attr('login-state', 'signed-out');
		updateSSOPosition();

		// implemented condition as it breaks on non-responsive templates
		if (typeof updateMyBrocadePanel !== "undefined") updateMyBrocadePanel();
	},
	contact_success: function(){
		showContactUsFormSuccess();
	},
	contact_fail: function(){
		showContactUsFormFailure();
	}
};
$(window).load(function(){
	switch(querystring.test) {
		case "user_logged_in":test.user_logged_in(); break;
		case "user_logged_out":test.user_logged_out(); break;
		case "contact_success":test.contact_success(); break;
		case "contact_failure":test.contact_fail(); break;
	}
});

function mod_overlay() {
	var target, targetClass;
	mod = this;

	mod.init = function(){

		var customAnimateSpeed = (Modernizr.touch) ? animateSpeed : animateSpeed*2;

		// Takeover button
		$('.btn-takeover').on('click', function(e){

			e.preventDefault();

			target = $(this).attr('data-takeover');
			targetClass = '.takeover-' + target;

			// If Mobile Quick Links Share < 768px or any other takeover
			if((target == 'share' && !Modernizr.mq('(min-width:600px)')) || target != 'share') {
				
				takeover(targetClass);

				// the first element in the slimscroll has to be display:block in order for smaller content to be scrolled. 
				$(targetClass + '.menu-lvl').wrap('<div class="menu-lvl-wrapper"></div>');

				if($(targetClass + ' .menu-inner-wrapper').find('table').length > 0) {
					// .table-container class added to wrapper if table content exists. This is to enable horrizontal scrolling in the takeover on desktop views
					$(targetClass + ' .menu-lvl-wrapper').addClass('table-container');
				}

				// get window height
				var winHeight = getWinHeight();

				// get window height without header
				var winHeightWithoutHeader_menu = winHeight - ((isMobile && !$('html.non-responsive').length)?headerMobileHeight:0);

				// menu
				$(targetClass + ' .slimScrollDiv').css('height', winHeightWithoutHeader_menu);
				$(targetClass + ' .menu-lvl ul li:last-child').css('padding-bottom', '');
				$(targetClass + ' .menu-lvl-wrapper').slimScroll({
					height:"auto"
				});
				if (isMobile && !$('html.non-responsive').length) {
					$(targetClass + ' .menu-lvl ul li:last-child').css('padding-bottom', function(){
						var ph = $(this).parents('.menu-lvl').css('height', 'auto').height();
						if (ph > winHeightWithoutHeader_menu) {
							$(this).css('padding-bottom', winHeightWithoutHeader_menu - $(this).parents('.menu-lvl').css('height', 'auto').height() );;
						}
					});
				} else {
					$(targetClass + ' .menu-lvl').css('height', '');
				}

				TweenMax.fromTo($(targetClass + ' .menu-lvl').parents('.slimScrollDiv'), customAnimateSpeed, {x:animateOffset, autoAlpha:0}, {display:'block', x:0, autoAlpha:1, ease:animateEase, onComplete: function(){
						if($(window).width() > 768) {
						$('.submenu').css('height', $('.submenu').closest('.row').height());
					}
				}});

				// Close button
				$(targetClass + ' .btn-close').on('click', function(e) {
					e.preventDefault();

					takeoverEnd(targetClass);
				});
			}
		})

		// Submenu button
		$('.submenu li:first-child a').addClass('active');
		$('.submenu li a').on('click', function(e){
			$(this).addClass('active').parent().siblings().find('a').removeClass('active');
			$('.resources-list.active').removeClass('active');
			$(this).closest('.takeover').find('.resources-list')
				.eq($(this).parent().index())
				.addClass('active');
		});

		$(window).resize(mod.resize);
		mod.resize();
		//$(window).trigger('resize');
	}

	mod.onLeave = function(){
	}

	mod.afterLoad = function(){
	
	}

	mod.resize = function() {
		// Adjust submenu height
		if($(window).width() > 768) {
			$('.submenu').css('height', $('.submenu').closest('.row').height());
		} else {
			$('.submenu').css('height', '100%');
			$('.submenu').css('height', 'auto');
		}

		// Quick Links Share button takeover menu
		if(Modernizr.mq('(min-width:600px)') && target=='share') {
			takeoverEnd(targetClass);
		} else {
			if ($('.quick-links-share-dd').hasClass('is-opened') && $('.takeover-share').css('display') !== 'block') {
				takeover(targetClass);
			}
		}
	}

	mod.init();
	return mod;
}
window.modules['overlay'] = new mod_overlay();
function mod_mobile_list() {

	var submenuHeight = 0;

	mod = this;

	mod.init = function(){

		$('.mobile-list').each(function(){

			if(!$(this).hasClass('mobile-list--half')) {
				$(this).find('.mobile-list-selected span').html($(this).find('ul li:first-child a').text());
			} else {
				$(this).find('.mobile-list-selected span').html('Quick Links');
			}	
		})

		$('.mobile-list li a').on('click', function(e){

			var $el = $(this).closest('.mobile-list');

			e.preventDefault();

			// Mobile dropdown
			if(!$el.hasClass('mobile-list--half')) {
				$el.find('.mobile-list-selected span').html($(this).text());
			}
			
			if(!Modernizr.mq('(min-width:600px)')) {
				$el.find('ul').slideUp('fast', 'easeInOutExpo');
			}

			$el.find('.mobile-list-selected').toggleClass('open');
		})

		$('.mobile-list-selected').on('click', function(){
			
			var $el = $(this).closest('.mobile-list');
			$(this).toggleClass('open');
			$el.find('ul').slideToggle('fast', 'easeInOutExpo');
		})

		$(window).resize(mod.resize);
	}

	mod.onLeave = function(){
	}

	mod.afterLoad = function(){
		
	}

	mod.resize = function() {
		if($(window).width() > 768) {
			$('.mobile-list ul').show();
		} else {
			$('.mobile-list ul').removeAttr('style');
		}
	}

	mod.init();
	return mod;
}
window.modules['mobile-list'] = new mod_mobile_list();
function mod_quicklink() {

	mod = this;

	mod.init = function(){

		$('.quick-links-share').on('click', function(e){
			e.preventDefault();

			var $this = $(this);

			// Desktop Only
			if((Modernizr.mq('(min-width:600px)'))) {
				$this.siblings('.quick-links-share-dd').toggleClass('is-opened');
			}
			
		})

		$('.quick-links-share-dd a').on('click', function(e){
			$('.quick-links-share-dd').removeClass('is-opened');
		})

		$(document).on('click', function(event) {
		  if (!$(event.target).closest('.quick-links-share-dd').length && !$(event.target).closest('.quick-links-share').length) {
		    $('.quick-links-share-dd').removeClass('is-opened');
		  }
		});
	}

	mod.onLeave = function(){
	}

	mod.afterLoad = function(){
	
	}

	mod.init();
	return mod;
}
window.modules['quicklink'] = new mod_quicklink();

$('.evals-overflow').slimScroll({
        						height: '350px',
								distance : '1px',
								railVisible: true,
    							alwaysVisible: true
    						});