mmcore.SetCookie('mmid','-1637362254|AQAAAApMvHT7MQwAAA==',365,1);mmcore.SetCookie('pd','177500402|AQAAAAoBQky8dPsxDLQjCDIBACpmoZ5TkNJIDwAAACpmoZ5TkNJIAAAAAP//////////ABd3d3cuYW1lcmljYW5leHByZXNzLmNvbQIxDAEAAAAAAAAAAAAA////////////////AAAAAAABRQ==',365);mmcore.SetCookie('srv','cg5.usw',365);(function(){if(typeof(mmcore.GenInfo)!='object')mmcore.GenInfo={};mmcore.EH=function(e){var s=e.message+'\r\n';if(!window.mm_error)window.mm_error=s;else window.mm_error+=s;};
try{
;(function(){
	mmcore.eventPool = {};
	mmcore.eventListeners = {};

	mmcore.trigger = function(event_type, event_data, callback){
		this.eventPool[event_type] = {
			event_data: event_data,
			callback: callback
		};	

		this.eventListeners[event_type] = this.eventListeners[event_type] || [];

		for(var i = 0; i < this.eventListeners[event_type].length; i++){
			this.eventListeners[event_type][i](event_data);
		}
		callback && callback();
	};

	mmcore.on = function(event_type, callback){
		var lastData = this.eventPool[event_type];

		if(lastData){
			callback(lastData.event_data);
			setTimeout(function(){
				lastData.callback && lastData.callback();
				lastData.callback = null;
			}, 0);
		}
		
		this.eventListeners[event_type] = this.eventListeners[event_type] || [];
		this.eventListeners[event_type].push(callback);
	};

})();
}catch(err){mmcore.EH(err);}
try{
;(function(){
    mmcore.omniture = function(campaign_name){
        var info = [];
        for(var key in mmcore.GenInfo[campaign_name]){
            info.push(key + '_' + mmcore.GenInfo[campaign_name][key]);
        }
        if(window.omn == null || typeof(window.omn) == "undefined")
            window.omn = new Object();

        window.omn_abtest = omn.abtest = campaign_name + ':' + info.join(' | ');
    }
})();
}catch(err){mmcore.EH(err);}
try{
;(function(){
	function bind(el, func){
		if(el.addEventListener){
			el.addEventListener('beforeprint', func, false);
		}else if(el.attachEvent){
			el.attachEvent('onbeforeprint', func);
		}	
	}

	if(navigator.userAgent.match(/msie/i)){
		bind(window, function(){
			var nodes = document.getElementsByTagName('script');
			for(var i = nodes.length; i--;){
				if((nodes[i].id || '').match(mmcore.cprefix))
					nodes[i].removeAttribute('src');
			}
		});
	}
})();
}catch(err){mmcore.EH(err);}
try{
;(function () {
	mmcore.snippets = mmcore.snippets || {};
	mmcore.snippets.Style = function (css) {
		var doc = document, st = doc.createElement("style");
		st.type = "text/css";
		st.media = "screen";
		function attach(css) {
			if (st && css) {
				if (st.styleSheet) {
					st.styleSheet.cssText += css;
				} else {
					st.innerHTML += css;
				}
			}
		}

		function detach() {
			st && st.parentNode.removeChild(st);
			st = null;
		}

		attach(css);
		var mm = doc.getElementById(mmcore.cprefix + 1);
		mm.parentNode.insertBefore(st, mm);
		return {
			attach: attach,
			detach: detach
		}
	}
}());
}catch(err){mmcore.EH(err);}
try{
;(function () {
    mmcore.snippets = mmcore.snippets || {};
    mmcore.snippets.setClickAction = function (targetLink, name, value, attr) {
        var bind = function (node, type, fn) {
            var listener = function (event) {
                var e = event || window.event;
                if (fn.call(node, e) === false) {
                    if (e.preventDefault) {
                        e.preventDefault();
                    } else {
                        e.returnValue = false;
                    }
                }
            };
            if (node.addEventListener) {
                node.addEventListener(type, listener, false);
            } else if (node.attachEvent) {
                node.attachEvent("on" + type, listener);
            }
        };
        var request = function (callback) {
            var willExecuted = true;
            var callbackExecutor = function () {
                willExecuted && callback();
                willExecuted = false;
            };
            setTimeout(callbackExecutor, 2000);
            mmcore._async = true;
            mmcore.SetPageID('mmevents');
            mmcore.CGRequest(callbackExecutor);
        };
        bind(targetLink, 'click', function () {
            attr = attr || '';

            mmcore.$Action(name, value, attr);

            if (targetLink.target !== '_blank' || /#|^javascript:void\(/i.test(targetLink.href)) {
                request(function () {
                    if (/Firefox/.test(navigator.userAgent)) {
                        location.hash = 'mm';
                    }
                    window.location.assign(targetLink.href);
                });
                return false;
            }
        });
    };
}());
}catch(err){mmcore.EH(err);}
try{
mmcore.on('linkedin:click', function (data) {
    mmcore.SetAction('T38OFRegStart', 1, 'LinkedIn');
});

mmcore.AddDocLoadHandler(function waitForJQuery() {
    var $ = window.jQuery;
    if(!$) return setTimeout(waitForJQuery, 50);
  
    var helper = {},
        link;

    helper.triggering = function (eventName, callback) {

        mmcore.trigger(eventName, {}, function () {
            mmcore._async = true;
            mmcore.SetPageID('mmevents');
            mmcore.CGRequest(function () {
                if (callback && typeof(callback) === "function") callback();
            });
        });
    };

    helper.restore = function () {
        $('.signup-with-linkedin').attr('href', link);
        $('.signup-with-linkedin').click();
    };

    function requestToCG (actionName, val, attr) {
        attr = attr || '';

        mmcore._async = true;
        mmcore.SetAction(actionName, val, attr);
        mmcore.SetPageID('mmevents');
        mmcore.CGRequest();
    }

    //mobile & tablets
    //action T38OFRegStart via Email process
    $(document).on('click', '.signup-with-email', function () {
        requestToCG('T38OFRegStart', 1, 'Email');
    });

    //mobile & tablets
    //action T38OFRegStart via Linkedin
    $(document).on('click.linkedin', '.signup-with-linkedin' ,function () {

        link = $(this).attr('href');

        $(this).removeAttr('href');

        $(document).off('click.linkedin');

        helper.triggering('linkedin:click', helper.restore);
    });
});
}catch(err){mmcore.EH(err);}
try{
;
(function () {    
    if (mmcore.GetCookie('mm_test_38', 1)) {
        return;
    }    

    var style = mmcore.snippets.Style('body {position: relative; left: -9999px;}'),
        show = function () {
            style && style.detach();
        };

    setTimeout(show, 2000);
        
    mmcore.SetPageID('T45OPENFConsolRegFlowAB ID');
    mmcore.CGRequest(function () {        
        mmcore.AddDocLoadHandler(function () {            
        	mmcore.SetCookie('mm_test_45', 1, 365, 1);
        	setTimeout(show, 0);
        });
        //Immediately apply the variant code
        mmcore.RenderMaxyboxes('mm_funnel');
    });
})();
}catch(err){mmcore.EH(err);}
if(typeof mmcore._callback=='object'&&typeof mmcore._callback[1]=='function'){try{mmcore._callback[1]();}catch(err){mmcore.EH(err);}
finally{mmcore._callback[1]=null;}}
})();